#!/bin/sh
exec  >>/tmp/CDF_migrate1.`date +'%s'` 2>&1 <&-

set -u

if [ "${1:-}" = "-x" ] ; then set -xv; shift; fi
if [ -z "${1:-}" ] ; then echo `date` Usage $0 '<volume|file-with-list-of-volumes>' ; exit 1; fi

#tape=$1
if [ -r $1 ]; then
 f=$1
 removef=0
else
 f=/tmp/f.$$.`date +"%s"`
 removef=1
 rm -f $f
 echo $1 >$f
fi

#tape=$1
cat $f | while read tape; do 
echo `date` Starting tape $tape 

log=/tmp/$tape.migrate
gotit=/tmp/$tape.gotit.$$
status=/data1/status
copy=$status/$tape.copy2b
done=$status/$tape.done
stop=$status/$tape.stop
halt=$status/HALT

if [ -r $halt ]; then echo `date` ERROR: $halt exists ... trouble; exit 0; fi

if [ -r $done ]; then 
    echo `date` $tape already migrated 
    #exit 0
    continue
fi

if [ -r $copy ]; then
   $ENSTORE_DIR/test/CDF_migration/migrate_tape -v $tape >> $log 2>&1
   rc=$?
   if [ $rc -eq  0 ]; then
      echo `date` $tape already ready for migrating
      #exit 0
      continue
   else
      echo `date` $tape NOT ready, but copy2b file found. doing rm $copy
      rm $copy
   fi
fi

$ENSTORE_DIR/test/CDF_migration/migrate_tape -v $tape >> $log 2>&1
rc=$?
if [ $rc -eq 0 ]; then
   echo `date` $tape already ready for migrating
   touch $copy
   #exit 0
   continue
fi

echo `date` Starting to get files from $tape

$ENSTORE_DIR/test/CDF_migration/migrate_tape -l $tape >> $log 2>&1

rm -f $gotit
max_try=10
try=0
while [ $try -le $max_try ]; do
  try=`expr $try + 1`
  if [ `enstore vol --vol $tape| grep -c NOACCESS` -ne 0 ]; then
      echo `date` Clearing NOACCESS from $tape assuming trouble reading 
      enstore vol --clear $tape
      sleeptime=600
      echo `date` Sleeping for $sleeptime to allow tape to go back to home position
      sleep $sleeptime
  fi

  $ENSTORE_DIR/test/CDF_migration/migrate_tape -0 -a -g -v $tape >> $log 2>&1
  $ENSTORE_DIR/test/CDF_migration/migrate_tape -v $tape >> $log 2>&1
  rc=$?
  if [ $rc -eq 0 ]; then
     touch $copy
     touch $gotit
     continue
  fi
done

if [ -r $gotit ]; then
    rm $gotit
    #exit 0
    continue
else
    #exit 1
    continue
fi

done
if [ $removef -eq 1 ]; then rm $f; fi
