#!/bin/sh
if [ "${1:-}" = "-x" ] ; then set -xv; shift; fi

usage="USAGE: $0 base_write_dir_path write_file_list sleep_time"

if [ -n "${1-}" ] ; then
    base=$1
else
    echo "$usage"
    exit 1
fi

if [ -n "${2-}" ] ; then
    write_list=$2
else
    echo "$usage"
    exit 2
fi

if [ -n "${3-}" ] ; then
    sleep_time=$3
else
    echo "$usage"
    exit 3
fi

set -u  # force better programming and ability to use check for not set

p=`uname -n``echo $$`


while /bin/true; do
    cat $write_list | while read f; do
        if [ -r writestop ] ; then exit 2; fi
        fb=`basename $f`
        output=$base/${fb}__`date +"%b%d%H%M%S"`$p
	if [ `$ENSTORE_DIR/test/aran.sh 0 1` -eq 0 ] ; then
          ecmd encp $f $output
        else
          priority=`$ENSTORE_DIR/test/aran.sh 1 10`
          delpri=`$ENSTORE_DIR/test/aran.sh 1 10`
          age=`$ENSTORE_DIR/test/aran.sh 1 6`
          agetime=`expr $age \* 10 `
          if [ `$ENSTORE_DIR/test/aran.sh 0 1` -eq 0 ] ; then
            crc=""
	  else
	    crc="--crc"
          fi
          if [ `$ENSTORE_DIR/test/aran.sh 0 5` -eq 0 ] ; then
            delayed_dismount=""
	  else
	    delayed_dismount="--delayed_dismount=1"
          fi
	  cmd="ecmd encp --pri $priority --delpri $delpri --agetime $agetime $crc $delayed_dismount $f $output"
	  echo $cmd
	  eval $cmd
        fi
	ec=$?
        if [ $ec -ne 0 ] ; then
            echo encp error code $ec
            exit $ec
        fi
	if [ $sleep_time -lt 0 ] ; then
	  st=`$ENSTORE_DIR/test/aran.sh 0 90`
        else
          st=$sleep_time
        fi
        sleep $st
    done
    ec=$?
    if [ $ec -ne 0 ] ; then
       echo "FINISHED $base"
       exit $ec
    fi
done
