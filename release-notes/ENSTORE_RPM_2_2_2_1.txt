<html><body><pre>
                      Enstore release notes, from ENSTORE_RPM_2_1_1_1 to ENSTORE_RPM_2_2_2_1
                      Detailed cvs commit logs

The only difference between ENSTORE_RPM_2_2_2_1 and ENSTORE_RPM_2_1_2_1 is that
ENSTORE_RPM_2_2_2_1 ncludes ftt for T10KC

.
========== rpm_version ====================================================================================

Version="2.1.2" Release="1" 

version 2.1.2 release 0 

./databases/schemas/ddl/enstoredb
========== enstoredb_functions.sql ====================================================================================

trigger on update on file table will change modification_time in volume table. 
Needed because "enstore file --bfid --deleted yes" would not change the modification_time 
and volume would not be reported in RECYCLABLE_VOLUMES 
http://uqbar/reviews/r/305/ http://www-ccf.fnal.gov/Bugzilla/show_bug.cgi?id=752 

./src
========== chimera.py ====================================================================================

Make the "enstore pnfs --id" and "enstore sfs --id" commands work with enstore executable built for dCache use. 
(bugzilla #986 review board #298) 

At one point in pnfs.py and chimera.py it tries to make a copy of an object. This object is a dictionary, 
but the copy is attempted as if it is a list. The dictionary copy() method is now used. (bugzilla #956, review board #276) 

========== enstore_display.py ====================================================================================

1) Turn the dictionary for storing client colors into a list. This allows the .entvrc file writer 
to choose the order that color rules are applied. For example, if the user wants cmsstor12 to have 
a special color, then that rule would need to go before the more general rule of cmsstor[1-9]* to display correctly. 
2) Add implicit beginning of line (^) and end of line ($) regular expression characters 
to turn cmsstor12 into ^cmsstor12$ for matching. This has the effect of preventing nodes 
like cmsstor121 from inadvertently matching cmsstor12. (bugzilla #961, review board #280) 

========== enstore_functions3.py ====================================================================================

moved file_id2path from mover.py to enstore_functions3.py (bz 976). 

========== entv.py ====================================================================================

1) Turn the dictionary for storing client colors into a list. This allows the .entvrc file writer 
to choose the order that color rules are applied. For example, if the user wants cmsstor12 to have 
a special color, then that rule would need to go before the more general rule of cmsstor[1-9]* to display correctly. 
2) Add implicit beginning of line (^) and end of line ($) regular expression characters 
to turn cmsstor12 into ^cmsstor12$ for matching. This has the effect of preventing nodes 
like cmsstor121 from inadvertently matching cmsstor12. (bugzilla #961, review board #280) 

========== find_pnfs_file.py ====================================================================================

Find paths for files that had originally been written with /pnfs/fnal.gov/usr/ style 
paths on nodes without /pnfs/fs mounted. (bugzilla #959, review board #277) 

========== library_manager.py ====================================================================================

BUG FIX: typo in variable name Typo in variable name caused incorrect request processing. 
This resulted in work not being assigned to movers if fair share for processed request was exceeded. 

In some cases admin priority request gets skipped if the request for a given label or file family 
is already in self.processed_admin_requests. This actually is not correct. If current request is 
from a different client host than the request in self.processed_admin_requests it must get 
processed and checked against discipline and not just skipped. This bug was inherited from 
library manager version preceeding Scalable Library Manager. (bz 977) 

BUG FIXED: Library Manager does not respect discipline rules for write requests if request 
being processed exceeds fair share.(bz 972). 

Library manager was ignoring suspect volume rules for read requests. 
Fix: Do not assign request to the mover declared in the list of suspect volumes. (bz 967) 

The logic was assuming permissions as array of 2 arrays like [['e1','e2'],['e3','e4']], 
while it actually is array of 2 strings: 201 Fri Jan 14 14:31:24 2011.70 busy_volumes: 
permissionss ['none', 'none'] Thread process_mover_requests where ei - is some string, 
representing state of volume system_inhibit. (bz 944). 

Put a volume into susspect volume list on positioning error from mover. 
When not done so the defective tape put lots of movers offline. (bz 947) 

========== log_finish_event.py ====================================================================================
yet another piece of code was discovered to be broken by changes to option.py that caused 
havoc in the codes that used Interface to instantiate clients.
The problem is that ecron was failing to execute 
$ENSTORE_DIR/src/log_finish_event.py ${tag} $code
call then it contained negative $code. The error looks like so:
[root@d0ensrv3n sbin]# $ENSTORE_DIR/src/log_finish_event.py "unknown" -2
option -2 not recognized
Usage: 
       log_finish_event.py [ -th --help --opt --test[=] --usage ] 

Not a single negative status was logged to DB since quite some time as the result. (bz 962)


========== manage_queue.py ====================================================================================

BUG FIX: thread syncronization problem in Queue. It was observed that if one thread meakes put and 
another delete or update the tags list may have 2 identical entries. If the corresponding request 
gets selected and deleted later the "orphan" entry for this request stays in tags without reference 
to the original requests in the queue. This results in the indefinite loop inside if the queue selection. (bz 992) 

BUF FIX: negative max_index causes indefinite loop in Atomic_Request_Queue.get When last entry is 
deleted from tags max_index in line 366 can become negative, setting self.current_index and 
self.start_index to a negative value too. Then new entries are added to tags sorted list. 
When Atomic_Request_Queue.get is called with list of active_volumes same as in tags, 
the while loop in line 904 is entered. This loop never exits. The reason is: 
SortedList._get_next will never set self.stop_rolling flag to 1, because it is 
always > self.start_index, thus allowing selection of already selected requests.(bz 975). 

========== media_changer.py ====================================================================================

Catch exception in STK listVolumes(). (bugzilla #960, review board #279) 

========== migrate.py ====================================================================================

Useful patch to have the migration logging functions use the Trace.py logging functions internally. 
This keeps the output in sync between threads. (bugzilla #931, review board #266) 

========== mover.py ====================================================================================

Improvement:alarm should say which mover for READ_VOL1_READ_ERR (bz 958). 

Fixed bug for reopened bz 950. 

Control calcuation of CRC for read/assert operations. Default 0: calculate CRC when writing to 
network (was when reading from tape). Mover configuration parameter: "read_crc_control" value: 0/1 

========== namespace.py ====================================================================================

Make the "enstore pnfs --id" and "enstore sfs --id" commands work with enstore executable built 
for dCache use. (bugzilla #986 review board #298) 

========== pnfs_agent.py ====================================================================================

1) A missing return in readlayer(). 
2) KeyError used instead of e_errors.KEYERROR in readlayer(). 
3) find_pnfs_file.BOTH should be enstore_constants.BOTH in find_pnfsid_path(). (bugzilla #993, review board #303) 

========== pnfs.py ====================================================================================

Fixed "enstore sfs --path" or "enstore pnfs --path" when the pnfsid belongs to a regular 
file or directory in one PNFS server, but to a tag or layer in a second PNFS server where 
both PNFS servers need to have a at least one database mounted, but the second one does 
not have the correct databases mount point mounted. Now the fully resoved path from server 
one will be returned instead of the error "No such file or directory". (bugzilla #988, review board #299) 

In get_directory_name() if the directory consists of something like "." 
then the correct parent directory is not returned. (bugzilla #974, reveiw board #290) 

Make the "enstore pnfs --id" and "enstore sfs --id" commands work with enstore executable 
built for dCache use. (bugzilla #986 review board #298) 

The "enstore pnfs --path" fails to give the path of a file if the file is located under 
3 or more PNFS databases. (bugzilla #970, review board #287) 

At one point in pnfs.py and chimera.py it tries to make a copy of an object. 
This object is a dictionary, but the copy is attempted as if it is a list. T
he dictionary copy() method is now used. (bugzilla #956, review board #276) 

========== scanfiles.py ====================================================================================

A migrated file that has its destination copy deleted by the user before it was scanned 
was giving incorrect reasons for the error. This is now reported as a warning that the 
destination just needs to be scanned for the source file to be marked deleted. (bugzilla #969, review board #286) 

1) If a primary file (with multiple copies) was replaced with a new file an error was 
reported where everything is okay. (bugzilla #955) 
2) Older files did not put the drive and CRC information into layer 4. 
These are not fatal to encp, but lets warn about them. (bugzilla #955) 
3) For multiple copy files we need to look for the original copies pnfsid in case they are not the same. (bugzilla #957) 

========== Trace.py ====================================================================================

Useful patch to have the migration logging functions use the Trace.py logging functions internally. 
This keeps the output in sync between threads. (bugzilla #931, review board #266) 

./tools
========== fix_tag_inheritance.sh ====================================================================================

Have fix_tag_inheritance report a different message for tags that had inheritance restored. (bugzilla #984, review board #297) 

If a broken/invalid tag is found by the script, it was not getting fixed if the parent ID was set. 
This patch goes a step further and reads the tag (to test if it is invalid or not) and fixes it 
if necessary. (bugzilla #966, review board #282) 

./spec
========== enstore.spec ====================================================================================

Version="2.1.2" Release="1" 

version 2.1.2 release 0 

./etc
========== config_params.html ====================================================================================

Added description of 'read_crc_control' mover configuration key 

./sbin
========== choose_ran_file ====================================================================================

Correct spelling of inaccessable to inaccessible in choose_ran_file. (bugzilla #968, review board #285) 

If alsofirstlast is not included on the command line copy_ran_file fails. 
This patch fixes the unbound variable error. (bugzilla #942, review board #270) 

========== create_database.py ====================================================================================

remove stripping of last character from IP string. 

========== encpCut ====================================================================================

Added missing $. Make sure directories are world writable. (bugzilla #983, reveiw board #296) 

========== install_enstore_rpm.sh ====================================================================================

default enstore rpm: enstore-2.1.2-1 

default enstore rpm: enstore-2.1.2-0 

========== pnfs_monitor ====================================================================================

Missing loop counter. It is possible the script may never exit without this patch. (bugzilla #989, review board #300) 

========== Vols ====================================================================================

Prevent this script from appending the robot volume inventory to the end of the 
existing *-VOLUMES.html output file. (bugzilla #949, review board #291) 

</pre></body></html>
