<html><body><pre>
                      Enstore release notes, from ENSTORE_RPM_3_0_2_0 to ENSTORE_RPM_3_1_2_1
                      Detailed cvs commit logs


./src
========== accounting_client.py ====================================================================================

http://uqbar/reviews/r/653/ add reads/writes per storage group per mount. 

========== accounting.py ====================================================================================

http://uqbar/reviews/r/653/ add reads/writes per storage group per mount. 

========== accounting_server.py ====================================================================================

http://uqbar/reviews/r/653/ add reads/writes per storage group per mount. 

========== edb.py ====================================================================================

Allow partial update of file record based on subset of keys 

========== encp.py ====================================================================================

BUG FIX: do not change unique id on timeout. This happens when encp re-submits a request (after 15 minutes if transfer did not start). 
Old behaviour: if encp gets a timeout communication with library manager it changes unique id before re-submitting request. 
If library manager already had a request from this encp it will queue in the re-submitted request because it has a different unique id. 
This results loosing synchronization in communication between mover and encp and encp errors out with TOO MANY RETRIES. 
New behaviour: encp completes successfully. (bz 1303, rb 673) 

rb 660: add trace for start lock acquire /release 

========== enstore_constants.py ====================================================================================

Increase the maximal size of udp message and use it in migrator. As linux has progressed to support higher size of udp 
messages it is time to increase maximal udp message size for enstore. The sizes of enstore udp messages have increased 
although usually were not exceeding 16KB. Some messages though require ether bigger udp message size or fragmentation 
(as in set_cache_status). (bz 1283). 

========== enstore.py ====================================================================================

New implementation of file metadata scanner. (bz 1242) 

========== enstore_sfa_hud_cgi.py ====================================================================================

improve join query performance http://uqbar/reviews/r/664/ 

========== enstore_system_html.py ====================================================================================

skip disk media_type when querying for total/active bytes 

========== file_clerk.py ====================================================================================

Allow partial update of file record based on subset of keys 

added abiolity to modify list of file records 

improve join query performance http://uqbar/reviews/r/664/ 

Fix: query used in replay skips files with archive_status null http://uqbar.fnal.gov/reviews/r/662/ 

========== get_all_bytes_counter.py ====================================================================================

print Active/Total bytes 

========== library_manager.py ====================================================================================

BUG FIX: do not put mover in IDLE state into volumes_at_movers list. (bz 1284, rb 670) 

Two calls of is_vol_available were screwed up during last modification. This was noticed during encp regression test (bz 1289) 

Change and make configurable timeout and retry for volume clerk requests. This is to investigate and mitigate probelms 
with volume clerk communications described in bugzilla 1282 

========== migrate_chimera.py ====================================================================================

add CLI options --single-threaded-encp --proc-limit <N> 

rb 661: migration: add _0 to the name of the default thread 

add trace_options flags on command line (do_print, etc.) 

========== mover.py ====================================================================================

BUG FIX: Assert never worked with list of location cookies. It appears that this never has been tried and tested as we always 
were asserting the whole volume. (bz 1301, rb 669) 

Calculate number of file read/written per tape mount and report to accounting server. (bz 1291) 

http://uqbar/reviews/r/653/ add reads/writes per storage group per mount. 

BUG FIX: enstore logs indicate mover is set offline, but it continues anyways (bz. 1069) 

========== option.py ====================================================================================

add CLI options --single-threaded-encp --proc-limit <N> 

========== purge_files.py ====================================================================================

Improvement and bug fix: optimize query and fix bug defining how full is a cache. (bz 1299, rb 665) 

========== rawUDP_p.py ====================================================================================

Increase the maximal size of udp message and use it in migrator. As linux has progressed to support higher size of udp 
messages it is time to increase maximal udp message size for enstore. The sizes of enstore udp messages have increased 
although usually were not exceeding 16KB. Some messages though require ether bigger udp message size or fragmentation 
(as in set_cache_status). (bz 1283). 

========== rawUDP.py ====================================================================================

Increase the maximal size of udp message and use it in migrator. As linux has progressed to support higher size of udp 
messages it is time to increase maximal udp message size for enstore. The sizes of enstore udp messages have increased 
although usually were not exceeding 16KB. Some messages though require ether bigger udp message size or fragmentation 
(as in set_cache_status). (bz 1283). 

========== set_cache_status.py ====================================================================================

Use new file clerk feature allowing to modify list of records. This is a further scalability and performance improvement. (bz 1302, rb 671) 

Increase the maximal size of udp message and use it in migrator. As linux has progressed to support higher size of udp 
messages it is time to increase maximal udp message size for enstore. The sizes of enstore udp messages have increased 
although usually were not exceeding 16KB. Some messages though require ether bigger udp message size or fragmentation 
(as in set_cache_status). (bz 1283). 

========== sfa_plotter_module.py ============================================================================
Add total archived files and bytes to SFA statistic plots
(bz 1304, rb 674)

========== udp_client.py ====================================================================================

Increase the maximal size of udp message and use it in migrator. As linux has progressed to support higher size of udp 
messages it is time to increase maximal udp message size for enstore. The sizes of enstore udp messages have increased 
although usually were not exceeding 16KB. Some messages though require ether bigger udp message size or fragmentation 
(as in set_cache_status). (bz 1283). 

========== udp_server.py ====================================================================================

Increase the maximal size of udp message and use it in migrator. As linux has progressed to support higher size of udp 
messages it is time to increase maximal udp message size for enstore. The sizes of enstore udp messages have increased 
although usually were not exceeding 16KB. Some messages though require ether bigger udp message size or fragmentation 
(as in set_cache_status). (bz 1283). 

========== volume_assert.py ====================================================================================

BUG FIX: Assert never worked with list of location cookies. It appears that this never has been tried and tested as we 
always were asserting the whole volume. (bz 1301, rb 669) 

./src/cache/servers
========== migrator.py ====================================================================================

Use new file clerk feature allowing to modify list of records. This is a further scalability and performance improvement. (bz 1302, rb 671) 

BUG FIX: correct file system size information (bz 1300, rb 666) 

Fix file size in Trace.log(e_errors.INFO, "Finished tar from .... bz 1288 

Increase the maximal size of udp message and use it in migrator. As linux has progressed to support higher size of udp 
messages it is time to increase maximal udp message size for enstore. The sizes of enstore udp messages have increased 
although usually were not exceeding 16KB. Some messages though require ether bigger udp message size or fragmentation 
(as in set_cache_status). (bz 1283). 

./spec
========== enstore_python_2.7.spec ====================================================================================

Version 3.1.2 Release 1 

./etc
========== cdf.conf ====================================================================================


========== config_params.html ====================================================================================

Change and make configurable timeout and retry for volume clerk requests. This is to investigate and mitigate probelms 
with volume clerk communications described in bugzilla 1282 

./databases/schemas/xml
========== accounting.xml ====================================================================================

http://uqbar/reviews/r/653/ add reads/writes per storage group per mount. 

./doc/WWW
========== index-top.html ====================================================================================
</pre></body></html>
