<html><body><pre>
                      ENCP release notes, from RELEASE-2008-10-21 to RELEASE-2008-11-03

Encp changes:
=============


Misc.:
======


                      Detailed cvs commit logs


========== manage_queue.py ====================================================================================

do not allow more than MAX_RESCAN entries get updated per one call for better performance 

1. Fixed cyclic calls of update and put. 2. Changed the trace level. 

========== find_pnfs_file.py ====================================================================================

Handle tracebacks from pnfs.get_enstore_fs_path() and pnfs.get_enstore_pnfs_path(), to keep going instead of giving up early. This could happen when the file is moved/renamed. 

========== info_server.py ====================================================================================

Added find_migrated() functions so that the file_clerk and info_server can handle inquiries about migrated/duplicated files. 

========== inventory.py ====================================================================================

Fixed the generation of the recyclable volumes inventory page. 

========== file_clerk.py ====================================================================================

Added find_migrated() functions so that the file_clerk and info_server can handle inquiries about migrated/duplicated files. 

========== library_manager_client.py ====================================================================================

process result getwork in get_queue depending on the status 

========== mpq.py ====================================================================================

return if indexing error 

========== manage_queue.py ====================================================================================

do not allow more than MAX_RESCAN entries get updated per one call for better performance 

1. Fixed cyclic calls of update and put. 2. Changed the trace level. 

========== mover.py ====================================================================================

in single fm mode when switching from write to read mode skip back 1 position after writng a second fm. 

set self.saved_mode and self.mode before returning from finish_transfer_setup if connection to encp has failed. This is needed in a single fm mode to avoid confusion with tape prosition when switching from write to read. If this is not done and the first read after write fails, the second read attempts to write another filemark and fails. 

Small fix 

If data_ip corresponds to the same interface as host, the bindtodev does not work and causes "Connection reset" when thransferring files on the same machine where the mover runs. This fix checks whether data_ip and host refer to the same network card and does bindtodev only if NICs are different. 

========== library_manager.py ====================================================================================

fixed a bug causing read requests picked up out of location order 

in response to bugzilla report 117: do not remove from active list if mover is in SEEK, the mover will take care of this itself 

========== duplicate.py ====================================================================================

Accept db duplicate_metadata() to have it be compatible with the new migrate.swap_metadata(). Also, added the parts of swap_metadata() that use db to duplicate_metadata(). 

========== info_client.py ====================================================================================

Added find_migrated() functions so that the file_clerk and info_server can handle inquiries about migrated/duplicated files. 

========== enstore_status.py ====================================================================================

skip text format error and ignore None storage group 

========== enstore_plots.py ====================================================================================

skip text format error and ignore None storage group 

========== migrate.py ====================================================================================

Allow for --with-deleted to work with --scan-vol. This will allow for a file that is deleted between being migrated and being scanned to be scanned. Also, added --force so that an already migrated tape can be re-migrated an and already scanned tape can be rescanned. --force is a hidden switch to be used for debugging. 

Another patch to handle files deleted after being migrated, but before being scanned. 

If between migration and scanning/checking the new destination copy is deleted, this should not fail the volume from being considered done. This patch makes that happen. 

If, in between a file being migrated and scanned, it is deleted we need to handle it as okay and not an error. 

ixed the finding of the path when scanning. 

Pass the db object to swap_metadata() to avoid opening a new connection for every file. Pass db to search_media_type() to avoid traceback from using an undefined value. Multiple bfids and volumes should be migratable on a single command line; misplaced return statements were causing it to stop after one bfid or volume. 

========== encp.py ====================================================================================

bumping version to v3_7c because of encpCut 

Skip the verify_write_request_consistancy() call at the beginning of the encp for volume or migration/duplication requests for performance reasons. (Reads have already been doing this.) 

Fixed two issues. First, --volume now uses find_pnfs_file.find_pnfsid_path() to obtain the correct path, not just try what is in the file DB. Second, string TCP_EXCEPTIONs have been moved to seperate except lines since string exceptions are depricated in python 2.6. 

Added additional "Time to" messages that go to the debug log file. 

Previously, if a media error occured handle_retries() would attempt to fail over to any multiple copy, if available. However, fcc.bfid_info() and vcc.inquire_vol() were used directly instead of the get_clerks_info() wrapper function; get_clerks_info() inserts the address fields in the tickets. Obviously, get_clerks_info() is used now. (Bug #106) 

========== ratekeeper.py ====================================================================================

In addition to determining if the mover is part of 'this' enstore system, the media changer assigned to the mover must also match the current media changer for the drive utilization information. 

========== scanfiles.py ====================================================================================

Removed remaing code fragments having to do with "external_transitions". 

Added the handling of migrated files that are deleted before the destination copy is scanned. 

Added functionality to determine if a bfid refers to a migrated file and handle any metadata error reporting issues accordingly. Also, if layer 2 exists without size or crc; give warnings. 

Reverted a temporary change to the bfid error output line back to say bfid instead of bfidsdf. 

========== mover.py ====================================================================================

in single fm mode when switching from write to read mode skip back 1 position after writng a second fm. 

set self.saved_mode and self.mode before returning from finish_transfer_setup if connection to encp has failed. This is needed in a single fm mode to avoid confusion with tape prosition when switching from write to read. If this is not done and the first read after write fails, the second read attempts to write another filemark and fails. 

Small fix 

If data_ip corresponds to the same interface as host, the bindtodev does not work and causes "Connection reset" when thransferring files on the same machine where the mover runs. This fix checks whether data_ip and host refer to the same network card and does bindtodev only if NICs are different. 

========== migration_summary_plotter_module.py ====================================================================================

Rotate the dates for easier reading. 

========== file_clerk_client.py ====================================================================================

Added find_migrated() functions so that the file_clerk and info_server can handle inquiries about migrated/duplicated files. 

========== library_manager.py ====================================================================================

fixed a bug causing read requests picked up out of location order 

in response to bugzilla report 117: do not remove from active list if mover is in SEEK, the mover will take care of this itself 

</pre></body></html>
