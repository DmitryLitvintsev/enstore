<html><body><pre>
                      Enstore release notes, from ENSTORE_RPM_2_2_2_4 to ENSTORE_RPM_2_2_2_5
                      Detailed cvs commit logs


.
./tools
========== encp_test_functions ====================================================================================

Added test of encp with --get-bfid and --skip-pnfs. It is not enabled by default, due to its requirement 
of no PNFS or Chimera mount points mounted. (bugzilla #1068, review board #370) 

1) On cleanup, remove the lock file last. 
2) Send the test header and trailer info to the $ENCP_OUTPUT file. 
3) Prevent multiple /tmp/enstore.conf tests from clobbering each other. 
4) Run "enstore scan" after write tests to verify the metadata. 
5) If an encp fails due to CONFIGDEAD or SERVERDIED errors, the encp is retried up to 10 times, 
in the hope that the situation is temporary. 
6) Improved stability when running tests using Chimera. 
(bugzilla #1060, review board #363) 

========== encp_test_script ====================================================================================

Added test of encp with --get-bfid and --skip-pnfs. It is not enabled by default, 
due to its requirement of no PNFS or Chimera mount points mounted. (bugzilla #1068, review board #370) 

1) On cleanup, remove the lock file last. 
2) Send the test header and trailer info to the $ENCP_OUTPUT file. 
3) Prevent multiple /tmp/enstore.conf tests from clobbering each other. 
4) Run "enstore scan" after write tests to verify the metadata. 
5) If an encp fails due to CONFIGDEAD or SERVERDIED errors, the encp is retried up to 10 times, 
in the hope that the situation is temporary. 
6) Improved stability when running tests using Chimera. 
(bugzilla #1060, review board #363) 

========== fix_tag_inheritance.sh ====================================================================================

The repair_tag() function has had the guts of its logic split into three functions: 
repair_tag(), repair_tag_parent_id() and repair_inheritance(), 
where the new repair_tag() will call the other two. 
This allows for the elif that covers the case not implemented to reuse the functionality already there. 

========== pnfs_db_restore.py ====================================================================================

create file /etc/sysconfig/pgsql/postgresql and put location of pnfs database there 

./doc/WWW
========== documentation.html ====================================================================================

remove old links add new links http://uqbar/reviews/r/474/ http://www-ccf.fnal.gov/Bugzilla/show_bug.cgi?id=614 

========== encpReleaseNotes.html ====================================================================================

Added the REL_V3_10 link. 

========== index-bottom.html ====================================================================================

volume_audit : generate burn rate plots for T10K tapes http://uqbar/reviews/r/408/ 
change port number of tableplotter to 8090 

./etc
========== config_params.html ====================================================================================

added location of chimera DB 

========== servicenow_create_entry.cf ====================================================================================

branches: 1.4.2; use service desk account that is linked to ssa-auto@fnal.gov mailing list 
disable soap message dump 
switch to production web service 


========== volume_audit.html ====================================================================================

volume_audit : generate burn rate plots for T10K tapes http://uqbar/reviews/r/408/ 

./src
========== atomic.py ====================================================================================

1) The os.path.isdir(), os.path.islink(), etc. functions call os.stat() which needs to be wrapped with file_utils.wrapper(). 
2) Writes using --put-cache and --shortcut have had a patch to get the full path to PNFS files to send to 
the mover to avoid the mover's no NULL in path error. This patch generalizes this feature for reads too. 
3) Another source of cyclic paths in PNFS has been found. 
4) When --get-bfid and --skip-bfid are used together, honor the skip pnfs part. 
(bugzillas 1039, 1043, 1044 and 1045; review board 347) 

========== chimera.py ====================================================================================

BUG FIX: enstore file --restore <BFID> sets size to 1 byte for files > 2 GB 
http://uqbar/reviews/r/492/ http://www-ccf.fnal.gov/Bugzilla/show_bug.cgi?id=1145 

do not throw exception if encounter "old style" pnfs ID 
http://uqbar/reviews/r/471/ http://www-ccf.fnal.gov/Bugzilla/show_bug.cgi?id=1136 

fix logic of consistent() method 

replace traceback.print_tb() call with Trace.handle_error() http://uqbar/reviews/r/425/ 

BUG FIX: encp fails to work with chimera on files imported from pnfs as the decision what 
class to instantiate is made based on examination of pnfsid. This patch fixes the issue. 
http://uqbar/reviews/r/409/ http://www-ccf.fnal.gov/Bugzilla/show_bug.cgi?id=1083 

Handle the situation where the user is using a path containing a symbolic link to the Chimera mountpoint. 
Also, added self. to one line in plibrary(). 

1) The os.path.isdir(), os.path.islink(), etc. functions call os.stat() which needs to be wrapped with file_utils.wrapper(). 
2) Writes using --put-cache and --shortcut have had a patch to get the full path to PNFS files to send to 
the mover to avoid the mover's no NULL in path error. This patch generalizes this feature for reads too. 
3) Another source of cyclic paths in PNFS has been found. 
4) When --get-bfid and --skip-bfid are used together, honor the skip pnfs part. 
(bugzillas 1039, 1043, 1044 and 1045; review board 347) 

Allow the --mount-point switch to be usable by dCache instead of just by an administrative user. 
This will be used by encp_test_script. 

========== cleanUDP.py ====================================================================================

Allow UDP packet fragmentation. It is disallowed by default. If it is disallowed then the following problem occurs. 
If UDP packet size is less than MTU on a sender node and bigger than MTU on receiver node the packet gets 
delivered without fragmentation and rejected on receiver node because it can not treat frames bigger than MTU. 
This was observed when deploying new CMS worker nodes with 10Gb interfaces. (bz 1065). 

========== delete_at_exit.py ====================================================================================

1) The os.path.isdir(), os.path.islink(), etc. functions call os.stat() which needs to be wrapped with file_utils.wrapper(). 
2) Writes using --put-cache and --shortcut have had a patch to get the full path to PNFS files to send to 
the mover to avoid the mover's no NULL in path error. This patch generalizes this feature for reads too. 
3) Another source of cyclic paths in PNFS has been found. 
4) When --get-bfid and --skip-bfid are used together, honor the skip pnfs part. 
(bugzillas 1039, 1043, 1044 and 1045; review board 347) 

========== delfile_chimera.py ====================================================================================

catch more error cases, reduce code duplication http://uqbar/reviews/r/449/ 

discovered that just opening file in chimera on write or writing an empty string to it does not change file content. 
Write "\n" instead (mimicking echo "" > file). 
This case then handled in delfile_chimera to not to mark files deleted on destination tape. 
Otherwise files on destination tape get marked deleted by delfile_chimera http://uqbar/reviews/r/436/ 

========== duplicate.py ====================================================================================

Implemented the duplication cleanup_after_scan() function. Previously, it was a no-op. (bugzilla #973, review board #289) 

========== edb.py ====================================================================================

fix issue with default values. 0 instead of -1. This resulted in new volumes created with negative values. 

print active_files, deleted_files, unknown_files, active_bytes, deleted_bytes,unknown_bytes 
by "enstore vol --gvol <VOLUME>" command http://uqbar/reviews/r/369/ and limit max number of 
idle connections to 5 to avoid unnecessary memory consumption on stkensrv0n 
http://uqbar/reviews/r/379/ 

========== encp.py ====================================================================================

removed extraneous print statement http://uqbar/reviews/r/463/ 

bug fix : 'exceptions.AttributeError'>: StorageFS instance has no attribute 
'is_storage_path' http://uqbar/reviews/r/461/ http://www-ccf.fnal.gov/Bugzilla/show_bug.cgi?id=1128 

bump version of encp to v3_10e http://uqbar/reviews/r/444/ 

bumping version to v3_10d because of encpCut 

1) The os.path.isdir(), os.path.islink(), etc. functions call os.stat() which needs to be wrapped with file_utils.wrapper(). 
2) Writes using --put-cache and --shortcut have had a patch to get the full path to PNFS files to send to 
the mover to avoid the mover's no NULL in path error. This patch generalizes this feature for reads too. 
3) Another source of cyclic paths in PNFS has been found. 
4) When --get-bfid and --skip-bfid are used together, honor the skip pnfs part. 
(bugzillas 1039, 1043, 1044 and 1045; review board 347) 

========== enstore_constants.py ====================================================================================

volume_audit : generate burn rate plots for T10K tapes http://uqbar/reviews/r/408/ 

========== enstore_display.py ====================================================================================

removed debug prints 

Make entv run on an SLF6 node. (bugzilla #1021, review board #325) 

========== enstore.py ====================================================================================

enstore pnfs does the same thing as enstore sfs. Thus keeping it backward compatible when switching to chimera 

========== entv.py ====================================================================================

Make entv run on an SLF6 node. (bugzilla #1021, review board #325) 

========== event_relay_client.py ====================================================================================

Additional patches to get entv for SLF6 to work. (bugzilla 1021, review board 325) 

========== file_clerk_client.py ====================================================================================

BUG FIX: enstore file --restore <BFID> sets size to 1 byte for files > 2 GB 
http://uqbar/reviews/r/492/ http://www-ccf.fnal.gov/Bugzilla/show_bug.cgi?id=1145 

Fix enstore sfs commands and fix enstore file --restore command http://uqbar/reviews/r/414/ 

========== file_utils.py ====================================================================================

fix typo (same as rev 1.20.2.5 @ FILE_AGGREGATION_V2 branch) 

remove generation of stack trace that was triggering a lot of output for calls that took longer 
than 1 second http://uqbar/reviews/r/464/ 

stop generating stack traces in DEBUG log file http://uqbar/reviews/r/396/ 

encp: remove debug log that fills up log files fast http://uqbar/reviews/r/375/ 

Commented out a debugging statement. 

1) The os.path.isdir(), os.path.islink(), etc. functions call os.stat() which needs to be wrapped with file_utils.wrapper(). 
2) Writes using --put-cache and --shortcut have had a patch to get the full path to PNFS files to send to 
the mover to avoid the mover's no NULL in path error. This patch generalizes this feature for reads too. 
3) Another source of cyclic paths in PNFS has been found. 
4) When --get-bfid and --skip-bfid are used together, honor the skip pnfs part. 
(bugzillas 1039, 1043, 1044 and 1045; review board 347) 

========== find_pnfs_file.py ====================================================================================

1) The os.path.isdir(), os.path.islink(), etc. functions call os.stat() which needs to be wrapped with file_utils.wrapper(). 
2) Writes using --put-cache and --shortcut have had a patch to get the full path to PNFS files to send to 
the mover to avoid the mover's no NULL in path error. This patch generalizes this feature for reads too. 
3) Another source of cyclic paths in PNFS has been found. 
4) When --get-bfid and --skip-bfid are used together, honor the skip pnfs part. 
(bugzillas 1039, 1043, 1044 and 1045; review board 347) 

========== inventory.py ====================================================================================

fix undefined variables http://uqbar.fnal.gov/reviews/r/499 

restore block of code lost in previous patch due to misunderstanding TODO: handle "ghost" files (files w/ the same location_cookie) http://uqbar/reviews/r/490/ 

speed up inventory by skipping querying every file by bfid in favor of pulling information about all files on a tape in one query. http://uqbar/reviews/r/487/ 

extract port number from configuration http://uqbar/reviews/r/421/ 

========== Makefile ====================================================================================

don't skip multiprocessing 

make sure we can run make using python-encp RPM http://uqbar/reviews/r/410/ 

========== migrate.py ====================================================================================

Moved comments from inside of query in make_failed_copies. They were truncating the query. 

Implemented the duplication cleanup_after_scan() function. Previously, it was a no-op. (bugzilla #973, review board #289) 

========== namespace.py ====================================================================================

Fix enstore sfs commands and fix enstore file --restore command http://uqbar/reviews/r/414/ 

BUG FIX: encp fails to work with chimera on files imported from pnfs as the decision what class to instantiate 
is made based on examination of pnfsid. This patch fixes the issue. 
http://uqbar/reviews/r/409/ http://www-ccf.fnal.gov/Bugzilla/show_bug.cgi?id=1083 

1) The os.path.isdir(), os.path.islink(), etc. functions call os.stat() which needs to be wrapped with file_utils.wrapper(). 
2) Writes using --put-cache and --shortcut have had a patch to get the full path to PNFS files to send to 
the mover to avoid the mover's no NULL in path error. This patch generalizes this feature for reads too. 
3) Another source of cyclic paths in PNFS has been found. 
4) When --get-bfid and --skip-bfid are used together, honor the skip pnfs part. 
(bugzillas 1039, 1043, 1044 and 1045; review board 347) 

Allow the --mount-point switch to be usable by dCache instead of just by an administrative user. 
This will be used by encp_test_script. 

========== operation.py ====================================================================================

Implemented separate service now interface so can tailor for tab flipping. 

Added CDF-10KCGS and CDF-10KCF1 libraries to tab flipping per REQ 18610 and RITM 14308. 

========== pnfs_agent_client.py ====================================================================================

1) The os.path.isdir(), os.path.islink(), etc. functions call os.stat() which needs to be wrapped with file_utils.wrapper(). 2) Writes using --put-cache and --shortcut have had a patch to get the full path to PNFS files to send to the mover to avoid the mover's no NULL in path error. This patch generalizes this feature for reads too. 3) Another source of cyclic paths in PNFS has been found. 4) When --get-bfid and --skip-bfid are used together, honor the skip pnfs part. (bugzillas 1039, 1043, 1044 and 1045; review board 347) 

========== pnfs.py ====================================================================================

fix issue with conversion of strings representing hex based numbers to int http://uqbar.fnal.gov/reviews/r/470/ http://www-ccf.fnal.gov/Bugzilla/show_bug.cgi?id=1135 

fix path concatenation in pnfs.__get_path http://uqbar/reviews/r/445/ 

fix file concatenation problem seen when this command failed: /opt/encp/encp --verbose=4 --threaded --ecrc --bypass-filesystem-max-filesize-check --pnfs-mount /pnfs/fs --put-cache 000C00000000000000B1FCC8 /diskb/write-pool-2/data/000C00000000000000B1FCC8 http://uqbar/reviews/r/443/ http://www-ccf.fnal.gov/Bugzilla/show_bug.cgi?id=1098 

protect access to intf.directory with hasattr(intf,"directory") check. http://uqbar/reviews/r/376 

Handle the situation where the user is using a path containing a symbolic link to the PNFS mountpoint. 
Also, convert the PNFS id from a hex string to integer, instead of trying it as a decimal string. 

1) The os.path.isdir(), os.path.islink(), etc. functions call os.stat() which needs to be wrapped with file_utils.wrapper(). 
2) Writes using --put-cache and --shortcut have had a patch to get the full path to PNFS files to send to 
the mover to avoid the mover's no NULL in path error. This patch generalizes this feature for reads too. 
3) Another source of cyclic paths in PNFS has been found. 
4) When --get-bfid and --skip-bfid are used together, honor the skip pnfs part. 
(bugzillas 1039, 1043, 1044 and 1045; review board 347) 

Allow the --mount-point switch to be usable by dCache instead of just by an administrative user. 
This will be used by encp_test_script. 

========== remedy_interface.py ====================================================================================

use service desk account that is linked to ssa-auto@fnal.gov mailing list 

========== summary_burn_rate_plotter_module.py ====================================================================================

make plots only for media corresponding to libraries that are defined in configuration 
http://uqbar.fnal.gov/reviews/r/488/ http://www-ccf.fnal.gov/Bugzilla/show_bug.cgi?id=1130 

========== Trace.py ====================================================================================

Do not truncate message if it goes to stdout or stderr (rb http://uqbar.fnal.gov/reviews/r/430/) 

========== udp_client.py ====================================================================================

Additional patches to get entv for SLF6 to work. (bugzilla 1021, review board 325) 

========== volume_clerk.py ====================================================================================

reset deleted_files and deleted_bytes on volume recycle http://uqbar/reviews/r/404/ 

./crontabs
========== backup ====================================================================================

http://uqbar/reviews/r/381/ I have conducted a study of stkensrv0n behavior during volume_clerk timeouts: 
https://srm.fnal.gov/twiki/bin/view/EnstoreCorner/VolumeClerkTimeouts. 
Apparently during accounting db backup activity we see system swapping and queries on enstoredb slowing. 
In happens that in the period between midnight and 3:00 AM the activity on enstoredb is particularly heavy. 
Running accounting db backup during this time compounds the problem. 
This patch moves the accounting db backup to 5:10 AM time slot. 

========== summary_plots ====================================================================================

rename "make_overall_plot" cron to "summary_overall_plot". We already have cron "make_overall_plot", 
so it was confusing ecron. http://uqbar/reviews/r/380/ 

========== tab_flip_watch_cdfen ====================================================================================

Added CDF-10KCGS and CDF-10KCF1 libraries to tab flipping per REQ 18610 and RITM 14308. 

========== tab_flip_watch_stken ====================================================================================

Removed tab flipping for CD-LTO3GS as the library has been decommissioned. 

./databases/control_files
========== pg_hba.conf-stken-enstoredb ====================================================================================

added migration nodes by full IP for write enable access 

========== enstore.spec ====================================================================================
Release 2.2.2 Version 5 
./sbin
========== backup2Tape ====================================================================================
remove hard-coded file extension in backup2tape that prevented accounting backup from going to tape after \
backup was moved to 5 AM http://uqbar/reviews/r/435/ 

========== choose_ran_file ====================================================================================

skip pnfs checks and add "--skip-pnfs" to encp to avoid what seems to be false positives 

modified parsing of enstore info 2 --bfid CDMS132207475200000 command to not to rely on pnfsid 
string length http://uqbar/reviews/r/431/ 

========== pnfsExportList ====================================================================================

fix minor bug in bash comparison http://uqbar/reviews/r/441/ 

========== pnfs_monitor ====================================================================================

skip admin database when looking for files with missing layers 
http://uqbar/reviews/r/491/ http://www-ccf.fnal.gov/Bugzilla/show_bug.cgi?id=943 

========== silo-check ====================================================================================

2 test tapes moved out of stken G1 robots -- deleted, and put into cdfen, 1 each into FCC and 
GS robots TTC023 to GS and TTC026 to FCC. 

========== tab_flipping_nanny ====================================================================================

adapt to servicenow 

./ups
========== chooseConfig ====================================================================================

1. Removed obsolete entries 2. Removed zalokar from gccen mailing list 

</pre></body></html>
