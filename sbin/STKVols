#!/bin/sh
set -u  # force better programming and ability to use check for not set
if [ "${1:-}" = "-x" ] ; then set -xv; shift; fi

node=`uname -n| sed -e 's/\([^\.]\)\..*/\1/'`
gang=`gang`
case $gang in
  stken) robot="PowderHorn 9310"
	 silo_node=fntt
	 copy_node=stkensrv4
          ;;
  cdfen) robot="PowderHorn 9310"
	 silo_node=fntt2
	 copy_node=cdfensrv4
          ;;
   d0en*) robot="UNKNOWN"
          ;;
       *) robot="UNKNOWN"
          ;;
esac

volfile=/tmp/STKROBOT-VOLUMES-$gang

output=${1:-/dev/tty}
if [ `echo $output | grep -c /dev/` -eq 0 ] ; then 
  rm -f $output
fi

if [ $node = "stkensrv4" -o $node = "cdfensrv4" ] ; then

cat << EOF >>$output
<html> <head> <title>$robot Volume Status Page</title> </head>
<body>
<body bgcolor="#ffffff" text=#a0a0ff">
<meta http-equiv="Refresh" content="900">
<h1><center>$robot Volume Fetch Begin: `date`</center><h1>
<hr>
EOF

rm -f $volfile

/usr/bin/rsh $silo_node -l acsss "echo query vol all |/export/home/ACSSS/bin/cmd_proc 2>> /tmp/garbx" < /dev/null >>$volfile

cat << EOF >>$output
<h1><center>$robot Volume Fetch Done : `date`</center><h1>
<hr>
EOF

cmd="egrep '0,' $volfile"

cat << EOF >>$output
<h1> Tapes in the $robot satisfying: $cmd
<pre>
EOF

eval $cmd >>$output

cat << EOF >>$output
</pre>
<hr>
<h1><center>$robot Volume Status Page Done : `date`</center><h1>
<hr>
</body>
EOF


 left="`/usr/bin/rsh $silo_node -l acsss "echo query lsm all |/export/home/ACSSS/bin/cmd_proc 2>> /dev/null" </dev/null | grep online | sed -e 's/, /,/'`"
silos="`egrep ' STK' $volfile | cut -c30-36|sort | uniq`"
IFSave="$IFS"
IFS="
"
for silo in $silos; do 
  s=`echo $silo| sed -e 's/ //g' -e 's/,$//'`
  n="`egrep ' STK' $volfile | grep "$silo"|wc|awk '{print $1}'`"
  nleft=`echo "$left" | grep "$s"|awk '{print $3}'`
 echo `date` $s $n $nleft >>/tmp/STK_USED_SLOTS."$s" 
 echo `date` $s $n $nleft
done
IFS="$IFSave"


else
  f=STK-VOLUMES.html
  rm /tmp/$f
  enrcp $copy_node:$f /tmp/$f
  cat /tmp/$f >>$output
  enrcp $copy_node:/tmp/STK_USED_SLOTS* $ENSTORE_DIR/
  now=`date +"%Y-%m-%d:%H:%M:%S"`
  Quarter_ago=`date --date "90 days ago" +"%Y-%m-%d:%H:%M:%S"`
  for i in $ENSTORE_DIR/STK_USED_SLOTS*; do 
    silo=`basename $i | cut -f2 -d.`
    rm -f /tmp/stk.us.gnu /tmp/used
    echo $i $silo
    cat $i | while read x mon day time tz year silo n nleft; do
      nleft=${nleft:-0}
      tot=`expr $n + $nleft`
      echo `date --date "$mon $day $time $tz $year" +"%Y-%m-%d:%H:%M:%S"` $n tot >> /tmp/used
    done
    #cat /tmp/used
    echo "set output \"/tmp/silo.$silo.ps\"
set terminal postscript color solid
set title \"Used Slots $silo $now\"
set xlabel \"Date\"
set timefmt \"%Y-%m-%d:%H:%M:%S\"
set xdata time
set xrange [\"$Quarter_ago\" : ]
set ylabel \"Number Used\"
set grid
set yrange [0: ]
set format x \"%m-%d\"
set nokey
plot \"/tmp/used\" using 1:2 t \"Used Slots\" w impulses", using 1:3 w impulses > /tmp/stk.us.gnu 
     #cat /tmp/stk.us.gnu 
     gnuplot /tmp/stk.us.gnu 
     convert -rotate 90 /tmp/silo.$silo.ps /tmp/silo.$silo.jpg
     convert -geometry 120x120 -modulate 80 /tmp/silo.$silo.jpg /tmp/silo.${silo}_stamp.jpg
  done       
  cp /tmp/silo*ps /tmp/silo*jpg /fnal/ups/prd/www_pages/enstore/
fi
