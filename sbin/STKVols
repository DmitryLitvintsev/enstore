#!/bin/sh
set -u  # force better programming and ability to use check for not set
if [ "${1:-}" = "-x" ] ; then set -xv; shift; fi

# both parts of this script run as user enstore

node=`hostname -s`
gang=`gang`

# silos are PowderHorn 9310 robots
silo_robot="PowderHorn 9310"
case $gang in
   d0en) silo_node=fntt
	 silo_list="1,0 1,1"
	 silo_acs=" 1"
	 ;;
  stken) silo_node=fntt
	 silo_list="0,0 0,1"
	 silo_acs=" 0"
	 ;;
  cdfen) silo_node=fntt2
	 silo_list="0,0 0,1"
	 silo_acs=" 0"
	 ;;
      *) echo \"$0\" not supported on $gang
	 exit 1
	 ;;
esac

copy_node=${gang}srv4
plot_node=${gang}srv2

Quarter_ago=`date --date "91 days ago" +"%Y-%m-%d:%H:%M:%S"`

if [ $node = $copy_node ]; then

  output=${1:-/dev/tty}
  shift
  [ -f $output ] && rm -f $output

  volfile=/tmp/STKROBOT-VOLUMES-$gang
  rm -f $volfile

  # find out whether we're running ACSLS 6 or 7
  /usr/bin/rsh $silo_node -l acsss "echo '\r' logoff | bin/cmd_proc -l -q >/dev/null" 2>/tmp/acsls-banner
  if grep "ACSLS 7" /tmp/acsls-banner >/dev/null; then
    select="display volume \* -home $silo_acs,*,*,*,*"
    filter="awk '\$8~/home|move|mount|dismount|in_drive/'"
  else
    select="query volume all"
    filter="awk -v Acs='$silo_acs' '/home|in drive|in transit/ && substr(\$0,31,2)==Acs'"
  fi

  cat << EOF >>$output
<html> <head> <title>$silo_robot Volume Status Page</title> </head>
<body>
<body bgcolor="#ffffff" text=#a0a0ff">
<meta http-equiv="Refresh" content="900">
<h1><center>$silo_robot Volume Fetch Begin: `date`</center><h1>
<hr>
EOF

  /usr/bin/rsh $silo_node -l acsss "echo $select '\r' logoff | bin/cmd_proc -l -q 2>/dev/null" >$volfile

  cat << EOF >>$output
<h1><center>$silo_robot Volume Fetch Done : `date`</center><h1>
<hr>
<h1>Tapes in the $silo_robot satisfying: "$filter"
<pre>
EOF

  eval $filter <$volfile >>$output

  cat << EOF >>$output
</pre>
<hr>
<h1><center>$silo_robot Volume Status Page Done : `date`</center><h1>
<hr>
</body>
EOF

  lsms=`/usr/bin/rsh $silo_node -l acsss "echo query lsm all '\r' logoff | bin/cmd_proc -l -q 2>/dev/null" | grep online`
  now=`date +"%Y-%m-%d:%H:%M:%S"`
  for silo in $silo_list; do
    free=`echo "$lsms" | sed 's/, /,/' | awk -v Silo="$silo" '$1 == Silo {print $3}'`
    if grep "ACSLS 7" /tmp/acsls-banner >/dev/null; then
      used=`eval $filter <$volfile | awk -v Silo="$silo" '{if (sprintf("%s,%s",$2,$3)==Silo) k++}; END {print k}'`
    else
      used=`eval $filter <$volfile | cut -c31-35 | sed 's/, /,/' | grep -c "$silo"`
    fi
    tot=`expr ${free:-0} + ${used:-0}`
    echo "$now $silo $tot ${used:-0} ${free:-0}" >>$HOME/STK_USED_SLOTS.$silo
  done

  for remote_copy
  do
    if [ ! \( -c $output -o -c $remote_copy \) ] ; then
      enrcp $output $remote_copy
    fi
  done

elif [ $node = $plot_node ]; then

  pltcmd=/tmp/stk.us.gnu
  enrcp $copy_node:STK_USED_SLOTS* $HOME/
  now=`date +"%Y-%m-%d:%H:%M:%S"`
  for i in $HOME/STK_USED_SLOTS*; do
    silo=`basename $i | cut -f2 -d.`
    rm -f $pltcmd
    free=`tail -n1 $i | awk '{print $5}'`
    echo "set output \"/tmp/silo.$silo.ps\"
set terminal postscript color solid
set title \"Used Slots in PowderHorn 9310 silo $silo $now\"
set xlabel \"Date\"
set timefmt \"%Y-%m-%d:%H:%M:%S\"
set xdata time
set xrange [\"$Quarter_ago\" : ]
set ylabel \"Number Used\"
set grid
set yrange [0: ]
set format x \"%m-%d\"
set nokey
set label \"Plotted `date` \" at graph .99,0 rotate font \"Helvetica,10\"
set label \"$free Free\" at graph .2,.9 font \"Helvetica,80\"
plot \"$i\" using 1:3 w impulses linetype 2, \"$i\" using 1:4 t \"Used Slots\" w impulses linetype 1" >$pltcmd
    gnuplot $pltcmd
    convert -rotate 90 /tmp/silo.$silo.ps /tmp/silo.$silo.jpg
    convert -geometry 120x120 -modulate 80 /tmp/silo.$silo.jpg /tmp/silo.${silo}_stamp.jpg
  done
  cp /tmp/silo*.ps /tmp/silo*.jpg /fnal/ups/prd/www_pages/enstore/

else
  echo \"$0\" runs only on $copy_node or $plot_node
  exit 1

fi
