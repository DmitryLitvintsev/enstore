#!/bin/sh
set -u  # force better programming and ability to use check for not set
if [ "${1:-}" = "-x" ] ; then set -xv; shift; fi

# this script runs as user enstore

node=`hostname -s`
gang=`gang`
case $gang in
   d0en) media=3480
	 ;;
  stken) media=DECDLT
	 ;;
      *) echo \"$0\" not supported on $gang
	 exit 1
	 ;;
esac

robot="D0 ADIC AML/2"

volfile=/tmp/ADICROBOT-VOLUMES-$gang
rm -f $volfile

output=${1:-/dev/tty}
shift
[ -f $output ] && rm -f $output

cat << EOF >>$output
<html> <head> <title>$robot Volume Status Page</title> </head>
<body>
<body bgcolor="#ffffff" text=#a0a0ff">
<meta http-equiv="Refresh" content="900">
<h1><center>$robot Volume Fetch Begin: `date`</center><h1>
<hr>
EOF

do_awk() { awk -v Media=$1 -v Volfile=$2 '
	   END {do {pipe=sprintf("dasadmin qvolsrange \"%s\" \"\" 1000", Next)
		    while ((pipe | getline) > 0)
		      if ( $1 == "volser" && $4 == Media ) print >Volfile
		      else if ( $0 ~ /^more data/ )	   More++
		      else if ( $0 ~ /no more data/ )	   More=0
		      else if ( $0 ~ /next volser/ )	   Next=$3
		      else if ( $0 ~ /count/ )  	   Count+=$2
		    close(pipe)
		   } while ( More > 0 && More < 30 )
		 print Count}' /dev/null
	 }

total=`do_awk $media $volfile`

cat << EOF >>$output
<h1><center>Total Volumes Fetched : $total</center><h1>
<h1><center>$robot Volume Fetch Done : `date`</center><h1>
<hr>
EOF

filter="awk -v Media=$media '\$4 == Media'"

cat << EOF >>$output
<h1>Tapes in the $robot satisfying: "$filter"
<pre>
EOF

cat $volfile >>$output

cat << EOF >>$output
</pre>
<hr>
<h1><center>$robot Volume Status Page Done : `date`</center><h1>
<hr>
</body>
EOF

for remote_copy
do
  if [ ! \( -c $output -o -c $remote_copy \) ] ; then
    enrcp $output $remote_copy
  fi
done
