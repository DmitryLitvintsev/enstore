#!/bin/sh

###############################################################################
#
# $Id$
#
###############################################################################

# chkconfig: 345 96 04
# description: start/stop/check status of enstore qpidd broker
#
set -u  # force better programming and ability to use check for not set
if [ "${1:-}" = "-x" ] ; then set -xv; shift; fi

# setup enstore in case it was not
if [ "${ENSTORE_DIR:-}" = "" -o "${QPID_DIR:-}" = "" ];
then
   . /usr/local/etc/setups.sh
   setup enstore
fi

# if qpid_broker is called as service (service qpid_broker start
# HOSTNAME gets reset, so declare it here explicitely.
if [ "${HOSTNAME:-}" = "" ];
then
    HOSTNAME=`hostname --fqdn`
    export HOSTNAME
fi
export KRB5_KTNAME=/etc/qpidd.keytab

EXE=/usr/sbin/qpidd
RUN_DIR=/var/run/qpidd
LOG_DIR=/var/log/qpidd

mkdir -p $RUN_DIR
mkdir -p $LOG_DIR

command=${1:-status}

# qpidd startup options are set in qpidd.conf
# Use "qpidd --help" to find qpidd.conf file location

case $command in

stop)
	CMD="$EXE -q"
	echo $CMD
	$CMD
	;;
start)
	CMD="$EXE -d"
        echo $CMD
        $CMD
	sleep 5
	. $ENSTORE_DIR/sbin/krb5_ticket_sourceme
	$ENSTORE_DIR/src/cache/messaging/enstore_qpid_config.py
	destroy_krb5_ticket
	;;
restart)
	$0 stop 2>/dev/null
	$0 start
	;;
status)

        out=`${EXE} -c 2>/dev/null`
	RC=$?
	case "$RC" in
          0)
            echo "qpidd (pid ${out}) is running"
          ;;
          1)
            # Workaround:
            # qpidd tries to open qpidd log file even if it is run only for status check
            # log file can be owned by root, hence to access it you shall be root
            # report error differently in this case
            if [ ${UID} -eq "0" ]
            then
                # don't check further if root
                echo "qpidd stopped"
            else
                # re-run status check to capture stderr
                err=`${EXE} -c 2>&1`
                if [[ $err = *"Unexpected error: Can't open log file:"* ]]
                then
                    echo "Script shall be run by root. ${err}"
                else
                    echo "qpidd stopped"
                fi
            fi
            # end workaround
          ;;
          *)
            echo "'qpidd -c' returned status=$RC"
        exit $RC
        esac
	;;
*)
	echo "Error: Invalid option $command"
	echo "USAGE: $0 [stop|start|restart|status]"
	exit 1
	;;
esac
