#!/usr/bin/env python


# $Id$
'''
Recommended configuration:
host1 : pnfs server
host2: apache web server, configuration_server, log_server, alarm_server, inquisitor,
       event_relay, ratekeeper
host3: media_changer(s), library_manager(s)
host4: postrres DB server, file_clerk, volume_clerk, info_server, accounting_server, drivestat_server

one host per mover with at least 2GB of memory.
You can find more informatiom in Enstore Users Guide"
http://computing.fnal.gov/docs/products/enstore/
'''

# all constants defined here are optional and used just for the
# convenience
# you are free to define your own
KB=1024L
MB=KB*KB
GB=KB*MB
TB=KB*GB
PB=KB*TB
EB=KB*PB

# maximal transfer rates for different types of tape drives
# 
ait1_rate =    2.7 * MB
ait2_rate =    9.5 * MB
mam1_rate =    2.8 * MB
mam2_rate =   11.5 * MB
dlt_rate =     5.1 * MB
s9840_rate =  10.5 * MB
s9940_rate =  10.5 * MB
s9940b_rate = 27.0 * MB
lto3_rate =   27.0 * MB
null_rate =   11.5 * MB

# lowest allowed encp version
# compatioble with currens enstore servers
legal_encp_version = 'v3_6c'

# frequency of read back CRC checks
# used in movers to randomly check written files. See mover section for more details.
mvr_check_f = 10
#mvr_check_f = 30
b_mvr_check_f = 10
#b_mvr_check_f = 15
b_mvr_check_1st = 0
lto3_mvr_check_f = 10
lto3_mvr_check_1st = 0

# minimal and maximal buffer size
# for details see description of mover keys
# in the end of this file
lto3_min_buffer = 64*MB
lto3_max_buffer = 2500*MB
blank_error_increment = 0

# maximal mover failures and mover consecutive failures
# for details see description of mover keys
# in the end of this file
mvr_max_failures=5
mvr_max_consecutive_failures=3


vol_max_noaccess_cnt=4

# pattern to look in syslog file when FTT_EIO occurs
# for details see description of mover keys
# in the end of this file
low_level_diag_pattern = 'sense|st[0-9]'

configdict = {}

# known configuration servers
# syntax:
configdict['known_config_servers'] = {'d0en'  :             # enstore instance system name
                                      ('d0ensrv2.fnal.gov', # configuration server host
                                       7500),               # configuration server port
				      }



# allowed_down dictionary defining how many times a server is allowed down
# before it is marked with a red ball by the 'enstore system' command. each
# server has a list associated with it that has the followinw format - [number
# of  consecutive times when checked and no alive message rcvd, timeout]
configdict['system'] = { 'allowed_down' : {'log_server' :           [1, 10],
					   'alarm_server' :         [1, 10],
					   'configuration_server' : [1, 10],
					   'file_clerk' :           [1, 10],
					   'inquisitor' :           [3, 30],
					   'volume_clerk' :         [1, 10],
					   'library_manager' :      [2, 20],
					   'accounting_server' :    [3, 20],
					   'drivestat_server' :     [3, 20],
					   'info_server' :          [3, 20],
					   'media_changer' :        [2, 10],
					   'default' :              [1, 20] }}

'''
priority: OPTIONAL. If present specifies the request priority settings for a
Library Manager based on the ticket keys and regular expressions. For details
please contact developer or look in the priority.py code.

configdict['priority'] = {
    '9940.library_manager': # library manager
    {'adminpri':            # administrative (online) priority
     {2:                    # priority
      {'host': 'hal900[24]|damen|walcott|southport', # optional - for requests coming from host
       'uname':'e898',                               # optional - for requests coming from user
       'storage_group':'miniboone',                  # optional - for requests coming from storage group
       'work' : 'write_to_hsm',                      # optional - for work write_to_hsm (read_from_hsm)
       },
      }
     }
    }


----------------------------------------------------------------
discipline: OPTIONAL. If present specifies the restictions set for the request
for a Library Manager based on the ticket keys and regular expressions. For
details please contact developer or look in the discipline.py code.

----------------------------------------------------------------

configdict['discipline'] = {
    '9940.library_manager': # library manager
    {'auger':               # storage group
     {1:                    # 1st restriction
      {'keys':              # keys used to define restriction
       {'host':"stkendca"}, # host
       'function':'restrict_host_access', # function to call
       'args':['auger','stkendca',2],     # function arguments
       'action':'ignore'},                # action
      
      },
     }
    }

'''
# Block sizes for different types ot media in bytes
configdict['blocksizes'] = { '8MM'       : 131072,
			     'DECDLT'    : 131072,
			     '9840'      : 131072,
			     '9940'      : 131072,
			     '9940B'     : 131072,
			     'LTO3'      : 131072,
			     'null'      : 131072 }

# alarm when common blank tapes pool is low (OPTIONAL)
#configdict['common_blank_low'] = { 'warning': 50, 'alarm': 10 }

# maximal file size for the following file wrappers
configdict['wrappersizes'] = { 'null' : (100L*GB) - 1,
			       'cern' : long("9"*20),
			       'cpio_odc' : (8L*GB) - 1 }


# domains allowed access to this system
configdict['domains']      = {
    'invalid_domains' : [],
    'valid_domains'   : ['140.221.183'],
    }

# inventory configuration
# places for tape inventory
configdict['inventory']    = { 'inventory_dir'		: '/diskc/db-inventory',
			       'inventory_tmp_dir'	: '/diskc/db-inventory/tmp',
			       'inventory_cache_dir'	: '/diskc/db-inventory_cache',
			       'inventory_extract_dir'	: '/diskc/db-inventory/extract',
			       'inventory_rcp_dir'	: 'stkensrv2:/fnal/ups/prd/www_pages/enstore/tape_inventory',
			       'wpa_states'		: ["full", "readonly"], # write protection enabled states - optional
			       'wpa_media_types'	: ["9940", "9940B", "DECDLT", "LTO3"], # write protection enabled med. types - optional
			       'wpa_excluded_libraries'	: ["null1", "disk", "test"]} # write protection excluded libraies

# tape mount limits according to media type
# when mounts exceed the first number, an alarm should be generated
# when it exceeds the second number, enstore ball should be turned red
#
# ignore any media type that is not mentioned
configdict['tape_mount_limit'] = {
	'8MM':    (2000, 5000),
	'DECDLT': (2000, 5000),
	'9840':   (2000, 5000),
	'9940':   (2000, 5000),
	'9940B':  (2000, 5000),
	'LTO3':   (2000, 5000) }

# ratekeeper measures enstore nodes transfer rates and builds graphs
configdict['ratekeeper'] = {
    'host'		: 'stkensrv2',			#node ratekeeper is running on
    'port'		: 55511,			#port ratekeeper is running on
    'event_relay_host'	: 'stkensrv2.fnal.gov',		#node event relay is running on
    'norestart'		: 'INQ',
    'noupdown'		: 'efb',
    'logname'		: 'RATSRV',			#logname
    'dir'		: '/diska/ratekeeper/',		#directory to write rates to
    'tmp'		: '/diska/ratekeeper/tmp/',	#temp directory used
    'nodes'		: {},
    'ps'		: '/local/ups/prd/www_pages/enstore/*rates.ps',
    'jpg'		: '/local/ups/prd/www_pages/enstore/*rates.jpg',
    'stamp'		: '/local/ups/prd/www_pages/enstore/*rates_stamp.jpg'}

# backup server
configdict['backup']       = {
    'host':'131.225.13.3',
    'dir':'/diska/enstore-backup',
    'extract_dir':'/diska/check-db-tmp' }

# event relay
# The Event Relay (ER) is a server that forwards messages based on subscription.
# All the Enstore servers send messages to the ER.
#Any server may "subscribe" to the ER in order to have messages of particular types forwarded to it.

configdict['event_relay']  = {
    'host':'stkensrv2',
    'port':55510 }

# enstore file database location and server configuration
# used by file, volume clerks and info server
# it is better to run them on the same host where this DB server runs.
configdict['database']     = {
    'dbarea': /diskb/enstore-database, # database directory
    'db_dir':'/diskb/enstore-database_backup', # backup database directory
    'jou_dir':'/diska/enstore-journal', # journal files directory 
    'db_host':'stkensrv0.fnal.gov',     # data base host - obsolete, replaced with dbhost
    'dbhost':'stkensrv0.fnal.gov',     # data base host
    'dbname':'enstoredb',               # database name 
    'db_port':8888,                     # data base port - obsolete, replaced with dbport 
    'dbport':8888,                     # data base port
    'dbuser': 'enstore',                # enstore database account
    'dbserverowner': 'products',        # owner of enstore database server process
    }

# file clerk
# The File Clerk (FC) is a server that tracks files in the system.
# It manages a database of metadata for each data file in the Enstore system.
# The metadata includes the file's name, its unique identifier (the bit file ID, or bfid,
# that the FC itself assigns to each new file ), the volume on which it resides, and so on.
configdict['file_clerk']   = {
    'host':'stkensrv0',
    'port':7501,
    'logname':'FILSRV',
    'norestart':'INQ',
    'brand':'CDMS', # brand for bit file id
    }

# volume clerk
# The Volume Clerk (VC) is a server that stores and administers storage volume (tape) information.
configdict['volume_clerk'] = {
    'host':'stkensrv0',
    'port':7502,
    'logname':'VOLSRV',
    'norestart':'INQ',
    'max_noaccess_cnt' : vol_max_noaccess_cnt # maximal number of volumes squentially set to noaccess to mark the library broken
    }

# info server is the read-only server that is supposed to ease a load on file and volume clerks
configdict['info_server'] = {
    'host': 'stkensrv0',
    'port': 7777,
    'logname': 'INFSRV',
    'norestart':'INQ',
    'dbhost': 'stkensrv0.fnal.gov',
    'dbname': 'enstoredb'}

# accounting server
#maintains statistical information on a running system. 
configdict['accounting_server'] = {
    'host': 'stkensrv0',
    'port': 7580,
    'logname': 'ACCSRV',
    'norestart':'INQ',
    'dbhost': 'stkensrv0.fnal.gov',
    'dbport': 8800,
    'dbname': 'accounting',
    'dbarea': /diskb/enstore-database, # database directory
    'dbuser': 'enstore',                # enstore database account
    'dbserverowner': 'products',        # owner of enstore database server process
    
    }

#
configdict['drivestat_server'] = {
    'host': 'stkensrv6',
    'port': 7590,
    'logname': 'DRSSRV',
    'norestart':'INQ',
    'dbhost': 'stkensrv6.fnal.gov',
    'dbport': 8076,
    'dbname': 'drivestat',
    'dbarea': /diskb/enstore-database, # database directory
    'dbuser': 'enstore',                # enstore database account
    'dbserverowner': 'products',        # owner of enstore database server process
    }


# alarm server
# The Alarm Server maintains a record of alarms raised by other servers,
# and creates a report available online
configdict['alarm_server'] = {
    'host':'stkensrv2',
    'port':7503,
    'logname':'ALMSRV',
    'norestart':'INQ', }

# log server
# The Log Server receives messages from enstore components and logs them into
# formatted log files available online
configdict['log_server']   = {
    'host':'stkensrv2',
    'port':7504,
    'norestart':'INQ',
    'msg_type_logs': {'MSG_TYPE=MC_LOAD_REQ'  : 'MOUNTS-', # separate files extracted from the log file based on the MSG_TYPE
		      'MSG_TYPE=MC_LOAD_DONE' : 'MOUNTS-',
		      'MSG_TYPE=ENCP_XFER'    : 'ENCPS-',
		      'MSG_TYPE=EVENT_RELAY'  : 'EVRLY-',
		      'MSG_TYPE=ADD_TO_LMQ'   : 'LMQADDS-'},
    'log_file_path' : '/diska/enstore-log' } # where the log files go


# inquisitor
#The Inquisitor monitors the Enstore servers, obtains information from them,
# and creates reports at regular intervals that can be viewed on the web
configdict['inquisitor']   = { 'host':'stkensrv2',
                               'port':7505,
                               'logname':'INQSRV',
			       'alive_rcv_timeout': 15, # timeout for alive request
                               'alive_retries':1,       # retires for alive request
			       'refresh' : 3600,        # refresh time
			       'html_file':'/local/ups/prd/www_pages/enstore/', # the path to WWW files
			       'http_log_file_path':'/enstore/log/',            # enstore log files - usually sym link to log_file_path from log server
			       'www_host':'http://stkensrv2.fnal.gov',          # web server host - usually the same as 'host'
			       'max_encp_lines': 250,                           # number of lines on the transfer page
			       'user_log_dirs' : {'Stken Cluster Console Logs'	: '/enstore/CONSOLES.html',
						  'Stken Cluster Node Info'	: '/enstore/nodeinfo.html',
						  'Stken Cluster SDR Info'	: '/enstore/SDR.html',
						  'Stken Cluster SEL Info'	: '/enstore/SEL.html',
						  'Stken Internode Rates'	: '/enstore/quickcheck.eepro100.html',
						  'Stken UDP Clogup Info'	: '/enstore/UDPclog.html',
						  'Stken Tape Drives'		: '/enstore/firmware_stat_report.stkensrv2.fnal.gov.html',
						  'Active Monitor Log'		: '/enstore/active_monitor.html',
						  'Network-At-A-Glance'		: '/enstore/enstore_saag_network.html',
						  'CD PNFS Counters'		: '/enstore/pnfsRate.html',
						  'CD PNFS Export List'		: '/enstore/pnfsExports.html',
						  'CMS PNFS Counters'		: '/enstore/CMSpnfsRate.html',
						  'CMS PNFS Export List'	: '/enstore/CMSpnfsExports.html',
						  'FAILED Transfers'		: '/enstore/log/transfer_failed.txt ',
						  'Recent STK log messages'	: '/enstore/log/STK-log.html ',
						  'AML/2 Logs'			: 'http://www-d0en.fnal.gov/enstore/aml2log.html',
						  'Cambot'			: '/enstore/enstore_cambot.html',
						  },
			       'default_alive_interval': 40,
			       'default_hung_interval' : 120 }

# monitor server
# echoes messages from monitor_client to fake enstore transfers 
configdict['monitor_server'] = {
    'html_dir'		: '/local/ups/prd/www_pages/enstore/',
    'html_gen_host'	: 'stkensrv2',
    'refresh'		: 3600,
    'veto_nodes'	: {'rip3': 'not in system my reason'},
    'block_size'	: 65536,
    'block_count'	: 160,
    'default_timeout'	: 3 }

# configuration of web server
configdict['www_server'] = { 'system_tag' : "STKEN: Enstore for the Masses",
			     'media' : {'1' : 'CD  Mezzanine Powderhorn',
					'2' : 'CMS Mezzanine Powderhorn',
					'3' : 'D0 ADIC AML/2 (for SDSS)',},
			     'inq_ignore' : 1 }


configdict['web_server'] = {
    'ServerHost'     : 'gccensrv1.fnal.gov', #name of the host running http server
    'port'           : 80,
    'ServerName'     : 'www-gccen.fnal.gov', # name of web server
    'DocumentRoot'   : '/local/ups/prd/httpd/servers/gccen/html', #top level web directory
    'ScoreBoardFile' : '/var/adm/www/gccen/apache_status', # ScoreBoardFile
    'PidFile'   : '/var/adm/www/gccen/httpd.pid', # full path to httpd pid file
    'ErrorLog'  : '/var/adm/www/gccen/error.log', # full path to httpd error log file
    'CustomLog' : { 'combined' : '/var/adm/www/gccen/access.log', # full path to combined log file 
                    'referer'  : '/var/adm/www/gccen/referer.log', #  full path to referer log file
                    'agent'    : '/var/adm/www/gccen/agent.log' #  full path to agent log file
                    },
    'ServerRoot' : '/etc/httpd' , # location of httpd.conf (e.g. /etc/httpd)
    'ScriptAlias' : {'fake' : '/cgi-bin/', #  e.g. /cgi-bin/ 
                     'real' : '/local/ups/prd/httpd/servers/gccen/cgi-bin/' #  real path to cgi scripts
                     }
    }


'''
LIBRARY MANAGER KEYS

allow - the dictionary defining what nodes are allowed to write
host (string) REQUIRED

port (int) REQUIRED

logname (string) OPTIONAL - defaults to mover name

startup_delay: (int) OPTIONAL Time during which LM ignores mover requests after startup.
	       Default 32

min_file_size: (int or long) OPTIONAL. Minimal file size when requesting volume clerk for
	       the volume to write to. Default 0L

max_file_size: (int or long) OPTIONAL. Maximal file size allowed for the media served by
	       this LM. Default 2*GB - 2*KB

legal_encp_version: (string) OPTIONAL. the oldest allowed encp version. All others will be rejected.
		    Default ''

suspect_volume_expiration_time: (int) OPTIONAL. Time after which becomes cleared.
				Default None

rq_wait_time: (int) OPTIONAL. Recreate postponed request list after this time expires.
	      Default 3600 s

CleanTapeVolumeFamily: (string) OPTIONAL volume family for the cleaning tape. Used by Media Changer.
		       No default

storage_group_limits: minimal amount of drives that can be used by a certain storage group (fair share)
		      when different storage groups compete for tape drives.

-------------------------------------------------------------------
'''

# libary manager
configdict['null1.library_manager']     =  { 'host':'stkensrv4',
                                             'port':7511,
					     'logname':'NULLBM',
					     'norestart':'INQ',
					     'noupdown':'jon', # do not check status
					     'inq_ignore':'jon',  # ignore the status
					     'max_encp_retries':3,
					     'max_file_size':(8L*GB) - 1,
					     'suspect_volume_expiration_time':2,
					     'legal_encp_version':legal_encp_version,
					     }

# library manager
configdict['CD-9940B.library_manager'] = { 'host':'stkensrv4', 'port':7522,
					   'logname':'9940BLM',
					   'norestart':'INQ',
					   'max_encp_retries':3,
					   'max_file_size':(200L*GB) - 1,
					   'min_file_size':300*MB,
					   'suspect_volume_expiration_time':3600*24,
					   'legal_encp_version':legal_encp_version,
					   'storage_group_limits':{'cms' : 8,
								   'ktev' : 1,
								   },
					   'CleanTapeVolumeFamily': 'CLEAN.CleanTapeFileFamily.noWrapper',
					   }

# null media changer
configdict['null1.media_changer']    = { 'host':'stkensrv4',
                                         'port':7520,
                                         'logname':'NUL1MC',
					 'type':'RDD_MediaLoader', 
                                         'norestart':'INQ',
					 'noupdown':'jon',
                                         'inq_ignore':'jon',
                                         'max_work':4}

# AML2 media changer
'''
configdict['aml2r1.media_changer']   = { 'host':'stkensrv4',
                                         'port':7521,
                                         'logname':'AML2R1',
					 'type':'AML2_MediaLoader',
                                         'norestart':'INQ',
					 'RobotArm':'R1',
                                         'IdleTimeHome':30000000,
					 'DriveCleanTime':{'DE':[60,1],'DC':[60,1],'DM':[60,1],'D3':[120,2]},
					 'IOBoxMedia':{'ACI_8MM':['E01','E08'],'ACI_LTO':['E03','E05','E06'],'ACI_DECDLT':['E02','E04','E07']},
					 }
'''

# STK media changer
configdict['stk.media_changer']      = { 'host':'stkensrv4',
                                         'port':7523,
					 'logname':'STKMC ',
					 'type':'STK_MediaLoader',
					 'norestart':'INQ',
					 'max_work':7,				# maximal number of simultaneous requests
					 'acls_host':'fntt',                    # robotic library control host
					 'acls_uname':'acsss',                  # user name on control host
					 'DriveCleanTime':{'9940':[60,1],'9940B':[60,1]},
					 }


"""


MOVER KEYS

These are all the keys that the mover cares about:

host (string) REQUIRED

port (int) REQUIRED

logname (string) OPTIONAL - defaults to mover name

do_eject (string) OPTIONAL - defaults to 'yes', override by setting
		  "no" or "No" (or anything starting with N or n)

do_cleaning (string) OPTIONAL - defaults to 'yes', override by setting
		     "no" or "No" (or anything starting with N or n)
		     This only controls automatic cleaning.  enstore mov --clean-drive
		     will always work, whether this is set or not.

mc_device (string) not needed for NULL movers; required otherwise

min_buffer (int)  OPTIONAL minimum amount of memory to allocate for
		  buffering - defaults to 8MB

max_buffer (int)  OPTIONAL maximum amount of memory to allocate for
		  buffering - defaults to 64MB

max_rate (float) OPTIONAL maximum sustained transfer rate for writes
		 This is used to calculate optimal buffer size.  It does not need to
		 be exact.

device (string) REQUIRED pathname to the UNIX tape device
		for NULL movers make this /dev/null

dismount_delay (int) OPTIONAL delayed dismount value to use when none
		     specified by the client. Default is 60 seconds.
		     Set to negative value to get "infinite" dismount
		     delay.

mount_delay (int) OPTIONAL number of seconds to wait after media
		  changer mount completes, before trying to open
		  device. Default is 15 for FTT driver, 0 for NULL
		  driver

max_dismount_delay: (int s) OPTIONAL maximal dismount delay that can be set for this mover.
			    Default 600 seconds

library (string or list):  REQUIRED.  Who are we working for?  One or
			   more library manager names.

driver (string): REQUIRED.  Currently must be 'FTTDriver' or
		 'NullDriver', or else mover will complain at startup.
		 If we need a disk mover, this would be easy to hack
		 together; doesn't seem too useful though.

max_consecutive_failures: type int, default 2
			  Mover will declare itself "broken" if this
			  many successive transfers fail, and the
			  error was not ENCP_GONE

max_failures: type int, default 3
	      Mover will declare itself "broken" if this many
	      transfers fail within failure_interval (see below).
	      Again, ENCP_GONE errors do not count

failure_interval: type int, default 3600 (one hour)
		  Interval for above.

send_stats: OPTIONAL if present (can be set to 1) send drive statistics to the drivestat Data Base

type: (string) OPTIONAL type of the mover ('','Mover','DiskMover') specifies the type of mover

ip_map: (string) OPTIONAL ip map of the mover node. Used only in Disk Mover to create a volume name

media_type: (string) OPTIONAL media type used for the mover

log_state: (int) OPTIONAL if set log the state of the mover processes

syslog_entry: (string) OPTIONAL expression to match in the syslog for the low level failure diagnostics

restart_on_error: (int) restart mover if it went to the ERROR state. Default - not restart

connect_timeout (sec) TO for mover connection to encp. Default - 15 s

connect_retries (int) number of connect retries. Default 4

update_interval: (int s) OPTIONAL interval for the mover to ask LM for the work. Default 15 s

single_filemark: (int) OPTIONAL if not 0 write single file mark. Default 0 - write 2 fm

check_written_file: (int) OPTIONAL if more than 0 randomly check written file using randomization of
			  this number. Default 0 - no check. 1 - check every written file.

max_time_in_state: (int s) OPTIONAL time in state after which alarm will be raised. Default 600 s

max_in_state_cnt: (int) OPTIONAL if this counter expires Mover errors out with Mover stuck message.
			Default 3

statistics_path: (string) OPTIONAL If specified write the last statistics to the file statistics_path.
			  Default None

compression: (int) OPTIONAL 0 means no compression. Everything else means use the drive compression.
		   Default None - use the drive compression

get_remaining_from_stats: OPTIONAL get remaining bytes info from drive.

include_thread_name: OPTIONAL thread name will be added to the end of log message.

"""

# Mover
configdict['null12.mover'] = { 'host':'stkenmvr12a',
			       'data_ip':'stkenmvr12a',
			       'port':7538,
			       'logname':'NUL12MV',
			       'norestart':'INQ',
			       'noupdown':'efb',
#			       'inq_ignore' : 'jon',
			       'max_buffer':350*MB,
			       'library':'null1.library_manager',
			       'device':'/dev/null',
			       'driver':'NullDriver',
			       'mc_device':'-1',
			       'media_changer':'null1.media_changer',
			       'update_interval':2,
			       }

# Mover 
configdict['9940B10.mover'] = { 'host':'stkenmvr10a',
                                'data_ip':'stkenmvr10a',
                                'port':7575, 'logname':'DBT10MV',
				'statistics_path': '/tmp/enstore/enstore/DBT10MV.stat',
				'norestart':'INQ',
				'max_consecutive_failures': mvr_max_consecutive_failures,
				'max_failures': mvr_max_failures,
				'check_written_file':b_mvr_check_f,
				'check_first_written_file':b_mvr_check_1st,
				'max_buffer':1000*MB,
				'max_rate': s9940b_rate,
				'mount_delay':15,
				'update_interval':5,
				'library':'CD-9940B.library_manager',
				'device':'/dev/rmt/tps0d0n', 'driver':'FTTDriver',
				'mc_device':'0,0,10,15', 'media_changer':'stk.media_changer', 'do_cleaning':'No',
				'syslog_entry':low_level_diag_pattern,
				'max_time_in_state':1200,
				'send_stats':1,
				}


