create sequence volume_seq;
create table volume (
	id		int primary key default nextval('volume_seq'),
	label		varchar unique,
	block_size	int default 0,
	capacity_bytes	bigint default 0,
	declared	timestamp without time zone,
	eod_cookie	varchar,
	first_access	timestamp without time zone,
	last_access	timestamp without time zone,
	library		varchar,
	media_type	varchar,
	non_del_files	int default 0,
	remaining_bytes	bigint default 0,
	sum_mounts	int default 0,
	sum_rd_access	int default 0,
	sum_rd_err	int default 0,
	sum_wr_access	int default 0,
	sum_wr_err	int default 0,
	system_inhibit_0	varchar,
	system_inhibit_1	varchar,
	si_time_0	timestamp without time zone,
	si_time_1	timestamp without time zone,
	user_inhibit_0	varchar,
	user_inhibit_1	varchar,
	storage_group	varchar,
	file_family	varchar,
	wrapper		varchar,
	comment		varchar
);
create index volume_library_idx on volume(library);
create index volume_media_type_idx on volume(media_type);
create index volume_system_inhibit_0_idx on volume(system_inhibit_0);
create index volume_system_inhibit_1_idx on volume(system_inhibit_1);
create index volume_storage_group_idx on volume(storage_group);
create index volume_file_family_idx on volume(file_family);
create index volume_wrapper_idx on volume(wrapper);
create index volume_remaining_bytes_idx on volume(remaining_bytes);

create table file (
	bfid		varchar primary key,
	crc		bigint default -1,
	deleted		char(1) default 'u',
	drive		varchar,
	volume	 	int references volume (id),
	location_cookie	varchar,
	pnfs_path	varchar,
	pnfs_id		varchar,
	sanity_size	bigint default -1,
	sanity_crc	bigint default -1,
	size		bigint default 0,
	uid		int default -1,
	gid		int default -1
);
create index file_volume_idx on file(volume);
create index file_pnfs_path_idx on file(pnfs_path);
create index file_pnfs_id_idx on file(pnfs_id);
create index file_deleted_idx on file(deleted);
create index file_location_cookie_idx on file(location_cookie);

create table sg_count (
	library		varchar,
	storage_group	varchar,
	count		int,
	primary key	(library, storage_group)
);

create function lookup_vol(varchar) returns integer
as 'select id from volume where label = $1;'
language sql;

create sequence state_type_seq;
create table state_type (
	id		int primary key default nextval('state_type_seq'::text),
	name		varchar not null unique
);

create table state (
	time		timestamp without time zone default now(),
	volume		int not null references volume(id) on delete cascade,
	type		int references state_type(id),
	value		varchar
);
create index state_time_idx on state(time);
create index state_volume_idx on state(volume);
create index state_type_idx on state(type);
create index state_value_idx on state(value);

insert into state_type (name) values ('system_inhibit_0');
insert into state_type (name) values ('system_inhibit_1');
insert into state_type (name) values ('user_inhibit_0');
insert into state_type (name) values ('user_inhibit_1');
insert into state_type (name) values ('write_protect');
insert into state_type (name) values ('other');
insert into state_type (name) values ('modified');

create function lookup_stype(varchar) returns integer
as 'select id from state_type where name = $1;'
language sql;

create table bad_file (
	bfid		varchar references file(bfid) on delete cascade,
	path		varchar
);

create index bad_file_bfid_idx on bad_file(bfid);

create table quota (
	library		varchar,         
	storage_group	varchar,
	requested	int default 0,
	authorized	int default 0,
	quota		int default 0,
	significance	character(1) default 'y',
	primary key	(library, storage_group)
);

create index quota_library_idx on quota(library);
create index quota_storage_group_idx on quota(storage_group);

create table option (
	key		varchar,
	value		varchar
);

insert into option (key, value) values ('quota', 'disabled');
