#!/bin/sh

if [ "${1:-}" = "-x" ] ; then set -xv; shift; fi
set -u  # force better programming and ability to use check for not set

. $ENSTORE_DIR/etc/defaults

usage="
ecmd start   (no options/arguments)
ecmd ping    (no options/arguments)
ecmd stop    (no options/arguments)
ecmd restart (no options/arguments)

ecmd encp    [--config_list --verbose --help ] inputfilename outputfilename

ecmd config  [--config_list --config_file=  --dict --load --verbose --alive --help ]
ecmd fcc     [--config_list --bfids --bfid= --verbose --alive --backup --help ]
ecmd vcc     [--config_list --vols  --vol=  --verbose --alive --backup --help ']
ecmd lmc     [--config_list --getwork     --verbose --alive --help '] library
ecmd mcc     [--config_list -list --alive --help ']  media_changer volume drive

ecmd bfids   [--config_list --verbose --help']

ecmd bfid    bfid [--config_list --verbose --help']

ecmd vols    [--config_list --verbose --help']

ecmd vol    external_label [--config_list --verbose --help']

ecmd addvol  [--config_list --vols  --vol=  --verbose --help'] library file_family
             media_type  volume_name, volume_byte_capacity remaining_capacity
ecmd delvol  [--config_list --vols  --vol=  --verbose --help'] volume_name
ecmd clrvol  [--config_list --vols  --vol=  --verbose --help'] volume_name

ecmd log    [--test --alive  --verbose --help]


ecmd pnfs    [--test --status --file= --verbose --help]

ecmd rawdriver-test [--size= --device= --eod_cookie= --verbose --help]
ecmd callback       (no options/arguments)
ecmd udp-test       [--msg= --host= --port= --verbose --help]
ecmd random-file    [--size= --file= --verbose= --help']
ecmd cpio    inputfilename outputarchive

ecmd zero    (no options/arguments)
"

if [ -z "${1-}" ] ; then
  echo "$usage"; exit 1;
else
  cmd=$1
  shift
fi

stat=0

case $cmd in
  start|enstore-start)
    $ENSTORE_DIR/bin/enstore-start
    stat=$?
    ;;
  ping)
    $ENSTORE_DIR/bin/enstore-ping
    stat=$?
    ;;
  stop|enstore-stop)
    $ENSTORE_DIR/bin/enstore-stop
    stat=$?
    ;;
  restart)
    $ENSTORE_DIR/bin/enstore-stop
    $ENSTORE_DIR/bin/enstore-start
    ;;

  encp)
    python $ENSTORE_DIR/src/encp.py                   --config_host=$enstore_config_host --config_port=$enstore_config_port $@
    stat=$?
    ;;

  config|econ)
    python $ENSTORE_DIR/src/configuration_client.py   --config_host=$enstore_config_host --config_port=$enstore_config_port $@
    stat=$?
    ;;

  fcc)
    python $ENSTORE_DIR/src/file_clerk_client.py      --config_host=$enstore_config_host --config_port=$enstore_config_port $@
    stat=$?
    ;;
  bfids)
    python $ENSTORE_DIR/src/file_clerk_client.py    --config_host=$enstore_config_host --config_port=$enstore_config_port --bfids $@
    stat=$?
    ;;
  bfid)
    python $ENSTORE_DIR/src/file_clerk_client.py    --config_host=$enstore_config_host --config_port=$enstore_config_port --bfid=$@
    stat=$?
    ;;

  vcc)
    python $ENSTORE_DIR/src/volume_clerk_client.py    --config_host=$enstore_config_host --config_port=$enstore_config_port $@
    stat=$?
    ;;
  addvol)
    python $ENSTORE_DIR/src/volume_clerk_client.py    --config_host=$enstore_config_host --config_port=$enstore_config_port --addvol $@
    stat=$?
    ;;
  delvol)
    python $ENSTORE_DIR/src/volume_clerk_client.py    --config_host=$enstore_config_host --config_port=$enstore_config_port --delvol $@
    stat=$?
    ;;
  clrvol)
    python $ENSTORE_DIR/src/volume_clerk_client.py    --config_host=$enstore_config_host --config_port=$enstore_config_port --clrvol $@
    stat=$?
    ;;
  vols)
    python $ENSTORE_DIR/src/volume_clerk_client.py    --config_host=$enstore_config_host --config_port=$enstore_config_port --vols $@
    stat=$?
    ;;
  vol)
    python $ENSTORE_DIR/src/volume_clerk_client.py    --config_host=$enstore_config_host --config_port=$enstore_config_port --vol=$@
    stat=$?
    ;;

  lmc)
    python $ENSTORE_DIR/src/library_manager_client.py --config_host=$enstore_config_host --config_port=$enstore_config_port $@
    stat=$?
    ;;

  mcc)
    python $ENSTORE_DIR/src/media_changer_client.py --config_host=$enstore_config_host --config_port=$enstore_config_port $@
    stat=$?
    ;;

  log)
    python $ENSTORE_DIR/src/log_client.py --config_host=$enstore_config_host --config_port=$enstore_config_port $@
    stat=$?
    ;;


  pnfs)
    python $ENSTORE_DIR/src/pnfs.py $@
    stat=$?
    ;;


  rddt|rawdriver-test)
    python $ENSTORE_DIR/src/driver.py $@
    stat=$?
    ;;

  clbk|callback)
    python $ENSTORE_DIR/src/callback.py $@
    stat=$?
    ;;

  udpc|udp-test)
    python $ENSTORE_DIR/src/udp_client.py $@
    stat=$?
    ;;

  ranf|random-file)
    python $ENSTORE_DIR/src/ranfile.py $@
    stat=$?
    ;;

   cpio)
    python $ENSTORE_DIR/src/cpio.py $@
    stat=$?
    ;;

  zero)
    ecmd stop
    (cd $enstore_db; rm *.fake *.jou)
    stat=$?
    ;;



  help)
    echo "$usage"
    stat=$?
    ;;
  *)
    echo "$usage"
    stat=1

esac

exit $stat

