#!/bin/sh
#set -u  # force better programming and ability to use check for not set
if [ "${1:-}" = "-x" ] ; then set -xv; shift; fi

# Starts enstore after a machine boots

timeout=4
output=/home/enstore/`hostname`.startup
touch $output
chown enstore.enstore $output
estat=0

# startup scripts
rc_dir=/etc/init.d
accounting_db=$rc_dir/accounting-db
drivestat_db=$rc_dir/drivestat-db
enstore_db=$rc_dir/enstore-db

case "$1" in

  start)
        echo Starting enstore 2>&1 | tee /dev/console >>$output

	find /tmp/enstore -name "*pids" -exec rm {} \;
	find /tmp/enstore -name "trace*key" -exec rm {} \;

        . /usr/local/etc/setups.sh
        setup enstore 

        n1=`echo $ENSTORE_CONFIG_HOST | sed -e 's/\([^\.]\)\..*/\1/'`
        n2=`uname -n | sed -e 's/\([^\.]\)\..*/\1/'`

	# if running not on config node
        if [ "$n1" != "$n2" ]; then
        #if [ "$n1" == "$n2" ]; then
            for server in config log alarm; do
	      echo "`date`: checking if $server is alive"  2>&1 | tee /dev/console >>$output
              enstore $server --alive --timeout=$timeout --retries=2 > /dev/null 2>&1
              estat=$?
	      echo "`date`:  ... status returned=$estat" 2>&1 | tee /dev/console >>$output
              if [ $estat -ne 0 ] ; then
                echo "`date`: $server not responding, can not continue..." 2>&1 | tee /dev/console >>$output
                break
              fi
            done
	else
	    # start config server
	    echo "`date`: su-ing to enstore and doing an enstore start --just config" 2>&1 | tee /dev/console >>$output
            su enstore -c ". /usr/local/etc/setups.sh ; setup enstore; enstore start --just config"  
            estat=$?
            if [ $estat -ne 0 ] ; then
                echo "`date`: can not start config server ... can not continue..." 2>&1 | tee /dev/console >>$output
                break
            fi
        fi

	# shall we start database servers?

	# should we start enstoredb?
	n3=`enstore config --show database | grep dbhost | cut -d\' -f4 | cut -d\. -f1`
	if [ "$n3" == "$n2" ]; then
		echo "`date`: starting enstore db server" 2>&1 | tee /dev/console >>$output
		$enstore_db start
	fi

	# should we start accounting db?
	n3=`enstore config --show accounting_server | grep dbhost | cut -d\' -f4 | cut -d\. -f1`
	if [ "$n3" == "$n2" ]; then
		echo "`date`: starting accounting db server" 2>&1 | tee /dev/console >>$output
		$accounting_db start
	fi

	# should we start drivestat db?
	n3=`enstore config --show drivestat_server | grep dbhost | cut -d\' -f4 | cut -d\. -f1`
	if [ "$n3" == "$n2" ]; then
		echo "`date`: starting drivestat db server" 2>&1 | tee /dev/console >>$output
		$drivestat_db start
	fi

        if [ $estat -eq 0 ]; then
          # we should be enstore when we start this up (at least not root) if we are a server
          if [ "`whoami`" = "root" -a `echo $n2 | grep -c mvr` -eq 0 ] ; then
	    echo "`date`: su-ing to enstore and doing an enstore Estart $n2" 2>&1 | tee /dev/console >>$output
            su enstore -c ". /usr/local/etc/setups.sh ; setup enstore; enstore Estart $n2"  
          else
            echo "`date`: doing enstore Estart $n2" 2>&1 | tee /dev/console >>$output
            enstore Estart $n2 
          fi
       
        fi
        ;;

  stop)
        echo Stopping enstore 2>&1 | tee /dev/console >>$output
        . /usr/local/etc/setups.sh
        setup enstore

	# check if configure server is running
	if [ "`enstore config --alive --timeout=30`" == "BAD STATUS ('TIMEDOUT', 'configuration_server')" ]
	then
		echo "Can not talk to config server ..."
		echo "Stopping everything by default ..."
		# Just call "enstore stop" to stop everything
		enstore stop
		exit 0
	fi
		

	# Got to figure these out before shutting down enstore
        n2=`uname -n | sed -e 's/\([^\.]\)\..*/\1/'`
	# should we start enstoredb?
	n3=`enstore config --show database | grep dbhost | cut -d\' -f4 | cut -d\. -f1`
	if [ "$n3" == "$n2" ]; then
		enstore_db_stop="yes"
	fi

	# should we stop accounting db?
	n3=`enstore config --show accounting_server | grep dbhost | cut -d\' -f4 | cut -d\. -f1`
	if [ "$n3" == "$n2" ]; then
		accounting_db_stop="yes"
	fi

	# should we stop drivestat db?
	n3=`enstore config --show drivestat_server | grep dbhost | cut -d\' -f4 | cut -d\. -f1`
	if [ "$n3" == "$n2" ]; then
		drivestat_db_stop="yes"
	fi

	enstore stop

	# should we shut down database servers?

	if [ "$enstore_db_stop" == "yes" ]; then
		echo "`date`: stopping enstore db server" 2>&1 | tee /dev/console >>$output
		$enstore_db stop
	fi

	if [ "$accounting_db_stop" == "yes" ]; then
		echo "`date`: stopping accounting db server" 2>&1 | tee /dev/console >>$output
		$accounting_db stop
	fi

	if [ "$drivestat_db_stop" == "yes" ]; then
		echo "`date`: stopping drivestat db server" 2>&1 | tee /dev/console >>$output
		$drivestat_db stop
	fi

        ;;

  install)
        . /usr/local/etc/setups.sh
        setup enstore
        x=/etc/rc.d/init.d/enstore-boot
        rm -f $x; cp $ENSTORE_DIR/bin/enstore-boot $x
        cd /etc/rc.d/rc3.d
        x=S99zzzenstore-boot
        rm -f $x; ln -s ../init.d/enstore-boot $x
        cd /etc/rc.d/rc6.d
        x=K01aaaenstore-boot
        rm -f $x; ln -s ../init.d/enstore-boot $x
        ;;
  *)
        echo "Usage: /etc/rc.d/init.d/enstore-boot {start|stop}"
        estat=1
        ;;
esac

exit $estat
