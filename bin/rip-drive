#!/bin/sh
if [ "${1:-}" = "-x" ] ; then set -xv; shift; fi

# Script that returns mt command results of drives enstore knows about

# This script is meant to be run outside of enstore, hence everything
# is hard-coded and nothing is looked up from the configuration server

# the user must specify a drive or mount/dismount command
if [ -z "${1-}" ] ; then
  echo "Usage $0 <drive>   <mt-command|uname>"
  exit 1
fi

drive=`echo $1 | tr '[A-Z]' '[a-z]'`
command="${2:-status}"


# we have nameserver lookup troubles - skip this step and use the numeric ip's

adic2=131.225.164.19
adic4=131.225.13.19

rip1=131.225.164.1
rip2=131.225.164.2
rip5=131.225.164.5
rip9=131.225.13.20
rip10=131.225.13.22
rip11=131.225.164.17
rip12=131.225.164.18

fntt=131.225.164.13

ripsgi=131.225.164.16

samson=131.225.165.8

d0enmvr1=131.225.164.24
d0enmvr2=131.225.164.25
d0enmvr3=131.225.164.26

d0ensrv1=131.225.164.21
d0ensrv2=131.225.164.22
d0ensrv3=131.225.164.23
d0ensrv4=131.225.164.84
d0ensrv5=131.225.164.85
d0ensrv6=131.225.164.86

d0enmvr4a=131.225.164.104
d0enmvr5a=131.225.164.105
d0enmvr6a=131.225.164.106
d0enmvr7a=131.225.164.107
d0enmvr8a=131.225.164.108
d0enmvr9a=131.225.164.109
d0enmvr10a=131.225.164.110
d0enmvr11a=131.225.164.111
d0enmvr12a=131.225.164.112
d0enmvr13a=131.225.164.113
d0enmvr14a=131.225.164.114
d0enmvr15a=131.225.164.115
d0enmvr16a=131.225.164.116
d0enmvr17a=131.225.164.117
d0enmvr18a=131.225.164.118

stkensrv1=131.225.13.1
stkensrv2=131.225.13.2
stkensrv3=131.225.13.3
stkensrv4=131.225.13.4
stkenmvr1a=131.225.13.5
stkenmvr1b=131.225.13.6
stkenmvr2a=131.225.13.7
stkenmvr2b=131.225.13.8
stkenmvr3a=131.225.13.9
stkenmvr3b=131.225.13.10
stkenmvr4a=131.225.13.11
stkenmvr4b=131.225.13.12

stkenmvr5a=131.225.13.13
stkenmvr5b=131.225.13.14
fntt=131.225.13.15

dasnode=$d0ensrv4
acsssnode=$fntt

# these drive nodes should be looked up in the config file!

de01node=$rip2
de02node=$rip2

dc03node=$rip2
dc04node=$rip1
dc05node=$rip2
dc06node=$rip1

dm07node=$ripsgi
dm08node=$ripsgi
dm09node=$ripsgi
dm10node=$ripsgi
dm11node=$ripsgi
dm12node=$ripsgi

de13node=$d0enmvr4a
de14node=$d0enmvr4a

dc15node=$d0enmvr6a
dc16node=$d0enmvr6a

dc17node=$d0enmvr5a
dm18node=$d0enmvr5a
dm19node=$d0enmvr5a

dc20node=$d0enmvr11a
dc21node=$d0enmvr11a

dc22node=$d0enmvr10a
dc23node=$d0enmvr10a

dc24node=$d0enmvr9a
dc25node=$d0enmvr9a

dc26node=$d0enmvr8a
dc27node=$d0enmvr8a

dc28node=$d0enmvr7a
dc29node=$d0enmvr7a

dm30node=$d0enmvr15a
dm31node=$d0enmvr15a
dm32node=$d0enmvr15a
dm33node=$d0enmvr15a


ea11node=$stkenmvr1a
ea12node=$stkenmvr1a

ea21node=$stkenmvr2a
ea22node=$stkenmvr2a

ea31node=$stkenmvr3a

jde01node=$rip9
jde02node=$rip9
jde03node=$rip9
jde04node=$rip9


# these devices should be looked up in the config file!

de01device=/dev/rmt/tps2d1n
de02device=/dev/rmt/tps2d2n
dc03device=/dev/rmt/tps3d1n
dc04device=/dev/rmt/tps2d2n
dc05device=/dev/rmt/tps2d3n
dc06device=/dev/rmt/tps3d4n
dm07device=/dev/rmt/tps2d1nrvc
dm08device=/dev/rmt/tps2d2nrvc
dm09device=/dev/rmt/tps2d5nrvc
dm10device=/dev/rmt/tps2d6nrvc
dm11device=/dev/rmt/tps2d3nrvc
dm12device=/dev/rmt/tps2d4nrvc

de13device=/dev/rmt/tps2d4n
de14device=/dev/rmt/tps3d3n
dc15device=/dev/rmt/tps2d4n
dc16device=/dev/rmt/tps3d6n
dc17device=/dev/rmt/tps2d5n
dm18device=/dev/rmt/tps3d1n
dm19device=/dev/rmt/tps3d2n
dc20device=/dev/rmt/tps0d1n
dc21device=/dev/rmt/tps3d1n
dc22device=/dev/rmt/tps0d1n
dc23device=/dev/rmt/tps3d1n
dc24device=/dev/rmt/tps0d1n
dc25device=/dev/rmt/tps3d1n
dc26device=/dev/rmt/tps0d1n
dc27device=/dev/rmt/tps3d1n
dc28device=/dev/rmt/tps0d1n
dc29device=/dev/rmt/tps3d1n

dm30device=/dev/rmt/tps2d1n
dm31device=/dev/rmt/tps2d2n
dm32device=/dev/rmt/tps0d1n
dm33device=/dev/rmt/tps0d2n

ea11device=/dev/rmt/tps0d1n
ea12device=/dev/rmt/tps3d1n
ea21device=/dev/rmt/tps0d1n
ea22device=/dev/rmt/tps3d1n
ea31device=/dev/rmt/tps0d1n

EA11="0,0,10,0"
EA12="0,0,10,1"
EA21="0,0,10,2"
EA22="0,0,10,3"
EA31="0,0,10,4"

jde01device=/dev/rmt/tps2d5n
jde02device=/dev/rmt/tps2d4n
jde03device=/dev/rmt/tps2d1n
jde04device=/dev/rmt/tps2d0n


#===================================================


# change to "canonical" name
drive2=$drive
case $drive in
  ea0) drive2=ea11 ;;
  ea1) drive2=ea12 ;;
  ea2) drive2=ea21 ;;
  ea3) drive2=ea22 ;;
  ea4) drive2=ea31 ;;
esac
drive=$drive2


#make sure we know about the drive
case $drive in

  de01|de02|\
  dc03|dc04|dc05|dc06|\
  dm07|dm08|dm09|dm10|dm11|dm12|\
  de13|de14|\
  dc15|dc16|dc17|\
  dm18|dm19|\
  dc20|dc21|dc22|dc23|dc24|dc25|dc26|dc27|dc28|dc29|\
  dm30|dm31|dm32|dm33|\
  ea11|ea12|ea21|ea22|ea31|\
  jde01|jde02|jde03|jde04)

       eval node=\$${drive}node
       eval device=\$${drive}device
       if [ "$command" = "uname" ]; then
         cmd="rsh $node 'uname -a 2>&1 </dev/null; echo \$? 2>&1 </dev/null' </dev/null"
       else
         cmd="rsh $node 'mt -f $device $command 2>&1 </dev/null; echo \$? 2>&1 </dev/null' </dev/null"
       fi
       ;;

    *)  cmd="echo $drive does not exists in `basename $0`; echo 1"

esac
cmd2="x=\"\`$cmd\`\""
echo $cmd

# connection refused are a problem (Don't forget to option nowait.1000 in inetd.conf)
# retries on busys as well
count=0
tries=60


# process the command
while [ $count -le $tries ]; do
  eval $cmd2
  #echo $x
  if [ `echo $x | grep -ci "refused"` -eq 0 -a \
       `echo $x | grep -ci "resource busy"` -eq 0 \
     ] ; then break
  fi
  count=`expr $count + 1`
  sleep 1
done

stat=`echo $x | awk '{print $NF}'`;
echo "$x"
exit $stat
