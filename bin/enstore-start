#!/bin/sh

if [ "${1:-}" = "-x" ] ; then set -xv; shift; fi

if [ "${1:-}" = "--ping" ] ; then
  ping_only=1
  shift
else
  ping_only=0
fi

set -u  # force better programming and ability to use check for not set

. $ENSTORE_DIR/etc/defaults

place=`pwd`
cd $enstore_db

################################################################################################################################################

# the configuration server needs to be the 1st thing started
if [ $ping_only -eq 0 ] ; then
  if [ $enstore_start_config -eq 1 ] ; then
    echo "Starting Configuration Server on $enstore_config_host, port $enstore_config_port, using file $enstore_config_file"
    python $ENSTORE_DIR/src/configuration_server.py \
           --config_host=$enstore_config_host --config_port=$enstore_config_port --config_file=$enstore_config_file &
    echo $! >> $enstore_db/`uname -n`-configuration_pids
    sleep 1
  fi
fi

echo "Checking Configuration Server on $enstore_config_host, port $enstore_config_port"
ecmd config --alive --list
if [ $? -ne 0 ] ; then
  echo "   ...Configuration Server not reachable..."
  exit 1
fi

################################################################################################################################################

# the logger needs to be next

if [ $ping_only -eq 0 ] ; then
  if [ $enstore_start_log -eq 1 ] ; then
    echo "Starting Log Server"
    python $ENSTORE_DIR/src/log_server.py --config_host=$enstore_config_host --config_port=$enstore_config_port &
    echo $! >> $enstore_db/`uname -n`-log_server_pids
    sleep 1
  fi
fi

echo "Checking Log Server"
ecmd log --alive --list
if [ $? -ne 0 ] ; then
  echo "   ...Log Server not reachable..."
  exit 1
fi

################################################################################################################################################

# volume clerk

if [ $ping_only -eq 0 ] ; then
  if [ $enstore_start_volumeclerk -eq 1 ] ; then
    echo "Starting Volume Clerk"
    python $ENSTORE_DIR/src/volume_clerk.py --config_host=$enstore_config_host --config_port=$enstore_config_port &
    echo $! >> $enstore_db/`uname -n`-volume_clerk_pids
    sleep 1
  fi
fi

echo "Checking Volume Clerk"
ecmd vcc --alive --list
if [ $? -ne 0 ] ; then
  echo "   ...Volume Clerk not reachable..."
  exit 1
fi


################################################################################################################################################

# file clerk

if [ $ping_only -eq 0 ] ; then
  if [ $enstore_start_fileclerk -eq 1 ] ; then
    echo "Starting File Clerk"
    python $ENSTORE_DIR/src/file_clerk.py --config_host=$enstore_config_host --config_port=$enstore_config_port &
    echo $! >> $enstore_db/`uname -n`-file_clerk_pids
    sleep 1
  fi
fi

echo "Checking  File Clerk"
ecmd fcc --alive --list
if [ $? -ne 0 ] ; then
  echo "   ...File Clerk not reachable..."
fi

################################################################################################################################################

# library manager
for i in $enstore_libraries; do
  echo "Starting $i Library Manager"

  if [ $ping_only -eq 0 ] ; then
    python $ENSTORE_DIR/src/library_manager.py --config_host=$enstore_config_host --config_port=$enstore_config_port $i &
    echo $! >> $enstore_db/`uname -n`-library_manager_pids
    sleep 1
    ecmd lmc --alive --list $i
    if [ $? -ne 0 ]; then
      echo "   ...$i Library Manager not reachable..."
      exit 1
    fi

  else

    ecmd lmc --alive --list $i
    if [ $? -ne 0 ] ; then
      echo "   ...$i Library Manager not reachable..."
      exit 1
    fi

  fi

done

################################################################################################################################################

# media changer
for i in $enstore_media_changers; do
  echo "Checking $i Media Changer"

  if [ $ping_only -eq 0 ] ; then
    python $ENSTORE_DIR/src/media_changer.py --config_host=$enstore_config_host --config_port=$enstore_config_port $i &
    echo $! >> $enstore_db/`uname -n`-media_changer_pids
    sleep 1
    ecmd mcc --alive --list $i
    if [ $? -ne 0 ]; then
      echo "   ...$i Media Changer not reachable..."
      exit 1
    fi

  else

    ecmd mcc --alive --list $i
    if [ $? -ne 0 ] ; then
      echo "   ...$i Media Changer not reachable..."
      exit 1
    fi

 fi

done


################################################################################################################################################

# mover
for i in $enstore_movers; do
  echo "Starting $i Mover"

  if [ $ping_only -eq 0 ] ; then
    python $ENSTORE_DIR/src/mover.py --config_host=$enstore_config_host --config_port=$enstore_config_port $i &
    echo $! >> $enstore_db/`uname -n`-mover_pids

  else
    echo "   ...No ping test for $i Mover...(yet)"

  fi

done

################################################################################################################################################
# dbase
#start database administrator

if [ $ping_only -eq 0 ] ; then
  if [ $enstore_start_admin -eq 1 ] ; then
    if [ -r $ENSTORE_DB/file -a -r $ENSTORE_DB/volume ] ;  then

      echo "Starting database checkpoint daemon  on `hostname`"
      db_checkpoint -h $ENSTORE_DB  -p 5 &
      echo $! >> $enstore_db/`uname -n`-db_check_pids

      echo "Starting database deadlock daemon  on `hostname`"
      db_deadlock -h $ENSTORE_DB  -t 1 &
      echo $! >> $enstore_db/`uname -n`-db_dlck_pids

      echo "Starting DB Admin Server"
      python $ENSTORE_DIR/src/admin_clerk.py --config_host=$enstore_config_host --config_port=$enstore_config_port &
      echo $! >> $enstore_db/`uname -n`-admin_pids
      sleep 1

    else
      echo "ERROR: file and volume database are not present - can't start db tools"
      exit 1
    fi
  fi

fi
echo "Checking DB Admin Server"
ecmd acc --alive
if [ $? -ne 0 ] ; then
  echo "   ...DB Admin  Server not reachable..."
  exit 1
fi

################################################################################################################################################


cd $place
