#!/bin/sh

if [ "${1:-}" = "-x" ] ; then set -xv; shift; fi
if [ "${1:-}" = "--ping" ] ; then
  ping_only=1
  What="Pinging"
  shift
else
  ping_only=0
  What="Starting"
fi
set -u  # force better programming and ability to use check for not set

. $ENSTORE_DIR/etc/defaults

place=`pwd`
cd $enstore_db

################################################################################################################################################

# the configuration server needs to be the 1st thing started
if [ $ping_only -eq 0 ] ; then
  if [ $enstore_start_config -eq 1 ] ; then
    echo "$What Configuration Server on $enstore_config_host, port $enstore_config_port, using file $enstore_config_file"
    python $ENSTORE_DIR/src/configuration_server.py \
           --config_host=$enstore_config_host --config_port=$enstore_config_port --config_file=$enstore_config_file &
    echo $! >> $enstore_db/`uname -n`-configuration_pids
    echo "pause 2 seconds to make sure it starts"
    sleep 2 # this is necessary to start up with no error messages when running all servers
  fi        # on a single node

else

  echo "$What Configuration Server on $enstore_config_host, port $enstore_config_port, using file $enstore_config_file"
  python $ENSTORE_DIR/src/configuration_client.py --config_host=$enstore_config_host --config_port=$enstore_config_port --alive
  if [ $? -ne 0 ] ; then
    echo "   ...Configuration Server not pingable..."
  fi

fi

################################################################################################################################################

# the logger needs to be next

if [ $ping_only -eq 0 ] ; then
  if [ $enstore_start_log -eq 1 ] ; then
    echo "$What Log Server"
    python $ENSTORE_DIR/src/log_server.py --config_host=$enstore_config_host --config_port=$enstore_config_port &
    echo $! >> $enstore_db/`uname -n`-log_server_pids
    echo "pause 2 seconds to make sure it starts"
    sleep 2 # this is necessary to start up with no error messages when running all servers
  fi        # on a single node

else

  echo "$What Log Server"
  python $ENSTORE_DIR/src/log_server.py --config_host=$enstore_config_host --config_port=$enstore_config_port --alive
  if [ $? -ne 0 ] ; then
    echo "   ...Log Server not pingable..."
  fi

fi

################################################################################################################################################

# volume clerk

if [ $ping_only -eq 0 ] ; then
  if [ $enstore_start_volumeclerk -eq 1 ] ; then
    echo "$What Volume Clerk"
    python $ENSTORE_DIR/src/volume_clerk.py --config_host=$enstore_config_host --config_port=$enstore_config_port &
    echo $! >> $enstore_db/`uname -n`-volume_clerk_pids
  fi

else

  echo "$What Volume Clerk"
  python $ENSTORE_DIR/src/volume_clerk_client.py --config_host=$enstore_config_host --config_port=$enstore_config_port --alive
  if [ $? -ne 0 ] ; then
    echo "   ...Volume Clerk not pingable..."
  fi

fi


################################################################################################################################################

# file clerk

if [ $ping_only -eq 0 ] ; then
  if [ $enstore_start_fileclerk -eq 1 ] ; then
    echo "$What File Clerk"
    python $ENSTORE_DIR/src/file_clerk.py --config_host=$enstore_config_host --config_port=$enstore_config_port &
    echo $! >> $enstore_db/`uname -n`-file_clerk_pids
  fi

else

  echo "$What File Clerk"
  python $ENSTORE_DIR/src/file_clerk_client.py --config_host=$enstore_config_host --config_port=$enstore_config_port --alive
  if [ $? -ne 0 ] ; then
    echo "   ...File Clerk not pingable..."
  fi

fi

################################################################################################################################################

# library manager
for i in $enstore_libraries; do
  echo "$What $i Library Manager"

  if [ $ping_only -eq 0 ] ; then
    python $ENSTORE_DIR/src/library_manager.py --config_host=$enstore_config_host --config_port=$enstore_config_port $i &
    echo $! >> $enstore_db/`uname -n`-library_manager_pids

  else

    python $ENSTORE_DIR/src/library_manager_client.py --config_host=$enstore_config_host --config_port=$enstore_config_port --alive $i
    if [ $? -ne 0 ] ; then
      echo "   ...$i Library Manager not pingable..."
    fi

  fi

done

################################################################################################################################################

# media changer
for i in $enstore_media_changers; do
  echo "$What $i Media Changer"

  if [ $ping_only -eq 0 ] ; then
    python $ENSTORE_DIR/src/media_changer.py --config_host=$enstore_config_host --config_port=$enstore_config_port $i &
    echo $! >> $enstore_db/`uname -n`-media_changer_pids

  else

    python $ENSTORE_DIR/src/media_changer_client.py --config_host=$enstore_config_host --config_port=$enstore_config_port --alive $i 0 0
    if [ $? -ne 0 ] ; then
        echo "   ...$i Media Changer not pingable..."
    fi

 fi

done


################################################################################################################################################

# mover
for i in $enstore_movers; do
  echo "$What $i Mover"

  if [ $ping_only -eq 0 ] ; then
    python $ENSTORE_DIR/src/mover.py --config_host=$enstore_config_host --config_port=$enstore_config_port $i &
    echo $! >> $enstore_db/`uname -n`-mover_pids

  else
    echo "   ...No ping test for $i Mover...(yet)"

  fi

done

################################################################################################################################################
# dbase
#start database administrator

if [ $ping_only -eq 0 ] ; then
  if [ $enstore_start_admin -eq 1 ] ; then
    echo "pause 2 seconds to make sure database files (ie, the file and volume)have been created by the file and volume clerks"
    sleep 2 # this is necessary to wait until all database share memory files are created
    db_checkpoint -h $ENSTORE_DB  -p 5 &
    echo $! >> $enstore_db/`uname -n`-db_check_pids
    echo "Starting database checkpoint daemon  on `hostname`"
    db_deadlock -h $ENSTORE_DB  -t 1 &
    echo $! >> $enstore_db/`uname -n`-db_dlck_pids
    echo "Starting database deadlock daemon  on `hostname`"

    echo "$What DB Admin Server"
    python $ENSTORE_DIR/src/admin_clerk.py --config_host=$enstore_config_host --config_port=$enstore_config_port &
    echo $! >> $enstore_db/`uname -n`-admin_pids
  fi

else
  echo "$What DB Admin Server"
  python $ENSTORE_DIR/src/admin_clerk.py --config_host=$enstore_config_host --config_port=$enstore_config_port --alive
  if [ $? -ne 0 ] ; then
    echo "   ...DB Admin  Server not pingable..."
  fi

fi

################################################################################################################################################


cd $place
