1. If you are running enstore on a node that it has never been run on before,
   you need to create an hsm lock directory and lock file: client_node_install
   in the enstore bin area will do this for you.

2. You also need pnfs to be available and mounted on the machine you are
   trying to run on.  This requires adding your node to the pnfs export list
   on the pnfs server node.  See bakken if you want to add a node to pnfs
   exporting. There will be a default pnfs server node specified in the etc
   defaults 

   To mount a minimal pnfs, create a mount point (/pnfs/enstore by default)
   and use the $ENSTORE/bin/pnfs-mount command, which does a mount -nfs
   ... similar to:

        irix-options="hard,intr,rw,noac"
        options="hard,intr,rw"
    mount -o $options pcfarm4:/enstore  /pnfs/enstore

3. To do "ecmd encp /pnfs/enstore/fndapr/short1.datApr03182844fndapr27992 t.t"
   there has to be enstore 
	1. mover
	2. library manager, and
	3. media changer
   processes have to be running on the node from which data is to be
   retrieved. Additionally, 
	4. file clerk, 
	5. volume clerk, 
	6. configuration server and
	7. log server processes need to be running on nodes specified in the
   "configuration." This configuration is, by default, stored in the enstore
   etc/defaults files. 

   To see if these servers are running, (currently, you must have access to
   the nodes), on the nodes specified in the configuration, simply look for
   enstore processes. The processes will be named after the functions they
   perform.  Note: these process will be associated with specific tcp ports,
   so that even though the servers are running, a user will not be able to use
   the system if port assignments in the users configuration are incorrect.

4. If you've checked out enstore:
        a. cd to the main enstore directory
        b. setup -r `pwd` enstore
	c. in modules, make -f Makefile-Devcodes

   A basic test would be to read from pnfs space to a local file. For example:

     ecmd encp  /pnfs/enstore/fndapr/short1.datApr03182844fndapr27992 t.t

   Currently, the system attempts to have the user update the "lasted parked"
   info and if the file read is read-only by the user, a "Failed to update
   last parked info" message will be displayed.


-------------------------------------------------------------------------
details for developers/administrators:


To get pnfs running. (pnfs depends on gdbm)

   Assuming you at least have a compiled pnfs software tree, edit the
   pnfsSetup file in the pnfs root directory.  Actually the pnfs software
   expects this file to be in /usr/etc; you can create a link.  In this file
   you will need to specify a database directory.

   Within the database directory, the file info/databases will have variables
   to set to the location of database files.

   See Jon Bakken about initializing databases.

   Once the pnfsSetup file, info/databases files, and the database files have
   been setup, to start the pnfs demonds, execute the pnfs "tools/pnfs.server
   start" command.


The rest of the software is enstore.

   Enstore is configured via an enstore etc/???.conf file. The config file
   contains can contain the configuration for all the enstore servers.

   Run "ecmd start" on the various nodes in the configuration.  Note that
   currently, each node has to be specifically supported in the enstore
   etc/defaults file.

   There must be an enstore database directory.


