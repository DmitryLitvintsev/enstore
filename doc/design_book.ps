%!PS-Adobe-3.0
%%BoundingBox: (atend)
%%Pages: (atend)
%%PageOrder: (atend)
%%DocumentFonts: (atend)
%%Creator: Frame 4.0
%%DocumentData: Clean7Bit
%%EndComments
%%BeginProlog
%
% Frame ps_prolog 4.0, for use with Frame 4.0 products
% This ps_prolog file is Copyright (c) 1986-1993 Frame Technology
% Corporation.  All rights reserved.  This ps_prolog file may be
% freely copied and distributed in conjunction with documents created
% using FrameMaker, FrameBuilder and FrameViewer as long as this 
% copyright notice is preserved.
%
% Frame products normally print colors as their true color on a color printer
% or as shades of gray, based on luminance, on a black-and white printer. The
% following flag, if set to True, forces all non-white colors to print as pure
% black. This has no effect on bitmap images.
/FMPrintAllColorsAsBlack             false def
%
% Frame products can either set their own line screens or use a printer's 
% default settings. Three flags below control this separately for no 
% separations, spot separations and process separations. If a flag
% is true, then the default printer settings will not be changed. If it is
% false, Frame products will use their own settings from a table based on
% the printer's resolution.
/FMUseDefaultNoSeparationScreen      true  def
/FMUseDefaultSpotSeparationScreen    true  def
/FMUseDefaultProcessSeparationScreen false def
%
% For any given PostScript printer resolution, Frame products have two sets of 
% screen angles and frequencies for printing process separations, which are 
% recomended by Adobe. The following variable chooses the higher frequencies
% when set to true or the lower frequencies when set to false. This is only
% effective if the appropriate FMUseDefault...SeparationScreen flag is false.
/FMUseHighFrequencyScreens true def
%
% PostScript Level 2 printers contain an "Accurate Screens" feature which can
% improve process separation rendering at the expense of compute time. This 
% flag is ignored by PostScript Level 1 printers.
/FMUseAcccurateScreens true def
%
% The following PostScript procedure defines the spot function that Frame
% products will use for process separations. You may un-comment-out one of
% the alternative functions below, or use your own.
%
% Dot function
/FMSpotFunction {abs exch abs 2 copy add 1 gt 
		{1 sub dup mul exch 1 sub dup mul add 1 sub }
		{dup mul exch dup mul add 1 exch sub }ifelse } def
%
% Line function
% /FMSpotFunction { pop } def
%
% Elipse function
% /FMSpotFunction { dup 5 mul 8 div mul exch dup mul exch add 
%		sqrt 1 exch sub } def
%
%
/FMversion (4.0) def 
/FMLevel1 /languagelevel where {pop languagelevel} {1} ifelse 2 lt def
/FMPColor
	FMLevel1 {
		false
		/colorimage where {pop pop true} if
	} {
		true
	} ifelse
def
/FrameDict 400 dict def 
systemdict /errordict known not {/errordict 10 dict def
		errordict /rangecheck {stop} put} if
% The readline in PS 23.0 doesn't recognize cr's as nl's on AppleTalk
FrameDict /tmprangecheck errordict /rangecheck get put 
errordict /rangecheck {FrameDict /bug true put} put 
FrameDict /bug false put 
mark 
% Some PS machines read past the CR, so keep the following 3 lines together!
currentfile 5 string readline
00
0000000000
cleartomark 
errordict /rangecheck FrameDict /tmprangecheck get put 
FrameDict /bug get { 
	/readline {
		/gstring exch def
		/gfile exch def
		/gindex 0 def
		{
			gfile read pop 
			dup 10 eq {exit} if 
			dup 13 eq {exit} if 
			gstring exch gindex exch put 
			/gindex gindex 1 add def 
		} loop
		pop 
		gstring 0 gindex getinterval true 
		} bind def
	} if
/FMshowpage /showpage load def
/FMquit /quit load def
/FMFAILURE { 
	dup = flush 
	FMshowpage 
	/Helvetica findfont 12 scalefont setfont
	72 200 moveto
	show FMshowpage 
	FMquit 
	} def 
/FMVERSION {
	FMversion ne {
		(Frame product version does not match ps_prolog!) FMFAILURE
		} if
	} def 
/FMBADEPSF { 
	(PostScript Lang. Ref. Man., 2nd Ed., H.2.4 says EPS must not call X              )
	dup dup (X) search pop exch pop exch pop length 
	4 -1 roll 
	putinterval 
	FMFAILURE
	} def
/FMLOCAL {
	FrameDict begin
	0 def 
	end 
	} def 
/concatprocs
	{
	/proc2 exch cvlit def/proc1 exch cvlit def/newproc proc1 length proc2 length add array def
	newproc 0 proc1 putinterval newproc proc1 length proc2 putinterval newproc cvx
}def
FrameDict begin 
/FMnone 0 def
/FMcyan 1 def
/FMmagenta 2 def
/FMyellow 3 def
/FMblack 4 def
/FMcustom 5 def
/FrameNegative false def 
/FrameSepIs FMnone def 
/FrameSepBlack 0 def
/FrameSepYellow 0 def
/FrameSepMagenta 0 def
/FrameSepCyan 0 def
/FrameSepRed 1 def
/FrameSepGreen 1 def
/FrameSepBlue 1 def
/FrameCurGray 1 def
/FrameCurPat null def
/FrameCurColors [ 0 0 0 1 0 0 0 ] def 
/FrameColorEpsilon .001 def	
/eqepsilon {		
	sub dup 0 lt {neg} if
	FrameColorEpsilon le
} bind def
/FrameCmpColorsCMYK { 
	2 copy 0 get exch 0 get eqepsilon {
		2 copy 1 get exch 1 get eqepsilon {
			2 copy 2 get exch 2 get eqepsilon {
				3 get exch 3 get eqepsilon
			} {pop pop false} ifelse
		}{pop pop false} ifelse
	} {pop pop false} ifelse
} bind def
/FrameCmpColorsRGB { 
	2 copy 4 get exch 0 get eqepsilon {
		2 copy 5 get exch 1 get eqepsilon {
			6 get exch 2 get eqepsilon
		}{pop pop false} ifelse
	} {pop pop false} ifelse
} bind def
/RGBtoCMYK { 
	1 exch sub 
	3 1 roll 
	1 exch sub 
	3 1 roll 
	1 exch sub 
	3 1 roll 
	3 copy 
	2 copy 
	le { pop } { exch pop } ifelse 
	2 copy 
	le { pop } { exch pop } ifelse 
	dup dup dup 
	6 1 roll 
	4 1 roll 
	7 1 roll 
	sub 
	6 1 roll 
	sub 
	5 1 roll 
	sub 
	4 1 roll 
} bind def
/CMYKtoRGB { 
	dup dup 4 -1 roll add 						  
	5 1 roll 3 -1 roll add 						  
	4 1 roll add 								  
	1 exch sub dup 0 lt {pop 0} if 3 1 roll 	  
	1 exch sub dup 0 lt {pop 0} if exch 	      
	1 exch sub dup 0 lt {pop 0} if exch	  		  
} bind def
/FrameSepInit {
	1.0 RealSetgray
} bind def
/FrameSetSepColor { 
	/FrameSepBlue exch def
	/FrameSepGreen exch def
	/FrameSepRed exch def
	/FrameSepBlack exch def
	/FrameSepYellow exch def
	/FrameSepMagenta exch def
	/FrameSepCyan exch def
	/FrameSepIs FMcustom def
	setCurrentScreen	
} bind def
/FrameSetCyan {
	/FrameSepBlue 1.0 def
	/FrameSepGreen 1.0 def
	/FrameSepRed 0.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 1.0 def
	/FrameSepIs FMcyan def
	setCurrentScreen	
} bind def
 
/FrameSetMagenta {
	/FrameSepBlue 1.0 def
	/FrameSepGreen 0.0 def
	/FrameSepRed 1.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 1.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMmagenta def
	setCurrentScreen
} bind def
 
/FrameSetYellow {
	/FrameSepBlue 0.0 def
	/FrameSepGreen 1.0 def
	/FrameSepRed 1.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 1.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMyellow def
	setCurrentScreen
} bind def
 
/FrameSetBlack {
	/FrameSepBlue 0.0 def
	/FrameSepGreen 0.0 def
	/FrameSepRed 0.0 def
	/FrameSepBlack 1.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMblack def
	setCurrentScreen
} bind def
 
/FrameNoSep { 
	/FrameSepIs FMnone def
	setCurrentScreen
} bind def
/FrameSetSepColors { 
	FrameDict begin
	[ exch 1 add 1 roll ]
	/FrameSepColors  
	exch def end
	} bind def
/FrameColorInSepListCMYK { 
	FrameSepColors {  
       		exch dup 3 -1 roll 
       		FrameCmpColorsCMYK 
       		{ pop true exit } if
    	} forall 
	dup true ne {pop false} if
	} bind def
/FrameColorInSepListRGB { 
	FrameSepColors {  
       		exch dup 3 -1 roll 
       		FrameCmpColorsRGB 
       		{ pop true exit } if
    	} forall 
	dup true ne {pop false} if
	} bind def
/RealSetgray /setgray load def
/RealSetrgbcolor /setrgbcolor load def
/RealSethsbcolor /sethsbcolor load def
end 
/setgray { 
	FrameDict begin
	FrameSepIs FMnone eq
		{ RealSetgray } 
		{ 
		FrameSepIs FMblack eq 
			{ RealSetgray } 
			{ FrameSepIs FMcustom eq 
			  FrameSepRed 0 eq and
			  FrameSepGreen 0 eq and
			  FrameSepBlue 0 eq and {
			  	RealSetgray
			  } {
				1 RealSetgray pop 
			  } ifelse
			} ifelse
		} ifelse
	end
} bind def
/setrgbcolor { 
	FrameDict begin
	FrameSepIs FMnone eq
	{  RealSetrgbcolor }
	{
		3 copy [ 4 1 roll ] 
		FrameColorInSepListRGB
		{
				FrameSepBlue eq exch 
			 	FrameSepGreen eq and exch 
			 	FrameSepRed eq and
			 	{ 0 } { 1 } ifelse
		}
		{
			FMPColor {
				RealSetrgbcolor
				currentcmykcolor
			} {
				RGBtoCMYK
			} ifelse
			FrameSepIs FMblack eq
			{1.0 exch sub 4 1 roll pop pop pop} {
			FrameSepIs FMyellow eq
			{pop 1.0 exch sub 3 1 roll pop pop} {
			FrameSepIs FMmagenta eq
			{pop pop 1.0 exch sub exch pop } {
			FrameSepIs FMcyan eq
			{pop pop pop 1.0 exch sub } 
			{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
		} ifelse
		RealSetgray
	} 
	ifelse
	end
} bind def
/sethsbcolor {
	FrameDict begin
	FrameSepIs FMnone eq 
	{ RealSethsbcolor } 
	{
		RealSethsbcolor 
		currentrgbcolor  
		setrgbcolor 
	} 
	ifelse
	end
} bind def
FrameDict begin
/setcmykcolor where {
	pop /RealSetcmykcolor /setcmykcolor load def
} {
	/RealSetcmykcolor {
		4 1 roll
		3 { 3 index add 0 max 1 min 1 exch sub 3 1 roll} repeat 
		setrgbcolor pop
	} bind def
} ifelse
userdict /setcmykcolor { 
		FrameDict begin
		FrameSepIs FMnone eq
		{ RealSetcmykcolor } 
		{
			4 copy [ 5 1 roll ]
			FrameColorInSepListCMYK
			{
				FrameSepBlack eq exch 
				FrameSepYellow eq and exch 
				FrameSepMagenta eq and exch 
				FrameSepCyan eq and 
				{ 0 } { 1 } ifelse
			}
			{
				FrameSepIs FMblack eq
				{1.0 exch sub 4 1 roll pop pop pop} {
				FrameSepIs FMyellow eq
				{pop 1.0 exch sub 3 1 roll pop pop} {
				FrameSepIs FMmagenta eq
				{pop pop 1.0 exch sub exch pop } {
				FrameSepIs FMcyan eq
				{pop pop pop 1.0 exch sub } 
				{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
			} ifelse
			RealSetgray
		}
		ifelse
		end
	} bind put
FMLevel1 not { 
	
	/patProcDict 5 dict dup begin
		<0f1e3c78f0e1c387> { 3 setlinewidth -1 -1 moveto 9 9 lineto stroke 
											4 -4 moveto 12 4 lineto stroke
											-4 4 moveto 4 12 lineto stroke} bind def
		<0f87c3e1f0783c1e> { 3 setlinewidth -1 9 moveto 9 -1 lineto stroke 
											-4 4 moveto 4 -4 lineto stroke
											4 12 moveto 12 4 lineto stroke} bind def
		<8142241818244281> { 1 setlinewidth -1 9 moveto 9 -1 lineto stroke
											-1 -1 moveto 9 9 lineto stroke } bind def
		<03060c183060c081> { 1 setlinewidth -1 -1 moveto 9 9 lineto stroke 
											4 -4 moveto 12 4 lineto stroke
											-4 4 moveto 4 12 lineto stroke} bind def
		<8040201008040201> { 1 setlinewidth -1 9 moveto 9 -1 lineto stroke 
											-4 4 moveto 4 -4 lineto stroke
											4 12 moveto 12 4 lineto stroke} bind def
	end def
	/patDict 15 dict dup begin
		/PatternType 1 def		
		/PaintType 2 def		
		/TilingType 3 def		
		/BBox [ 0 0 8 8 ] def 	
		/XStep 8 def			
		/YStep 8 def			
		/PaintProc {
			begin
			patProcDict bstring known {
				patProcDict bstring get exec
			} {
				8 8 true [1 0 0 -1 0 8] bstring imagemask
			} ifelse
			end
		} bind def
	end def
} if
/combineColor {
    FrameSepIs FMnone eq
	{
		graymode FMLevel1 or not {
			
			[/Pattern [/DeviceCMYK]] setcolorspace
			FrameCurColors 0 4 getinterval aload pop FrameCurPat setcolor
		} {
			FrameCurColors 3 get 1.0 ge {
				FrameCurGray RealSetgray
			} {
				FMPColor graymode and {
					0 1 3 { 
						FrameCurColors exch get
						1 FrameCurGray sub mul
					} for
					RealSetcmykcolor
				} {
					4 1 6 {
						FrameCurColors exch get
						graymode {
							1 exch sub 1 FrameCurGray sub mul 1 exch sub
						} {
							1.0 lt {FrameCurGray} {1} ifelse
						} ifelse
					} for
					RealSetrgbcolor
				} ifelse
			} ifelse
		} ifelse
	} { 
		FrameCurColors 0 4 getinterval aload
		FrameColorInSepListCMYK {
			FrameSepBlack eq exch 
			FrameSepYellow eq and exch 
			FrameSepMagenta eq and exch 
			FrameSepCyan eq and
			FrameSepIs FMcustom eq and
			{ FrameCurGray } { 1 } ifelse
		} {
			FrameSepIs FMblack eq
			{FrameCurGray 1.0 exch sub mul 1.0 exch sub 4 1 roll pop pop pop} {
			FrameSepIs FMyellow eq
			{pop FrameCurGray 1.0 exch sub mul 1.0 exch sub 3 1 roll pop pop} {
			FrameSepIs FMmagenta eq
			{pop pop FrameCurGray 1.0 exch sub mul 1.0 exch sub exch pop } {
			FrameSepIs FMcyan eq
			{pop pop pop FrameCurGray 1.0 exch sub mul 1.0 exch sub } 
			{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
		} ifelse
		graymode FMLevel1 or not {
			
			[/Pattern [/DeviceGray]] setcolorspace
			FrameCurPat setcolor
		} { 
			graymode not FMLevel1 and {
				
				dup 1 lt {pop FrameCurGray} if
			} if
			RealSetgray
		} ifelse
	} ifelse
} bind def
/savematrix {
	orgmatrix currentmatrix pop
	} bind def
/restorematrix {
	orgmatrix setmatrix
	} bind def
/dmatrix matrix def
/dpi    72 0 dmatrix defaultmatrix dtransform
    dup mul exch   dup mul add   sqrt def
	
/freq dpi dup 72 div round dup 0 eq {pop 1} if 8 mul div def
/sangle 1 0 dmatrix defaultmatrix dtransform exch atan def
/dpiranges   [  2540    2400    1693     1270    1200     635      600      0      ] def
/CMLowFreqs  [ 100.402  94.8683 89.2289 100.402  94.8683  66.9349  63.2456 47.4342 ] def
/YLowFreqs   [  95.25   90.0    84.65    95.25   90.0     70.5556  66.6667 50.0    ] def
/KLowFreqs   [  89.8026 84.8528 79.8088  89.8026 84.8528  74.8355  70.7107 53.033  ] def
/CLowAngles  [  71.5651 71.5651 71.5651 71.5651  71.5651  71.5651  71.5651 71.5651 ] def
/MLowAngles  [  18.4349 18.4349 18.4349 18.4349  18.4349  18.4349  18.4349 18.4349 ] def
/YLowTDot    [  true    true    false    true    true     false    false   false   ] def
/CMHighFreqs [ 133.87  126.491 133.843  108.503 102.523  100.402   94.8683 63.2456 ] def
/YHighFreqs  [ 127.0   120.0   126.975  115.455 109.091   95.25    90.0    60.0    ] def
/KHighFreqs  [ 119.737 113.137 119.713  128.289 121.218   89.8026  84.8528 63.6395 ] def
/CHighAngles [  71.5651 71.5651 71.5651  70.0169 70.0169  71.5651  71.5651 71.5651 ] def
/MHighAngles [  18.4349 18.4349 18.4349  19.9831 19.9831  18.4349  18.4349 18.4349 ] def
/YHighTDot   [  false   false   true     false   false    true     true    false   ] def
/PatFreq     [	10.5833 10.0     9.4055  10.5833 10.0	  10.5833  10.0	   9.375   ] def
/screenIndex {
	0 1 dpiranges length 1 sub { dup dpiranges exch get 1 sub dpi le {exit} {pop} ifelse } for
} bind def
/getCyanScreen {
	FMUseHighFrequencyScreens { CHighAngles CMHighFreqs} {CLowAngles CMLowFreqs} ifelse
		screenIndex dup 3 1 roll get 3 1 roll get /FMSpotFunction load
} bind def
/getMagentaScreen {
	FMUseHighFrequencyScreens { MHighAngles CMHighFreqs } {MLowAngles CMLowFreqs} ifelse
		screenIndex dup 3 1 roll get 3 1 roll get /FMSpotFunction load
} bind def
/getYellowScreen {
	FMUseHighFrequencyScreens { YHighTDot YHighFreqs} { YLowTDot YLowFreqs } ifelse
		screenIndex dup 3 1 roll get 3 1 roll get { 3 div
			{2 { 1 add 2 div 3 mul dup floor sub 2 mul 1 sub exch} repeat
			FMSpotFunction } } {/FMSpotFunction load } ifelse
			0.0 exch
} bind def
/getBlackScreen  {
	FMUseHighFrequencyScreens { KHighFreqs } { KLowFreqs } ifelse
		screenIndex get 45.0 /FMSpotFunction load 
} bind def
/getSpotScreen {
	getBlackScreen
} bind def
/getCompositeScreen {
	getBlackScreen
} bind def
/FMSetScreen 
	FMLevel1 { /setscreen load 
	}{ {
		8 dict begin
		/HalftoneType 1 def
		/SpotFunction exch def
		/Angle exch def
		/Frequency exch def
		/AccurateScreens FMUseAcccurateScreens def
		currentdict end sethalftone
	} bind } ifelse
def
/setDefaultScreen {
	FMPColor {
		orgrxfer cvx orggxfer cvx orgbxfer cvx orgxfer cvx setcolortransfer
	}
	{
		orgxfer cvx settransfer
	} ifelse
	orgfreq organgle orgproc cvx setscreen
} bind def
/setCurrentScreen {
	FrameSepIs FMnone eq {
		FMUseDefaultNoSeparationScreen {
			setDefaultScreen
		} {
			getCompositeScreen FMSetScreen
		} ifelse
	} {
		FrameSepIs FMcustom eq {
			FMUseDefaultSpotSeparationScreen {
				setDefaultScreen
			} {
				getSpotScreen FMSetScreen
			} ifelse
		} {
			FMUseDefaultProcessSeparationScreen {
				setDefaultScreen
			} {
				FrameSepIs FMcyan eq {
					getCyanScreen FMSetScreen
				} {
					FrameSepIs FMmagenta eq {
						getMagentaScreen FMSetScreen
					} {
						FrameSepIs FMyellow eq {
							getYellowScreen FMSetScreen
						} {
							getBlackScreen FMSetScreen
						} ifelse
					} ifelse
				} ifelse
			} ifelse
		} ifelse
	} ifelse 
} bind def
end
	/gstring FMLOCAL
	/gfile FMLOCAL
	/gindex FMLOCAL
	/orgrxfer FMLOCAL
	/orggxfer FMLOCAL
	/orgbxfer FMLOCAL
	/orgxfer FMLOCAL
	/orgproc FMLOCAL
	/orgrproc FMLOCAL
	/orggproc FMLOCAL
	/orgbproc FMLOCAL
	/organgle FMLOCAL
	/orgrangle FMLOCAL
	/orggangle FMLOCAL
	/orgbangle FMLOCAL
	/orgfreq FMLOCAL
	/orgrfreq FMLOCAL
	/orggfreq FMLOCAL
	/orgbfreq FMLOCAL
	/yscale FMLOCAL
	/xscale FMLOCAL
	/edown FMLOCAL
	/manualfeed FMLOCAL
	/paperheight FMLOCAL
	/paperwidth FMLOCAL
/FMDOCUMENT { 
	array /FMfonts exch def 
	/#copies exch def
	FrameDict begin
	0 ne /manualfeed exch def
	/paperheight exch def
	/paperwidth exch def
	0 ne /FrameNegative exch def 
	0 ne /edown exch def 
	/yscale exch def
	/xscale exch def
	FMLevel1 {
		manualfeed {setmanualfeed} if
		/FMdicttop countdictstack 1 add def 
		/FMoptop count def 
		setpapername 
		manualfeed {true} {papersize} ifelse 
		{manualpapersize} {false} ifelse 
		{desperatepapersize} {false} ifelse 
		{ (Can't select requested paper size for Frame print job!) FMFAILURE } if
		count -1 FMoptop {pop pop} for
		countdictstack -1 FMdicttop {pop end} for 
		}
		{{1 dict dup /PageSize [paperwidth paperheight]put setpagedevice}stopped
		{ (Can't select requested paper size for Frame print job!) FMFAILURE } if
		 {1 dict dup /ManualFeed manualfeed put setpagedevice } stopped pop }
	ifelse 
	
	FMPColor {
		currentcolorscreen
			cvlit /orgproc exch def
				  /organgle exch def 
				  /orgfreq exch def
			cvlit /orgbproc exch def
				  /orgbangle exch def 
				  /orgbfreq exch def
			cvlit /orggproc exch def
				  /orggangle exch def 
				  /orggfreq exch def
			cvlit /orgrproc exch def
				  /orgrangle exch def 
				  /orgrfreq exch def
			currentcolortransfer 
			FrameNegative {
				1 1 4 { 
					pop { 1 exch sub } concatprocs 4 1 roll
				} for
				4 copy
				setcolortransfer
			} if
			cvlit /orgxfer exch def
			cvlit /orgbxfer exch def
			cvlit /orggxfer exch def
			cvlit /orgrxfer exch def
	} {
		currentscreen 
			cvlit /orgproc exch def
				  /organgle exch def 
				  /orgfreq exch def
				  
		currenttransfer 
		FrameNegative {
			{ 1 exch sub } concatprocs
			dup settransfer
		} if 
		cvlit /orgxfer exch def
	} ifelse
	end 
} def 
/pagesave FMLOCAL
/orgmatrix FMLOCAL
/landscape FMLOCAL
/pwid FMLOCAL
/FMBEGINPAGE { 
	FrameDict begin 
	/pagesave save def
	3.86 setmiterlimit
	/landscape exch 0 ne def
	landscape { 
		90 rotate 0 exch dup /pwid exch def neg translate pop 
	}{
		pop /pwid exch def
	} ifelse
	edown { [-1 0 0 1 pwid 0] concat } if
	0 0 moveto paperwidth 0 lineto paperwidth paperheight lineto 
	0 paperheight lineto 0 0 lineto 1 setgray fill
	xscale yscale scale
	/orgmatrix matrix def
	gsave 
} def 
/FMENDPAGE {
	grestore 
	pagesave restore
	end 
	showpage
	} def 
/FMFONTDEFINE { 
	FrameDict begin
	findfont 
	ReEncode 
	1 index exch 
	definefont 
	FMfonts 3 1 roll 
	put
	end 
	} def 
/FMFILLS {
	FrameDict begin dup
	array /fillvals exch def
	dict /patCache exch def
	end 
	} def 
/FMFILL {
	FrameDict begin
	 fillvals 3 1 roll put
	end 
	} def 
/FMNORMALIZEGRAPHICS { 
	newpath
	0.0 0.0 moveto
	1 setlinewidth
	0 setlinecap
	0 0 0 sethsbcolor
	0 setgray 
	} bind def
	/fx FMLOCAL
	/fy FMLOCAL
	/fh FMLOCAL
	/fw FMLOCAL
	/llx FMLOCAL
	/lly FMLOCAL
	/urx FMLOCAL
	/ury FMLOCAL
/FMBEGINEPSF { 
	end 
	/FMEPSF save def 
	/showpage {} def 
% See Adobe's "PostScript Language Reference Manual, 2nd Edition", page 714.
% "...the following operators MUST NOT be used in an EPS file:" (emphasis ours)
	/banddevice {(banddevice) FMBADEPSF} def
	/clear {(clear) FMBADEPSF} def
	/cleardictstack {(cleardictstack) FMBADEPSF} def 
	/copypage {(copypage) FMBADEPSF} def
	/erasepage {(erasepage) FMBADEPSF} def
	/exitserver {(exitserver) FMBADEPSF} def
	/framedevice {(framedevice) FMBADEPSF} def
	/grestoreall {(grestoreall) FMBADEPSF} def
	/initclip {(initclip) FMBADEPSF} def
	/initgraphics {(initgraphics) FMBADEPSF} def
	/initmatrix {(initmatrix) FMBADEPSF} def
	/quit {(quit) FMBADEPSF} def
	/renderbands {(renderbands) FMBADEPSF} def
	/setglobal {(setglobal) FMBADEPSF} def
	/setpagedevice {(setpagedevice) FMBADEPSF} def
	/setshared {(setshared) FMBADEPSF} def
	/startjob {(startjob) FMBADEPSF} def
	/lettertray {(lettertray) FMBADEPSF} def
	/letter {(letter) FMBADEPSF} def
	/lettersmall {(lettersmall) FMBADEPSF} def
	/11x17tray {(11x17tray) FMBADEPSF} def
	/11x17 {(11x17) FMBADEPSF} def
	/ledgertray {(ledgertray) FMBADEPSF} def
	/ledger {(ledger) FMBADEPSF} def
	/legaltray {(legaltray) FMBADEPSF} def
	/legal {(legal) FMBADEPSF} def
	/statementtray {(statementtray) FMBADEPSF} def
	/statement {(statement) FMBADEPSF} def
	/executivetray {(executivetray) FMBADEPSF} def
	/executive {(executive) FMBADEPSF} def
	/a3tray {(a3tray) FMBADEPSF} def
	/a3 {(a3) FMBADEPSF} def
	/a4tray {(a4tray) FMBADEPSF} def
	/a4 {(a4) FMBADEPSF} def
	/a4small {(a4small) FMBADEPSF} def
	/b4tray {(b4tray) FMBADEPSF} def
	/b4 {(b4) FMBADEPSF} def
	/b5tray {(b5tray) FMBADEPSF} def
	/b5 {(b5) FMBADEPSF} def
	FMNORMALIZEGRAPHICS 
	[/fy /fx /fh /fw /ury /urx /lly /llx] {exch def} forall 
	fx fw 2 div add fy fh 2 div add  translate
	rotate
	fw 2 div neg fh 2 div neg translate
	fw urx llx sub div fh ury lly sub div scale 
	llx neg lly neg translate 
	/FMdicttop countdictstack 1 add def 
	/FMoptop count def 
	} bind def
/FMENDEPSF {
	count -1 FMoptop {pop pop} for 
	countdictstack -1 FMdicttop {pop end} for 
	FMEPSF restore
	FrameDict begin 
	} bind def
FrameDict begin 
/setmanualfeed {
%%BeginFeature *ManualFeed True
	 statusdict /manualfeed true put
%%EndFeature
	} bind def
/max {2 copy lt {exch} if pop} bind def
/min {2 copy gt {exch} if pop} bind def
/inch {72 mul} def
/pagedimen { 
	paperheight sub abs 16 lt exch 
	paperwidth sub abs 16 lt and
	{/papername exch def} {pop} ifelse
	} bind def
	/papersizedict FMLOCAL
/setpapername { 
	/papersizedict 14 dict def 
	papersizedict begin
	/papername /unknown def 
		/Letter 8.5 inch 11.0 inch pagedimen
		/LetterSmall 7.68 inch 10.16 inch pagedimen
		/Tabloid 11.0 inch 17.0 inch pagedimen
		/Ledger 17.0 inch 11.0 inch pagedimen
		/Legal 8.5 inch 14.0 inch pagedimen
		/Statement 5.5 inch 8.5 inch pagedimen
		/Executive 7.5 inch 10.0 inch pagedimen
		/A3 11.69 inch 16.5 inch pagedimen
		/A4 8.26 inch 11.69 inch pagedimen
		/A4Small 7.47 inch 10.85 inch pagedimen
		/B4 10.125 inch 14.33 inch pagedimen
		/B5 7.16 inch 10.125 inch pagedimen
	end
	} bind def
/papersize {
	papersizedict begin
		/Letter {lettertray letter} def
		/LetterSmall {lettertray lettersmall} def
		/Tabloid {11x17tray 11x17} def
		/Ledger {ledgertray ledger} def
		/Legal {legaltray legal} def
		/Statement {statementtray statement} def
		/Executive {executivetray executive} def
		/A3 {a3tray a3} def
		/A4 {a4tray a4} def
		/A4Small {a4tray a4small} def
		/B4 {b4tray b4} def
		/B5 {b5tray b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	statusdict begin stopped end 
	} bind def
/manualpapersize {
	papersizedict begin
		/Letter {letter} def
		/LetterSmall {lettersmall} def
		/Tabloid {11x17} def
		/Ledger {ledger} def
		/Legal {legal} def
		/Statement {statement} def
		/Executive {executive} def
		/A3 {a3} def
		/A4 {a4} def
		/A4Small {a4small} def
		/B4 {b4} def
		/B5 {b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	stopped 
	} bind def
/desperatepapersize {
	statusdict /setpageparams known
		{
		paperwidth paperheight 0 1 
		statusdict begin
		{setpageparams} stopped 
		end
		} {true} ifelse 
	} bind def
/DiacriticEncoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /space /exclam /quotedbl
/numbersign /dollar /percent /ampersand /quotesingle /parenleft
/parenright /asterisk /plus /comma /hyphen /period /slash /zero /one
/two /three /four /five /six /seven /eight /nine /colon /semicolon
/less /equal /greater /question /at /A /B /C /D /E /F /G /H /I /J /K
/L /M /N /O /P /Q /R /S /T /U /V /W /X /Y /Z /bracketleft /backslash
/bracketright /asciicircum /underscore /grave /a /b /c /d /e /f /g /h
/i /j /k /l /m /n /o /p /q /r /s /t /u /v /w /x /y /z /braceleft /bar
/braceright /asciitilde /.notdef /Adieresis /Aring /Ccedilla /Eacute
/Ntilde /Odieresis /Udieresis /aacute /agrave /acircumflex /adieresis
/atilde /aring /ccedilla /eacute /egrave /ecircumflex /edieresis
/iacute /igrave /icircumflex /idieresis /ntilde /oacute /ograve
/ocircumflex /odieresis /otilde /uacute /ugrave /ucircumflex
/udieresis /dagger /.notdef /cent /sterling /section /bullet
/paragraph /germandbls /registered /copyright /trademark /acute
/dieresis /.notdef /AE /Oslash /.notdef /.notdef /.notdef /.notdef
/yen /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/ordfeminine /ordmasculine /.notdef /ae /oslash /questiondown
/exclamdown /logicalnot /.notdef /florin /.notdef /.notdef
/guillemotleft /guillemotright /ellipsis /.notdef /Agrave /Atilde
/Otilde /OE /oe /endash /emdash /quotedblleft /quotedblright
/quoteleft /quoteright /.notdef /.notdef /ydieresis /Ydieresis
/fraction /currency /guilsinglleft /guilsinglright /fi /fl /daggerdbl
/periodcentered /quotesinglbase /quotedblbase /perthousand
/Acircumflex /Ecircumflex /Aacute /Edieresis /Egrave /Iacute
/Icircumflex /Idieresis /Igrave /Oacute /Ocircumflex /.notdef /Ograve
/Uacute /Ucircumflex /Ugrave /dotlessi /circumflex /tilde /macron
/breve /dotaccent /ring /cedilla /hungarumlaut /ogonek /caron
] def
/ReEncode { 
	dup 
	length 
	dict begin 
	{
	1 index /FID ne 
		{def} 
		{pop pop} ifelse 
	} forall 
	0 eq {/Encoding DiacriticEncoding def} if 
	currentdict 
	end 
	} bind def
FMPColor 
	
	{
	/BEGINBITMAPCOLOR { 
		BITMAPCOLOR} def
	/BEGINBITMAPCOLORc { 
		BITMAPCOLORc} def
	/BEGINBITMAPTRUECOLOR { 
		BITMAPTRUECOLOR } def
	/BEGINBITMAPTRUECOLORc { 
		BITMAPTRUECOLORc } def
	}
	
	{
	/BEGINBITMAPCOLOR { 
		BITMAPGRAY} def
	/BEGINBITMAPCOLORc { 
		BITMAPGRAYc} def
	/BEGINBITMAPTRUECOLOR { 
		BITMAPTRUEGRAY } def
	/BEGINBITMAPTRUECOLORc { 
		BITMAPTRUEGRAYc } def
	}
ifelse
/K { 
	FMPrintAllColorsAsBlack {
		dup 1 eq 2 index 1 eq and 3 index 1 eq and not
			{7 {pop} repeat 0 0 0 1 0 0 0} if
	} if 
	FrameCurColors astore 
	pop combineColor
} bind def
/graymode true def
	/bwidth FMLOCAL
	/bpside FMLOCAL
	/bstring FMLOCAL
	/onbits FMLOCAL
	/offbits FMLOCAL
	/xindex FMLOCAL
	/yindex FMLOCAL
	/x FMLOCAL
	/y FMLOCAL
/setPatternMode {
	FMLevel1 {
		/bwidth  exch def
		/bpside  exch def
		/bstring exch def
		/onbits 0 def  /offbits 0 def
		freq sangle landscape {90 add} if 
			{/y exch def
			 /x exch def
			 /xindex x 1 add 2 div bpside mul cvi def
			 /yindex y 1 add 2 div bpside mul cvi def
			 bstring yindex bwidth mul xindex 8 idiv add get
			 1 7 xindex 8 mod sub bitshift and 0 ne FrameNegative {not} if
			 {/onbits  onbits  1 add def 1}
			 {/offbits offbits 1 add def 0}
			 ifelse
			}
			setscreen
		offbits offbits onbits add div FrameNegative {1.0 exch sub} if
		/FrameCurGray exch def
	} { 
		pop pop
		dup patCache exch known {
			patCache exch get
		} { 
			dup
			patDict /bstring 3 -1 roll put
			patDict 
			9 PatFreq screenIndex get div dup matrix scale
			makepattern
			dup 
			patCache 4 -1 roll 3 -1 roll put
		} ifelse
		/FrameCurGray 0 def
		/FrameCurPat exch def
	} ifelse
	/graymode false def
	combineColor
} bind def
/setGrayScaleMode {
	graymode not {
		/graymode true def
		FMLevel1 {
			setCurrentScreen
		} if
	} if
	/FrameCurGray exch def
	combineColor
} bind def
/normalize {
	transform round exch round exch itransform
	} bind def
/dnormalize {
	dtransform round exch round exch idtransform
	} bind def
/lnormalize { 
	0 dtransform exch cvi 2 idiv 2 mul 1 add exch idtransform pop
	} bind def
/H { 
	lnormalize setlinewidth
	} bind def
/Z {
	setlinecap
	} bind def
	
/PFill {
	graymode FMLevel1 or not {
		gsave 1 setgray eofill grestore
	} if
} bind def
/PStroke {
	graymode FMLevel1 or not {
		gsave 1 setgray stroke grestore
	} if
	stroke
} bind def
	/fillvals FMLOCAL
/X { 
	fillvals exch get
	dup type /stringtype eq
	{8 1 setPatternMode} 
	{setGrayScaleMode}
	ifelse
	} bind def
/V { 
	PFill gsave eofill grestore
	} bind def
/Vclip {
	clip
	} bind def
/Vstrk {
	currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/N { 
	PStroke
	} bind def
/Nclip {
	strokepath clip newpath
	} bind def
/Nstrk {
	currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/M {newpath moveto} bind def
/E {lineto} bind def
/D {curveto} bind def
/O {closepath} bind def
	/n FMLOCAL
/L { 
 	/n exch def
	newpath
	normalize
	moveto 
	2 1 n {pop normalize lineto} for
	} bind def
/Y { 
	L 
	closepath
	} bind def
	/x1 FMLOCAL
	/x2 FMLOCAL
	/y1 FMLOCAL
	/y2 FMLOCAL
/R { 
	/y2 exch def
	/x2 exch def
	/y1 exch def
	/x1 exch def
	x1 y1
	x2 y1
	x2 y2
	x1 y2
	4 Y 
	} bind def
	/rad FMLOCAL
/rarc 
	{rad 
	 arcto
	} bind def
/RR { 
	/rad exch def
	normalize
	/y2 exch def
	/x2 exch def
	normalize
	/y1 exch def
	/x1 exch def
	mark
	newpath
	{
	x1 y1 rad add moveto
	x1 y2 x2 y2 rarc
	x2 y2 x2 y1 rarc
	x2 y1 x1 y1 rarc
	x1 y1 x1 y2 rarc
	closepath
	} stopped {x1 y1 x2 y2 R} if 
	cleartomark
	} bind def
/RRR { 
	/rad exch def
	normalize /y4 exch def /x4 exch def
	normalize /y3 exch def /x3 exch def
	normalize /y2 exch def /x2 exch def
	normalize /y1 exch def /x1 exch def
	newpath
	normalize moveto 
	mark
	{
	x2 y2 x3 y3 rarc
	x3 y3 x4 y4 rarc
	x4 y4 x1 y1 rarc
	x1 y1 x2 y2 rarc
	closepath
	} stopped
	 {x1 y1 x2 y2 x3 y3 x4 y4 newpath moveto lineto lineto lineto closepath} if
	cleartomark
	} bind def
/C { 
	grestore
	gsave
	R 
	clip
	setCurrentScreen
} bind def
/CP { 
	grestore
	gsave
	Y 
	clip
	setCurrentScreen
} bind def
	/FMpointsize FMLOCAL
/F { 
	FMfonts exch get
	FMpointsize scalefont
	setfont
	} bind def
/Q { 
	/FMpointsize exch def
	F 
	} bind def
/T { 
	moveto show
	} bind def
/RF { 
	rotate
	0 ne {-1 1 scale} if
	} bind def
/TF { 
	gsave
	moveto 
	RF
	show
	grestore
	} bind def
/P { 
	moveto
	0 32 3 2 roll widthshow
	} bind def
/PF { 
	gsave
	moveto 
	RF
	0 32 3 2 roll widthshow
	grestore
	} bind def
/S { 
	moveto
	0 exch ashow
	} bind def
/SF { 
	gsave
	moveto
	RF
	0 exch ashow
	grestore
	} bind def
/B { 
	moveto
	0 32 4 2 roll 0 exch awidthshow
	} bind def
/BF { 
	gsave
	moveto
	RF
	0 32 4 2 roll 0 exch awidthshow
	grestore
	} bind def
/G { 
	gsave
	newpath
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	PFill fill
	grestore
	} bind def
/Gstrk {
	savematrix
    newpath
    2 index 2 div add exch 3 index 2 div sub exch 
    normalize 2 index 2 div sub exch 3 index 2 div add exch 
    translate
    scale 
    0.0 0.0 1.0 5 3 roll arc 
    restorematrix
    currentlinewidth exch setlinewidth PStroke setlinewidth
    } bind def
/Gclip { 
	newpath
	savematrix
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	clip newpath
	restorematrix
	} bind def
/GG { 
	gsave
	newpath
	normalize translate 0.0 0.0 moveto 
	rotate 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath
	PFill
	fill
	grestore
	} bind def
/GGclip { 
	savematrix
	newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath
	clip newpath
	restorematrix
	} bind def
/GGstrk { 
	savematrix
    newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath 
	restorematrix
    currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/A { 
	gsave
	savematrix
	newpath
	2 index 2 div add exch 3 index 2 div sub exch 
	normalize 2 index 2 div sub exch 3 index 2 div add exch 
	translate 
	scale 
	0.0 0.0 1.0 5 3 roll arc 
	restorematrix
	PStroke
	grestore
	} bind def
/Aclip {
	newpath
	savematrix
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	strokepath clip newpath
	restorematrix
} bind def
/Astrk {
	Gstrk
} bind def
/AA { 
	gsave
	savematrix
	newpath
	
	3 index 2 div add exch 4 index 2 div sub exch 
	
	normalize 3 index 2 div sub exch 4 index 2 div add exch
	translate 
	rotate 
	scale 
	0.0 0.0 1.0 5 3 roll arc 
	restorematrix
	PStroke
	grestore
	} bind def
/AAclip {
	savematrix
	newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath
	strokepath clip newpath
	restorematrix
} bind def
/AAstrk {
	GGstrk
} bind def
	/x FMLOCAL
	/y FMLOCAL
	/w FMLOCAL
	/h FMLOCAL
	/xx FMLOCAL
	/yy FMLOCAL
	/ww FMLOCAL
	/hh FMLOCAL
	/FMsaveobject FMLOCAL
	/FMoptop FMLOCAL
	/FMdicttop FMLOCAL
/BEGINPRINTCODE { 
	/FMdicttop countdictstack 1 add def 
	/FMoptop count 7 sub def 
	/FMsaveobject save def
	userdict begin 
	/showpage {} def 
	FMNORMALIZEGRAPHICS 
	3 index neg 3 index neg translate
	} bind def
/ENDPRINTCODE {
	count -1 FMoptop {pop pop} for 
	countdictstack -1 FMdicttop {pop end} for 
	FMsaveobject restore 
	} bind def
/gn { 
	0 
	{	46 mul 
		cf read pop 
		32 sub 
		dup 46 lt {exit} if 
		46 sub add 
		} loop
	add 
	} bind def
	/str FMLOCAL
/cfs { 
	/str sl string def 
	0 1 sl 1 sub {str exch val put} for 
	str def 
	} bind def
/ic [ 
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0
	{0 hx} {1 hx} {2 hx} {3 hx} {4 hx} {5 hx} {6 hx} {7 hx} {8 hx} {9 hx}
	{10 hx} {11 hx} {12 hx} {13 hx} {14 hx} {15 hx} {16 hx} {17 hx} {18 hx}
	{19 hx} {gn hx} {0} {1} {2} {3} {4} {5} {6} {7} {8} {9} {10} {11} {12}
	{13} {14} {15} {16} {17} {18} {19} {gn} {0 wh} {1 wh} {2 wh} {3 wh}
	{4 wh} {5 wh} {6 wh} {7 wh} {8 wh} {9 wh} {10 wh} {11 wh} {12 wh}
	{13 wh} {14 wh} {gn wh} {0 bl} {1 bl} {2 bl} {3 bl} {4 bl} {5 bl} {6 bl}
	{7 bl} {8 bl} {9 bl} {10 bl} {11 bl} {12 bl} {13 bl} {14 bl} {gn bl}
	{0 fl} {1 fl} {2 fl} {3 fl} {4 fl} {5 fl} {6 fl} {7 fl} {8 fl} {9 fl}
	{10 fl} {11 fl} {12 fl} {13 fl} {14 fl} {gn fl}
	] def
	/sl FMLOCAL
	/val FMLOCAL
	/ws FMLOCAL
	/im FMLOCAL
	/bs FMLOCAL
	/cs FMLOCAL
	/len FMLOCAL
	/pos FMLOCAL
/ms { 
	/sl exch def 
	/val 255 def 
	/ws cfs 
	/im cfs 
	/val 0 def 
	/bs cfs 
	/cs cfs 
	} bind def
400 ms 
/ip { 
	is 
	0 
	cf cs readline pop 
	{	ic exch get exec 
		add 
		} forall 
	pop 
	
	} bind def
/rip { 
	   
	  
	  bis ris copy pop 
      is
      0
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop 
	  ris gis copy pop 
	  dup is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop
	  gis bis copy pop 
	  dup add is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
      pop 
      
      } bind def
/wh { 
	/len exch def 
	/pos exch def 
	ws 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/bl { 
	/len exch def 
	/pos exch def 
	bs 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/s1 1 string def
/fl { 
	/len exch def 
	/pos exch def 
	/val cf s1 readhexstring pop 0 get def
	pos 1 pos len add 1 sub {im exch val put} for
	pos len 
	} bind def
/hx { 
	3 copy getinterval 
	cf exch readhexstring pop pop 
	} bind def
	/h FMLOCAL
	/w FMLOCAL
	/d FMLOCAL
	/lb FMLOCAL
	/bitmapsave FMLOCAL
	/is FMLOCAL
	/cf FMLOCAL
/wbytes { 
      dup dup
      24 eq { pop pop 3 mul }
      { 8 eq {pop} {1 eq {7 add 8 idiv} {3 add 4 idiv} ifelse} ifelse } ifelse
	} bind def
/BEGINBITMAPBWc { 
	1 {} COMMONBITMAPc
	} bind def
/BEGINBITMAPGRAYc { 
	8 {} COMMONBITMAPc
	} bind def
/BEGINBITMAP2BITc { 
	2 {} COMMONBITMAPc
	} bind def
/COMMONBITMAPc { 
		 
	/r exch def
	/d exch def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	r                    
	/is im 0 lb getinterval def 
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{ip} image 
	bitmapsave restore 
	grestore
	} bind def
/BEGINBITMAPBW { 
	1 {} COMMONBITMAP
	} bind def
/BEGINBITMAPGRAY { 
	8 {} COMMONBITMAP
	} bind def
/BEGINBITMAP2BIT { 
	2 {} COMMONBITMAP
	} bind def
/COMMONBITMAP { 
	/r exch def
	/d exch def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/bitmapsave save def 
	r                    
	/is w d wbytes string def
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{cf is readhexstring pop} image
	bitmapsave restore 
	grestore
	} bind def
/ngrayt 256 array def
/nredt 256 array def
/nbluet 256 array def
/ngreent 256 array def
	/gryt FMLOCAL
	/blut FMLOCAL
	/grnt FMLOCAL
	/redt FMLOCAL
	/indx FMLOCAL
	/cynu FMLOCAL
	/magu FMLOCAL
	/yelu FMLOCAL
	/k FMLOCAL
	/u FMLOCAL
FMLevel1 {
/colorsetup {
	currentcolortransfer
	/gryt exch def
	/blut exch def
	/grnt exch def
	/redt exch def
	0 1 255 {
		/indx exch def
		/cynu 1 red indx get 255 div sub def
		/magu 1 green indx get 255 div sub def
		/yelu 1 blue indx get 255 div sub def
		/k cynu magu min yelu min def
		/u k currentundercolorremoval exec def
%		/u 0 def
		nredt indx 1 0 cynu u sub max sub redt exec put
		ngreent indx 1 0 magu u sub max sub grnt exec put
		nbluet indx 1 0 yelu u sub max sub blut exec put
		ngrayt indx 1 k currentblackgeneration exec sub gryt exec put
	} for
	{255 mul cvi nredt exch get}
	{255 mul cvi ngreent exch get}
	{255 mul cvi nbluet exch get}
	{255 mul cvi ngrayt exch get}
	setcolortransfer
	{pop 0} setundercolorremoval
	{} setblackgeneration
	} bind def
}
{
/colorSetup2 {
	[ /Indexed /DeviceRGB 255 
		{dup red exch get 255 div 
		 exch dup green exch get 255 div 
		 exch blue exch get 255 div}
	] setcolorspace
} bind def
} ifelse
	/tran FMLOCAL
/fakecolorsetup {
	/tran 256 string def
	0 1 255 {/indx exch def 
		tran indx
		red indx get 77 mul
		green indx get 151 mul
		blue indx get 28 mul
		add add 256 idiv put} for
	currenttransfer
	{255 mul cvi tran exch get 255.0 div}
	exch concatprocs settransfer
} bind def
/BITMAPCOLOR { 
	/d 8 def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/bitmapsave save def
	FMLevel1 {	
		colorsetup
		/is w d wbytes string def
		/cf currentfile def 
		w h d [w 0 0 h neg 0 h] 
		{cf is readhexstring pop} {is} {is} true 3 colorimage 
	} {
		colorSetup2
		/is w d wbytes string def
		/cf currentfile def 
		7 dict dup begin
			/ImageType 1 def
			/Width w def
			/Height h def
			/ImageMatrix [w 0 0 h neg 0 h] def
			/DataSource {cf is readhexstring pop} bind def
			/BitsPerComponent d def
			/Decode [0 255] def
		end image	
	} ifelse
	bitmapsave restore 
	grestore
	} bind def
/BITMAPCOLORc { 
	/d 8 def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	FMLevel1 {	
		colorsetup
		/is im 0 lb getinterval def 
		ws 0 lb getinterval is copy pop 
		/cf currentfile def 
		w h d [w 0 0 h neg 0 h] 
		{ip} {is} {is} true 3 colorimage
	} {
		colorSetup2
		/is im 0 lb getinterval def 
		ws 0 lb getinterval is copy pop 
		/cf currentfile def 
		7 dict dup begin
			/ImageType 1 def
			/Width w def
			/Height h def
			/ImageMatrix [w 0 0 h neg 0 h] def
			/DataSource {ip} bind def
			/BitsPerComponent d def
			/Decode [0 255] def
		end image	
	} ifelse
	bitmapsave restore 
	grestore
	} bind def
/BITMAPTRUECOLORc { 
	/d 24 def
        gsave
 	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
        /bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/ris im 0 w getinterval def	
	/gis im w w getinterval def	
	/bis im w 2 mul w getinterval def 
        
        ws 0 lb getinterval is copy pop 
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        {w rip pop ris} {gis} {bis} true 3 colorimage
        bitmapsave restore 
        grestore
        } bind def
/BITMAPTRUECOLOR { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/h exch def /w exch def
        /bitmapsave save def 
        /is w string def
        /gis w string def
        /bis w string def
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        { cf is readhexstring pop } 
        { cf gis readhexstring pop } 
        { cf bis readhexstring pop } 
        true 3 colorimage 
        bitmapsave restore 
        grestore
        } bind def
/BITMAPTRUEGRAYc { 
	/d 24 def
        gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
        /bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/ris im 0 w getinterval def	
	/gis im w w getinterval def	
	/bis im w 2 mul w getinterval def 
        ws 0 lb getinterval is copy pop 
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        {w rip pop ris gis bis w gray} image
        bitmapsave restore 
        grestore
        } bind def
/ww FMLOCAL
/r FMLOCAL
/g FMLOCAL
/b FMLOCAL
/i FMLOCAL
/gray { 
        /ww exch def
        /b exch def
        /g exch def
        /r exch def
        0 1 ww 1 sub { /i exch def r i get .299 mul g i get .587 mul
			b i get .114 mul add add r i 3 -1 roll floor cvi put } for
        r
        } bind def
/BITMAPTRUEGRAY { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/h exch def /w exch def
        /bitmapsave save def 
        /is w string def
        /gis w string def
        /bis w string def
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        { cf is readhexstring pop 
          cf gis readhexstring pop 
          cf bis readhexstring pop w gray}  image
        bitmapsave restore 
        grestore
        } bind def
/BITMAPGRAY { 
	8 {fakecolorsetup} COMMONBITMAP
	} bind def
/BITMAPGRAYc { 
	8 {fakecolorsetup} COMMONBITMAPc
	} bind def
/ENDBITMAP {
	} bind def
end 
	/ALDsave FMLOCAL
	/ALDmatrix matrix def ALDmatrix currentmatrix pop
/StartALD {
	/ALDsave save def
	 savematrix
	 ALDmatrix setmatrix
	} bind def
/InALD {
	 restorematrix
	} bind def
/DoneALD {
	 ALDsave restore
	} bind def
/I { setdash } bind def
/J { [] 0 setdash } bind def
%%EndProlog
%%BeginSetup
(4.0) FMVERSION
1 1 0 0 612 792 0 1 16 FMDOCUMENT
0 0 /Times-Roman FMFONTDEFINE
1 0 /Times-Bold FMFONTDEFINE
2 0 /Times-Italic FMFONTDEFINE
3 0 /Courier-Bold FMFONTDEFINE
4 0 /Courier FMFONTDEFINE
5 0 /Times-BoldItalic FMFONTDEFINE
32 FMFILLS
0 0 FMFILL
1 0.1 FMFILL
2 0.3 FMFILL
3 0.5 FMFILL
4 0.7 FMFILL
5 0.9 FMFILL
6 0.97 FMFILL
7 1 FMFILL
8 <0f1e3c78f0e1c387> FMFILL
9 <0f87c3e1f0783c1e> FMFILL
10 <cccccccccccccccc> FMFILL
11 <ffff0000ffff0000> FMFILL
12 <8142241818244281> FMFILL
13 <03060c183060c081> FMFILL
14 <8040201008040201> FMFILL
16 1 FMFILL
17 0.9 FMFILL
18 0.7 FMFILL
19 0.5 FMFILL
20 0.3 FMFILL
21 0.1 FMFILL
22 0.03 FMFILL
23 0 FMFILL
24 <f0e1c3870f1e3c78> FMFILL
25 <f0783c1e0f87c3e1> FMFILL
26 <3333333333333333> FMFILL
27 <0000ffff0000ffff> FMFILL
28 <7ebddbe7e7dbbd7e> FMFILL
29 <fcf9f3e7cf9f3f7e> FMFILL
30 <7fbfdfeff7fbfdfe> FMFILL
%%EndSetup
%%Page: "1" 1
%%BeginPaperSize: Letter
%%EndPaperSize
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
J
0 0 0 1 0 0 0 K
378 738 540 756 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(January 18, 1996) 443.96 746.45 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(DRAFT) 272.89 746.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 24 Q
(FTT Design) 244.99 668 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 14 Q
(Chuck Debaun, Stephan Lammel, Marc Mengel, Gene Oleynik, Marilyn Sch-) 88.45 598.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(weitzer) 235.59 584.67 T
(, Mar) 276.23 584.67 T
(garet V) 306.3 584.67 T
(otava) 346.09 584.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Fermilab Computing Division) 221.6 563.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 12 Q
(ABSTRACT) 273.33 485 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 F
1.11 (FTT is the underlying tape I/O package that all other higher level packages at Fermilab use. It) 72 461 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1.51 (hides explicit knowledge about tape related operating system dependencies as well as speci\336c) 72 447 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(drive type pecularities from the higher level package.) 72 433 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
72 54 540 72 C
0 0 0 1 0 0 0 K
72 63 540 63 2 L
1 H
2 Z
0 X
0 0 0 1 0 0 0 K
N
0 0 0 1 0 0 0 K
0 -208 1000 792 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "1" 1
%%Page: "2" 2
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "2" 2
%%Page: "i" 3
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 10 Q
0 X
0 0 0 1 0 0 0 K
(FTT Design) 72 47.18 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
396 36 486 54 R
7 X
V
0 X
(January 5, 1996) 409.2 47.18 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(DRAFT) 315.78 47.3 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
72 63 540 63 2 L
1 H
2 Z
N
522 36 540 54 R
7 X
V
0 12 Q
0 X
(i) 536.66 45.82 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 24 Q
(Contents) 72 704 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 12 Q
(1) 72 660 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Goals) 108 660 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(1) 534 660 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(2) 72 634 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Rationale) 108 634 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(2) 534 634 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 F
(2.1) 108 616 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Creating descriptors) 144 616 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(................................................................................................) 246 616 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(2) 534 616 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(2.2) 108 598 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Performing tape motion, input, and output) 144 598 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(.............................................................) 351 598 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(2) 534 598 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(2.3) 108 580 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Changing Modes) 144 580 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(.....................................................................................................) 231 580 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(2) 534 580 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(2.4) 108 562 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Statistics) 144 562 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(..................................................................................................................) 192 562 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(3) 534 562 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(2.5) 108 544 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Error handling) 144 544 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(.........................................................................................................) 219 544 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(3) 534 544 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(2.6) 108 526 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Informational calls) 144 526 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(..................................................................................................) 240 526 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(3) 534 526 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(2.7) 108 508 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Higher level calls) 144 508 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(....................................................................................................) 234 508 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(3) 534 508 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(3) 72 482 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Err) 108 482 T
(or Returns) 126.44 482 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(4) 534 482 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(4) 72 456 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Low Level Entry Point Overview) 108 456 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(6) 534 456 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 F
(4.1) 108 438 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Header \336le ftt.h) 144 438 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(.......................................................................................................) 225 438 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(6) 534 438 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(4.2) 108 420 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(ftt_descriptor ftt_open\050char *basename,int rdonly\051) 144 420 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(................................................) 390 420 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(6) 534 420 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(4.3) 108 402 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(ftt_descriptor ftt_open_logical\050 char *basename, char *os, char *driveid, int) 144 402 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(rdonly\051) 144 388 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(7) 182.33 388 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(4.4) 108 370 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(int ftt_open_dev\050ftt_descriptor d\051) 144 370 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(...........................................................................) 309 370 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(7) 534 370 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(4.5) 108 352 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(int ftt_close\050ftt_descriptor d\051) 144 352 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(..................................................................................) 288 352 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(7) 534 352 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(4.6) 108 334 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(int ftt_close_dev\050ftt_descriptor d\051) 144 334 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(...........................................................................) 309 334 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(7) 534 334 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(4.7) 108 316 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(int ftt_read\050ftt_descriptor d, char *buf, int length\051) 144 316 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(.................................................) 387 316 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(7) 534 316 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(4.8) 108 298 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(int ftt_write\050ftt_descriptor d,char *buf,int length\051) 144 298 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(..................................................) 384 298 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(8) 534 298 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(4.9) 108 280 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(int ftt_writefm\050ftt_descriptor d\051) 144 280 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(..............................................................................) 300 280 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(8) 534 280 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(4.10) 108 262 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(int ftt_status\050ftt_descriptor d, int time-out\051) 144 262 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(.............................................................) 351 262 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(8) 534 262 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(4.1) 108 244 T
(1) 122.56 244 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(int ftt_guess_label\050char *buf, int length, char **vol, int **vlen\051) 144 244 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(...........................) 453 244 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(9) 534 244 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(4.12) 108 226 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(int ftt_format_label\050 char *buf, int length, char *vol, int vlen, int type\051) 144 226 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(................) 486 226 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(9) 534 226 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(4.13) 108 208 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(int ftt_skip_to_double_fm\050ftt_descriptor d\051) 144 208 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(...........................................................) 357 208 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(9) 534 208 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(4.14) 108 190 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(int ftt_skip_fm\050ftt_descriptor d, int n \051) 144 190 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(.................................................................) 333 190 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(10) 528 190 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(4.15) 108 172 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(int ftt_skip_rec\050ftt_descriptor d, int n\051) 144 172 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(..................................................................) 330 172 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(10) 528 172 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(4.16) 108 154 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(int ftt_rewind\050ftt_descriptor d\051) 144 154 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(.............................................................................) 297 154 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(10) 528 154 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(4.17) 108 136 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(int ftt_erase\050 ftt_descriptor d\051) 144 136 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(...............................................................................) 291 136 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(10) 528 136 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(4.18) 108 118 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(int ftt_unload\050ftt_descriptor d\051) 144 118 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(..............................................................................) 294 118 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(10) 528 118 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(4.19) 108 100 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(int ftt_retension\050ftt_descriptor d\051) 144 100 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(..........................................................................) 306 100 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(1) 528.44 100 T
(1) 534 100 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(4.20) 108 82 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(int ftt_fork\050ftt_descriptor d\051) 144 82 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(..................................................................................) 282 82 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(1) 528.44 82 T
(1) 534 82 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "i" 3
%%Page: "ii" 4
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 10 Q
0 X
0 0 0 1 0 0 0 K
(FTT Design) 342 47.18 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
126 36 216 54 R
7 X
V
0 X
(January 5, 1996) 139.2 47.18 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(DRAFT) 261.78 47.3 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
540 63 72 63 2 L
1 H
2 Z
N
72 36 90 54 R
7 X
V
0 12 Q
0 X
(ii) 83.33 45.82 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(4.21) 108 712 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(void ftt_report\050ftt_descriptor d\051) 144 712 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(............................................................................) 300 712 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(1) 528.44 712 T
(1) 534 712 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(4.22) 108 694 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(int ftt_wait\050ftt_descriptor d\051) 144 694 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(..................................................................................) 282 694 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(1) 528.44 694 T
(1) 534 694 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(4.23) 108 676 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(int ftt_check\050ftt_descriptor d\051) 144 676 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(...............................................................................) 291 676 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(1) 528.44 676 T
(1) 534 676 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(4.24) 108 658 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(ftt_stat_buf ftt_alloc_stat\050\051; int ftt_free_stat\050ftt_stat_buf b\051) 144 658 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(.................................) 429 658 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(12) 528 658 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(4.25) 108 640 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(int ftt_get_stats\050ftt_descriptor d,ftt_stat_buf\051) 144 640 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(.......................................................) 363 640 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(12) 528 640 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(4.26) 108 622 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(char *ftt_extract_stats\050ftt_stat_buf b, int stat\051) 144 622 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(......................................................) 366 622 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(12) 528 622 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(4.27) 108 604 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(void ftt_add_stats\050ftt_stat_buf b1, ftt_stat_buf b2, ftt_stat_buf res\051,) 144 604 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(ftt_sub_stats\050ftt_stat_buf b1, ftt_stat_buf b2, ftt_stat_buf res\051) 144 590 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(13) 440.65 590 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(4.28) 108 572 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(int ftt_get_position\050ftt_descriptor d, int *\336le, int *block\051) 144 572 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(....................................) 420 572 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(14) 528 572 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(4.29) 108 554 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(char *ftt_get_error\050int *pn\051) 144 554 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(...................................................................................) 279 554 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(14) 528 554 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(4.30) 108 536 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(char *ftt_get_basename\050ftt_descriptor d\051) 144 536 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(.............................................................) 345 536 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(14) 528 536 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(4.31) 108 518 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(char **ftt_list_all\050ftt_descriptor d\051) 144 518 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(.......................................................................) 315 518 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(14) 528 518 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(4.32) 108 500 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(int ftt_chall\050ftt_descriptor d, int uid, int gid, int mode\051) 144 500 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(........................................) 408 500 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(14) 528 500 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(4.33) 108 482 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(char *ftt_avail_mode\050ftt_descriptor d, int density) 144 482 T
(, int mode, int blocksize\051) 379.52 482 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(........) 504 482 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(15) 528 482 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(4.34) 108 464 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(char *ftt_set_mode\050ftt_descriptor d, int density) 144 464 T
(, int mode, int blocksize\051) 369.53 464 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(............) 492 464 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(15) 528 464 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(4.35) 108 446 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(char *ftt_get_mode\050ftt_descriptor d, int *density) 144 446 T
(, int *mode, int *blocksize\051) 376.86 446 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(.....) 513 446 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(15) 528 446 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(4.36) 108 428 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(int ftt_get_mode_dev\050ftt_descriptor d, char *devname, int *density) 144 428 T
(, int *mode,) 465.18 428 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(int *blocksize, int *rewind\051) 144 414 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(15) 278.99 414 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(4.37) 108 396 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(int ftt_set_mode_dev\050 ftt_descriptor d, char * devname, int force\051) 144 396 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(......................) 462 396 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(16) 528 396 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(4.38) 108 378 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(int ftt_eprintf\050char *format, ...\051) 144 378 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(.............................................................................) 297 378 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(16) 528 378 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(5) 72 352 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(High Level Calls) 108 352 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(17) 528 352 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 F
(5.1) 108 334 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(int ftt_verify_vol_label\050ftt_descriptor d, int type, char * vollabel, int timeout, int) 144 334 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(rdonly\051) 144 320 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(17) 182.33 320 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(5.2) 108 302 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(int ftt_write_vol_label\050ftt_descriptor d, int type, char * vollabel\051) 144 302 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(........................) 456 302 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(17) 528 302 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(5.3) 108 284 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(int ftt_describe_dev\050 ftt_descriptor d, char *dev) 144 284 T
(, FILE *pf\051) 372.5 284 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(................................) 432 284 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(17) 528 284 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(5.4) 108 266 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(ftt_stat_buf *ftt_init_stats\050 ftt_descriptor d\051) 144 266 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(.........................................................) 357 266 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(17) 528 266 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(5.5) 108 248 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(int ftt_update_stats\050ftt_descriptor d, ftt_stat_buf *bp\051) 144 248 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(.........................................) 405 248 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(17) 528 248 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(5.6) 108 230 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(int ftt_dump_stats\050ftt_stat_buf b, FILE *pf\051) 144 230 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(.........................................................) 357 230 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(18) 528 230 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(6) 72 204 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(SCSI Pass Thr) 108 204 T
(ough calls) 183.13 204 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(19) 528 204 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 F
(6.1) 108 186 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(char *ftt_get_scsi_devname\050handle\051) 144 186 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(....................................................................) 324 186 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(19) 528 186 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(6.2) 108 168 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(scsi_handle ftt_scsi_open\050devname\051) 144 168 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(....................................................................) 324 168 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(19) 528 168 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(6.3) 108 150 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(int ftt_scsi_close\050scsi_handle s\051) 144 150 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(............................................................................) 300 150 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(19) 528 150 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(6.4) 108 132 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(int ftt_scsi_command\050scsi_handle s, char *pcOp, char *pcCmd, int nCmd, char) 144 132 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(*pcRdW) 144 118 T
(r) 186.18 118 T
(, int nRdW) 189.7 118 T
(r) 242.22 118 T
(, int timeout, int write\337ag\051) 245.74 118 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(19) 375.41 118 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(7) 72 92 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(ftt descriptor data structur) 108 92 T
(e) 246.08 92 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(20) 528 92 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "ii" 4
%%Page: "iii" 5
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 10 Q
0 X
0 0 0 1 0 0 0 K
(FTT Design) 72 47.18 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
396 36 486 54 R
7 X
V
0 X
(January 5, 1996) 409.2 47.18 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(DRAFT) 315.78 47.3 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
72 63 540 63 2 L
1 H
2 Z
N
522 36 540 54 R
7 X
V
0 12 Q
0 X
(iii) 529.99 45.82 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(7.1) 108 712 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(dev_info[] table) 144 712 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(.....................................................................................................) 225 712 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(20) 528 712 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(7.2) 108 694 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(which_is_open \337ag) 144 694 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(...............................................................................................) 243 694 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(20) 528 694 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(7.3) 108 676 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(\336le_descriptor) 144 676 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(.......................................................................................................) 219 676 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(20) 528 676 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(7.4) 108 658 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(which_is_default) 144 658 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(...................................................................................................) 231 658 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(20) 528 658 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(7.5) 108 640 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(open_read_only) 144 640 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(.....................................................................................................) 225 640 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(20) 528 640 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(7.6) 108 622 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(current_block, current_\336le, current_valid) 144 622 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(.............................................................) 345 622 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(21) 528 622 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(7.7) 108 604 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(async_pf) 144 604 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(................................................................................................................) 192 604 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(21) 528 604 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(7.8) 108 586 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(last_operation) 144 586 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(........................................................................................................) 216 586 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(21) 528 586 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(7.9) 108 568 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(unrecovered_error) 144 568 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(.................................................................................................) 237 568 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(21) 528 568 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(8) 72 542 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(T) 108 542 T
(est Design) 114.9 542 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(23) 528 542 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 F
(8.1) 108 524 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Overview) 144 524 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(...............................................................................................................) 195 524 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(23) 528 524 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(8.2) 108 506 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(ftt interpreter \050ftt_test\051) 144 506 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(...........................................................................................) 255 506 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(24) 528 506 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 10 Q
(8.2.1) 144 491.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Open/close Commands) 189 491.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(..................................................................................................) 285 491.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(24) 530 491.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(8.2.1.1) 189 479.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(ftt_open [basename] [-readonly] [-status <error>] [-usage]) 234 479.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(.........................) 467.5 479.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(24) 530 479.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(8.2.1.2) 189 467.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(ftt_open_logical [basename] [-\337avor <\337avor>] <-driveid <driveid>> [-) 234 467.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(readonly] [-status <error>] [-usage]) 234 455.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(24) 376.06 455.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(8.2.1.3) 189 443.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(ftt_open_dev [-status <error>] [-usage]) 234 443.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(.......................................................) 392.5 443.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(24) 530 443.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(8.2.1.4) 189 431.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(ftt_close [-status <error>] [-usage]) 234 431.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(...............................................................) 372.5 431.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(25) 530 431.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(8.2.1.5) 189 419.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(ftt_close_dev [-status <error>] [-usage]) 234 419.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(.......................................................) 392.5 419.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(25) 530 419.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(8.2.2) 144 405.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Read/write Commands) 189 405.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(..................................................................................................) 285 405.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(25) 530 405.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(8.2.2.1) 189 393.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(ftt_write_tblock [-nblocks <n>] [-bsize <nbytes>] [-delta <ndbytes>] [-) 234 393.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(alignmask <nalign>] [-delay <nsec>] [-status <error>] [-usage]) 234 381.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(25) 486.66 381.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(8.2.2.2) 189 369.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(ftt_verify_tblock [-nblocks <n>] [-delay <nsec>] [-oddbyte] [-\336lemark] [-) 234 369.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(status <error>] [-usage]) 234 357.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(25) 328.58 357.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(8.2.2.3) 189 345.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(ftt_dump [-nblocks n] [-\336lename <\336lename>] [-status <error>] [-usage]) 234 345.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(...) 522.5 345.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(25) 530 345.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(8.2.2.4) 189 333.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(ftt_undump [-\336lename <\336lename>] [-status <error>] [-usage]) 234 333.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(....................) 480 333.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(25) 530 333.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(8.2.2.5) 189 321.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(ftt_writefm [-status <error>] [-usage]) 234 321.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(..........................................................) 385 321.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(25) 530 321.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(8.2.2.6) 189 309.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(ftt_verify_vol_label [-timeout <nsecs>] [-type <type>] [-label) 234 309.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(<labelname>] [-readonly] [-status <error>] [-usage]) 234 297.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(25) 440.93 297.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(8.2.2.7) 189 285.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(ftt_write_vol_label [-type <type>] [-label <labelname>] [-status <error>] [-) 234 285.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(usage]) 234 273.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(26) 260.1 273.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(8.2.3) 144 259.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(T) 189 259.33 T
(ape Positioning Commands) 194.41 259.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(.........................................................................................) 307.5 259.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(26) 530 259.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(8.2.3.1) 189 247.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(ftt_status [-timeout <nsecs>] [-status <error>]) 234 247.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(............................................) 420 247.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(26) 530 247.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(8.2.3.2) 189 235.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(ftt_test_status [-<\337ag) 234 235.33 T
2 F
(1>) 319.36 235.33 T
0 F
( ... [-<\337ag) 331.11 235.33 T
2 F
(n>) 370.91 235.33 T
0 F
(]] [-timeout <nsecs>] [-status <error>]) 382.66 235.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(.) 537.5 235.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(26) 234 223.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(8.2.3.3) 189 211.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(ftt_skip_to_double_fm [-async] [-status <error>] [-usage]) 234 211.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(..........................) 465 211.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(26) 530 211.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(8.2.3.4) 189 199.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(ftt_skip_fm <n\336lemarks> [-async] [-status <error>] [-usage]) 234 199.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(.....................) 477.5 199.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(26) 530 199.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(8.2.3.5) 189 187.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(ftt_skip_rec <nrecords> [-async] [-status <error>] [-usage]) 234 187.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(........................) 470 187.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(26) 530 187.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(8.2.3.6) 189 175.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(ftt_rewind [-async] [-status <error>] [-usage]) 234 175.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(..............................................) 415 175.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(26) 530 175.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(8.2.3.7) 189 163.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(ftt_retension [-async] [-status <error>] [-usage]) 234 163.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(..........................................) 425 163.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(26) 530 163.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(8.2.3.8) 189 151.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(ftt_erase [-async] [-status <error>] [-usage]) 234 151.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(.................................................) 407.5 151.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(27) 530 151.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(8.2.3.9) 189 139.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(ftt_unload [-async] [-status <error>] [-usage]) 234 139.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(..............................................) 415 139.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(27) 530 139.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(8.2.3.10) 189 127.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(ftt_get_position [-status <error>] [-usage]) 234 127.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(...................................................) 402.5 127.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(27) 530 127.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(8.2.3.1) 189 115.33 T
(1) 216.13 115.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(ftt_verify_position <\336leno> <blockno>) 234 115.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(.......................................................) 392.5 115.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(27) 530 115.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(8.2.4) 144 101.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Asynchronous Support Commands) 189 101.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(...............................................................................) 332.5 101.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(27) 530 101.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(8.2.4.1) 189 89.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(ftt_wait [-status <error>] [-usage]) 234 89.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(................................................................) 370 89.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(27) 530 89.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(8.2.4.2) 189 77.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(ftt_check [-status <error>] [-usage]) 234 77.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(..............................................................) 375 77.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(27) 530 77.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "iii" 5
%%Page: "iv" 6
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 10 Q
0 X
0 0 0 1 0 0 0 K
(FTT Design) 342 47.18 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
126 36 216 54 R
7 X
V
0 X
(January 5, 1996) 139.2 47.18 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(DRAFT) 261.78 47.3 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
540 63 72 63 2 L
1 H
2 Z
N
72 36 90 54 R
7 X
V
0 12 Q
0 X
(iv) 80.66 45.82 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 10 Q
(8.2.5) 144 713.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Get/set Mode Commands and Other Commands That Care About Filenames) 189 713.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(.............) 497.5 713.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(27) 530 713.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(8.2.5.1) 189 701.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(ftt_list_all [-status <error>] [-usage]) 234 701.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(............................................................) 380 701.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(27) 530 701.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(8.2.5.2) 189 689.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(ftt_chall <uid> <gid> <mode> [-status error] [-usage]) 234 689.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(................................) 450 689.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(27) 530 689.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(8.2.5.3) 189 677.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(ftt_verify_exist) 234 677.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(.............................................................................................) 297.5 677.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(27) 530 677.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(8.2.5.4) 189 665.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(ftt_avail_mode <density> <mode> [-blocksize <b>] [-status <error>] [-) 234 665.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(usage]) 234 653.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(27) 260.1 653.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(8.2.5.5) 189 641.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(ftt_get_mode [-status <error>] [-usage]) 234 641.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(.......................................................) 392.5 641.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(28) 530 641.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(8.2.5.6) 189 629.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(ftt_set_mode <density> <mode> [-blocksize <b>] [-status <error>] [-usage]) 234 629.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(28) 234 617.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(8.2.5.7) 189 605.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(ftt_get_mode_dev [device_name] [-status <error>] [-usage]) 234 605.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(.......................) 472.5 605.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(28) 530 605.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(8.2.5.8) 189 593.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(ftt_set_mode_dev <devname> [-blocksize <b>] [-force] [-status <error>] [-) 234 593.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(usage]) 234 581.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(28) 260.1 581.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(8.2.5.9) 189 569.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(ftt_verify_modes) 234 569.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(..........................................................................................) 305 569.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(28) 530 569.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(8.2.5.10) 189 557.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(ftt_get_basename [-status <error>] [-usage]) 234 557.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(................................................) 410 557.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(28) 530 557.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(8.2.5.1) 189 545.33 T
(1) 216.13 545.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(ftt_describe_dev [device_name] [-status <error>] [-usage]) 234 545.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(.........................) 467.5 545.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(28) 530 545.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(8.2.6) 144 531.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Statistic Commands) 189 531.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(.......................................................................................................) 272.5 531.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(28) 530 531.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(8.2.6.1) 189 519.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(ftt_get_stats [-status <error>] [-usage]) 234 519.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(.........................................................) 387.5 519.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(28) 530 519.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(8.2.6.2) 189 507.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(ftt_extract_stats <statistic> [-usage]) 234 507.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(.............................................................) 377.5 507.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(28) 530 507.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(8.2.6.3) 189 495.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(ftt_init_stats [-status <error>] [-usage]) 234 495.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(........................................................) 390 495.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(28) 530 495.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(8.2.6.4) 189 483.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(ftt_update_stats [-part_display] [-status <error>] [-usage]) 234 483.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(..........................) 465 483.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(28) 530 483.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(8.2.6.5) 189 471.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(ftt_dump_stats [-\336lename <\336lename>] [-status <error>] [-usage]) 234 471.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(...............) 492.5 471.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(29) 530 471.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(8.2.7) 144 457.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Error Commands) 189 457.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(...........................................................................................................) 262.5 457.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(29) 530 457.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(8.2.7.1) 189 445.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(ftt_eprintf <string> [-usage]) 234 445.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(.........................................................................) 347.5 445.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(29) 530 445.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(8.2.7.2) 189 433.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(ftt_get_error [-usage]) 234 433.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(....................................................................................) 320 433.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(29) 530 433.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(8.2.7.3) 189 421.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(ftt_max_error [<maxerror>]) 234 421.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(.........................................................................) 347.5 421.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(29) 530 421.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(8.2.8) 144 407.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Miscellaneous Commands) 189 407.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(.............................................................................................) 297.5 407.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(29) 530 407.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(8.2.8.1) 189 395.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(ftt_date [-usage]) 234 395.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(............................................................................................) 300 395.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(29) 530 395.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(8.2.8.2) 189 383.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(ftt_echo [string] [-usage]) 234 383.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(..............................................................................) 335 383.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(29) 530 383.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(8.2.8.3) 189 371.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(ftt_debug [level] [-test] [-usage]) 234 371.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(..................................................................) 365 371.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(29) 530 371.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 12 Q
(8.3) 108 354 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(T) 144 354 T
(est Scripts) 150.49 354 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(............................................................................................................) 204 354 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(30) 528 354 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 10 Q
(8.3.1) 144 339.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(ftt building block scripts) 189 339.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(................................................................................................) 290 339.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(30) 530 339.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(8.3.1.1) 189 327.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(align [device]) 234 327.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(................................................................................................) 290 327.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(30) 530 327.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(8.3.1.2) 189 315.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(asynch [device]) 234 315.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(.............................................................................................) 297.5 315.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(30) 530 315.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(8.3.1.3) 189 303.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(delay [device]) 234 303.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(...............................................................................................) 292.5 303.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(30) 530 303.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(8.3.1.4) 189 291.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(erase [device]) 234 291.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(................................................................................................) 290 291.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(30) 530 291.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(8.3.1.5) 189 279.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(full [device]) 234 279.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(..................................................................................................) 285 279.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(30) 530 279.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(8.3.1.6) 189 267.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(label [device]) 234 267.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(................................................................................................) 290 267.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(30) 530 267.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(8.3.1.7) 189 255.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(mode [device]) 234 255.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(...............................................................................................) 292.5 255.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(30) 530 255.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(8.3.1.8) 189 243.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(notape [device]) 234 243.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(.............................................................................................) 297.5 243.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(31) 530 243.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(8.3.1.9) 189 231.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(position [device]) 234 231.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(...........................................................................................) 302.5 231.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(31) 530 231.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(8.3.1.10) 189 219.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(read_only [device]) 234 219.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(........................................................................................) 310 219.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(31) 530 219.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(8.3.1.1) 189 207.33 T
(1) 216.13 207.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(root [device]) 234 207.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(.................................................................................................) 287.5 207.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(31) 530 207.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(8.3.1.12) 189 195.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(stats [device]) 234 195.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(.................................................................................................) 287.5 195.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(31) 530 195.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(8.3.1.13) 189 183.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(verify [device]) 234 183.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(..............................................................................................) 295 183.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(31) 530 183.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(8.3.1.14) 189 171.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(write [device]) 234 171.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(................................................................................................) 290 171.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(31) 530 171.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(8.3.1.15) 189 159.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(random [device]) 234 159.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(............................................................................................) 300 159.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(31) 530 159.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(8.3.2) 144 145.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(All inclusive tests) 189 145.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(..........................................................................................................) 265 145.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(31) 530 145.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(8.3.2.1) 189 133.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(ftt_fast [-a] [-u] [device]) 234 133.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(...............................................................................) 332.5 133.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(31) 530 133.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(8.3.2.2) 189 121.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(ftt_slow [-a] [-u] [device]) 234 121.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(.............................................................................) 337.5 121.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(32) 530 121.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(8.3.2.3) 189 109.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(ftt_exercise [device]) 234 109.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(.....................................................................................) 317.5 109.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(32) 530 109.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "iv" 6
%%Page: "1" 7
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
396 36 486 54 R
7 X
0 0 0 1 0 0 0 K
V
0 10 Q
0 X
(January 5, 1996) 409.2 47.18 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(DRAFT) 315.78 47.3 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
72 63 540 63 2 L
1 H
2 Z
N
522 36 540 54 R
7 X
V
0 12 Q
0 X
(1) 534 45.82 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 10 Q
(FTT Design) 54 37.18 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 18 Q
(1) 54 708 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Goals) 90 708 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 12 Q
-0.22 (As required in the) 54 682 P
2 F
-0.22 (FTT Requir) 142.41 682 P
-0.22 (ements) 198.09 682 P
0 F
-0.22 (this design attempts to resolve the various OS and tape drive depen-) 234.18 682 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(dencies found in various UNIX \337avors and elsewhere in dealing with tape devices, including:) 54 668 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 F
(\245) 72 648 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 F
0.23 (Dif) 90 648 P
0.23 (fering constant names -- W) 105.78 648 P
0.23 (e address this by providing ftt speci\336c constants for various activi-) 236.38 648 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(ties that are consistent on all platforms) 90 634 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 F
(\245) 72 616 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 F
1.04 (Dif) 90 616 P
1.04 (fering errno values -- W) 105.78 616 P
1.04 (e address this by translating errno into ftt_errno where necessary to) 224.96 616 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(provide a consistent error number for the same error on dif) 90 602 T
(ferent platforms) 371.71 602 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 F
(\245) 72 584 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 F
-0.17 (Dif) 90 584 P
-0.17 (fering close behavior -- W) 105.78 584 P
-0.17 (e address this by performing ensuring a correct number of \336lemarks,) 230.76 584 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.26 (etc. are written to the tape, and making sure that we prepare for whatever system speci\336c actions) 90 570 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(will happen at device close.) 90 556 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 F
(\245) 72 538 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 F
0.86 (Special actions to cross \336le marks -- W) 90 538 P
0.86 (e will hide from the user any open/close sequences, etc.) 283.35 538 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.58 (required to get past \336lemarks, and ensure consistent tape position of being just past the \336lemark) 90 524 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(when an EOF is returned.) 90 510 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 F
(\245) 72 492 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 F
1.47 (Dif) 90 492 P
1.47 (fering mechanisms to sense tape status -- we provide a consistent interface on all systems,) 105.78 492 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.48 (which allows for \322I don\325) 90 478 P
0.48 (t know\323 responses. This allows con\336gurations with rich available status) 209.69 478 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.65 (information to be taken advantage of, while allowing for con\336gurations where little or no status) 90 464 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(information is available.) 90 450 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 F
(\245) 72 432 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 F
0.43 (System dependencies should be determined from a table or tables of possibilities and checked at) 90 432 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(runtime, rather than being #ifdef-ed in the code.) 90 418 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "1" 7
%%Page: "2" 8
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
126 36 216 54 R
7 X
0 0 0 1 0 0 0 K
V
0 10 Q
0 X
(January 5, 1996) 139.2 47.18 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(DRAFT) 261.78 47.3 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
540 63 72 63 2 L
1 H
2 Z
N
72 36 90 54 R
7 X
V
0 12 Q
0 X
(2) 84 45.82 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 10 Q
(FTT Design) 54 37.18 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 18 Q
(2) 54 708 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Rationale) 90 708 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 12 Q
-0.69 (Use of the) 54 682 P
1 F
-0.69 (ftt) 104.26 682 P
0 F
-0.69 ( library revolves around the concept of a) 116.24 682 P
1 F
-0.69 (descriptor) 308.02 682 P
0 F
-0.69 (, which is a data structure which describes) 360.2 682 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.68 (a given tape drive. The descriptor contains information about what operating system devices are associated) 54 668 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.21 (with the drive, which of those devices are associated with what modes of operation, and what system spe-) 54 654 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.44 (ci\336c variations are required to perform which operations. The descriptor can be used to obtain information) 54 640 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.69 (about the drive without performing any I/O to the tape drive, or can be used to request that I/O be per-) 54 626 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2.32 (formed at various density and compression modes. The library will open and close the appropriate) 54 612 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(operating system devices to perform the requested I/O as needed.) 54 598 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 16 Q
(2.1    Cr) 54 565.33 T
(eating descriptors) 108.37 565.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 12 Q
0.06 (There are two ways to create an) 54 541 P
1 F
0.06 (ftt) 210 541 P
0 F
0.06 ( descriptor) 221.99 541 P
0.06 (. The usual method is to call) 272.37 541 P
1 F
0.06 (ftt_open) 411.43 541 P
0 F
0.06 ( which takes as an ar-) 454.09 541 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1.58 (gument a) 54 527 P
1 F
1.58 (basename) 104.49 527 P
0 F
1.58 (, which is a string describing the tape drive wanted, \050usually the common pre\336x) 155.15 527 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.68 (between the devices associated with a given tape drive\051. The) 54 513 P
1 F
-0.68 (ftt_open) 340.79 513 P
0 F
-0.68 ( call veri\336es that the indicated device) 383.45 513 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.68 (exists on the system, determines what sort of device it is, and creates a descriptor) 54 499 P
-0.68 (. The descriptor is actually) 433.08 499 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.27 (created by a routine called) 54 485 P
1 F
0.27 (ftt_open_logical) 184.96 485 P
0 F
0.27 (, which manufactures the appropriate descriptor for a device) 266.95 485 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(of a given type on a given operating system.) 54 471 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.25 (For convenience, an actual device pathname can be used for a basename, and will be trimmed to the base-) 54 451 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(name internally) 54 437 T
(.) 128.21 437 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 16 Q
(2.2    Performing tape motion, input, and output) 54 404.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 12 Q
1.03 (Once a descriptor has been obtained, motion, input, and output can be performed with straightforward) 54 380 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.25 (calls. All of the basics of input, output, forward and backwards skipping of records, \336lemarks, etc. as well) 54 366 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(as rewind, retension, erase tape, etc. are provided with simple) 54 352 T
1 F
( ftt) 349.6 352 T
0 F
( calls.) 364.58 352 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.71 (All system speci\336c operations like opening the operating system device, close/reopen on read to write tran-) 54 332 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.32 (sition, forward skipping over \336lemarks when an EOF is read, etc. are performed implicitly as needed by) 54 318 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(the) 54 304 T
1 F
(ftt) 71.66 304 T
0 F
( library) 83.65 304 T
(.) 117.86 304 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 16 Q
(2.3    Changing Modes) 54 271.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 12 Q
-0.1 (T) 54 247 P
-0.1 (ape drives provide a variety of modes, usually some combination of density \050e.g. bits per inch written to) 60.49 247 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.58 (tape\051, and compression.) 54 233 P
1 F
-0.58 (ftt) 169.25 233 P
0 F
-0.58 ( calls provide several ways to select what mode\050s\051 should be used in performing) 181.23 233 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.68 (subsequent operations, and to determine what modes are currently selected. For example) 54 219 P
1 F
0.68 (ftt_get_mode) 490.69 219 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 F
-0.39 (will tell you about the currently selected mode, while) 54 205 P
1 F
-0.39 (ftt_set_mode) 309.12 205 P
0 F
-0.39 ( will select a speci\336c density and com-) 375.1 205 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.41 (pression pair) 54 191 P
-0.41 (. Calls) 114.59 191 P
1 F
-0.41 (ftt_set_mode_dev) 147.44 191 P
0 F
-0.41 (and) 240.01 191 P
1 F
-0.41 ( ftt_get_mode_dev) 257.34 191 P
0 F
-0.41 (let you select or examine modes associated) 353.83 191 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.32 (with a particular device name. Also there are calls like) 54 177 P
1 F
0.32 (ftt_avail_mode) 321.47 177 P
0 F
0.32 ( to let you check if a given mode) 398.13 177 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.71 (could be set on a given drive. Note that the) 54 163 P
1 F
0.71 (ftt) 270.06 163 P
0 F
0.71 ( library does not) 282.05 163 P
2 F
0.71 (r) 366.21 163 P
0.71 (eset) 370.43 163 P
0 F
0.71 ( modes to their previous values on) 389.09 163 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2.26 (close, so on systems like AIX, this will leave the device in whatever mode you last had set when) 54 149 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(ftt_open_dev) 54 135 T
0 F
( was called.) 120.66 135 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.53 (Operating systems also provide several \336ctitious \050that is not provided by the drive\051 modes, like rewind-on-) 54 115 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.68 (close, retension-on-open, swap-bytes, etc. The) 54 101 P
1 F
-0.68 (ftt) 276.2 101 P
0 F
-0.68 (library will tell you about those modes if you ask it about) 290.51 101 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
576 131 578 171 R
V
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "2" 8
%%Page: "3" 9
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
396 36 486 54 R
7 X
0 0 0 1 0 0 0 K
V
0 10 Q
0 X
(January 5, 1996) 409.2 47.18 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(DRAFT) 315.78 47.3 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
72 63 540 63 2 L
1 H
2 Z
N
522 36 540 54 R
7 X
V
0 12 Q
0 X
(3) 534 45.82 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 10 Q
(FTT Design) 54 37.18 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 12 Q
-0.07 (particular devices, but only) 54 712 P
1 F
-0.07 (ftt_set_mode_dev) 187.38 712 P
0 F
-0.07 (with a force bit set will set them as the mode to be used to) 280.29 712 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(do I/O.) 54 698 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 16 Q
(2.4    Statistics) 54 665.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 12 Q
-0.16 (V) 54 641 P
-0.16 (arious device statistics are extractable from most SCSI tape drives, which the standard operating system) 61.33 641 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.55 (drivers do not provide to the user) 54 627 P
0.55 (.) 215.98 627 P
1 F
0.55 (ftt) 222.53 627 P
0 F
0.55 ( includes code to send and receive the appropriate SCSI command) 234.52 627 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.66 (frames to the drive to obtain this information and report it to the user) 54 613 P
-0.66 (. The call) 375.02 613 P
1 F
-0.66 (ftt_get_stats) 421.02 613 P
0 F
-0.66 ( obtains a status) 483.66 613 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.45 (block from the drive, and) 54 599 P
1 F
-0.45 (ftt_extract_stats) 176.41 599 P
0 F
-0.45 ( is used to pull individual statistics from the block. In this man-) 259.7 599 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1.62 (ner) 54 585 P
1.62 (, the library provides whichever statistics are available in a given situation in a consistent, device) 68.84 585 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.71 (independent fashion.) 54 571 P
1 F
0.71 (ftt_extract_stats) 158.4 571 P
0 F
0.71 ( is allowed to return a null string to indicate \322I don\325) 241.69 571 P
0.71 (t know\323 as a) 496.23 571 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(response to any given request.) 54 557 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 16 Q
(2.5    Err) 54 524.33 T
(or handling) 114.59 524.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 12 Q
0.48 (Errors are handled in a consistent fashion throughout) 54 500 P
1 F
0.48 (ftt) 315.12 500 P
0 F
0.48 (, where an error number and error string can be) 327.11 500 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.28 (obtained if any of the library calls return an unsuccessful response. The error strings have speci\336c infor-) 54 486 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(mation about the speci\336c error which just occurred, not just a stock expansion of the error number) 54 472 T
(.) 524.26 472 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 16 Q
(2.6    Informational calls) 54 439.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 12 Q
0.59 (The) 54 415 P
1 F
0.59 (ftt) 76.25 415 P
0 F
0.59 ( library provides various informational calls to \336nd out what devices are associated with a given) 88.24 415 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.16 (drive, whether particular modes are available on a given drive, what error occurred in the preceding call,) 54 401 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(what sort of tape label a block represents.) 54 387 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 16 Q
(2.7    Higher level calls) 54 354.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 12 Q
-0.37 (The) 54 330 P
1 F
-0.37 (ftt) 75.29 330 P
0 F
-0.37 ( library also provides some higher level calls which perform multiple low level calls; calls to verify) 87.28 330 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.31 (the appropriate tape is mounted with the right permissions, calls to maintain tape usage and error statistics) 54 316 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(across a series of operations, and routines to print various sorts of information to \336les.) 54 302 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "3" 9
%%Page: "4" 10
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
126 36 216 54 R
7 X
0 0 0 1 0 0 0 K
V
0 10 Q
0 X
(January 5, 1996) 139.2 47.18 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(DRAFT) 261.78 47.3 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
540 63 72 63 2 L
1 H
2 Z
N
72 36 90 54 R
7 X
V
0 12 Q
0 X
(4) 84 45.82 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 10 Q
(FTT Design) 54 37.18 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 18 Q
(3) 54 708 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Err) 90 708 T
(or Returns) 117.67 708 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 12 Q
-0.38 (All of the ftt integer functions return -1, set an internal error number) 54 682 P
-0.38 (, and call ftt_eprintf \050which prints into) 376.61 682 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(a static buf) 54 668 T
(fer\051 with details if an error occurs.) 106.44 668 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.16 (zero is failure for functions returning a character pointer) 54 648 P
0.16 (, ftt_descriptor) 324.72 648 P
0.16 (, or ftt_stat_buf. These also set an) 395.06 648 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(error number and call ftt_eprintf \050which prints into a static buf) 54 634 T
(fer\051 with details if an error occurs.) 353.06 634 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(The ftt_eprintf\050\051 result string and numeric error code can be obtained by calling ftt_get_error\050\051.) 54 614 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(ftt_get_error\050\051 does not af) 54 594 T
(fect the error string) 178.08 594 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.52 (The error string will include mode sense data if it is available and appropriate for the error) 54 574 P
-0.52 (. The error string) 478.25 574 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(will include the device name involved in the error) 54 560 T
(, if any) 292.81 560 T
(.) 325.69 560 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.51 (The ftt library will translate errno according to this table before returning from an ftt call, and place the) 54 540 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(result where ftt_get_error\050\051 can \336nd it.) 54 526 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Successful returns also eprintf\050\051 a message, usually \322Ok\323.) 54 506 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "4" 10
%%Page: "5" 11
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
396 36 486 54 R
7 X
0 0 0 1 0 0 0 K
V
0 10 Q
0 X
(January 5, 1996) 409.2 47.18 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(DRAFT) 315.78 47.3 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
72 63 540 63 2 L
1 H
2 Z
N
522 36 540 54 R
7 X
V
0 12 Q
0 X
(5) 534 45.82 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 10 Q
(FTT Design) 54 37.18 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 12 Q
(.) 54 108 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(T) 178.69 694 T
(ABLE  1.    Err) 185.81 694 T
(or numbers r) 263.93 694 T
(eturned in ftt_errno by ftt) 331.7 694 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(ftt_errno) 78 662 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Description) 217.7 662 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 11 Q
(FTT_SUCCESS) 78 644.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(no error has occurred) 217.7 644.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(FTT_EPERM) 78 627.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(you do not have permission to perform the speci\336ed operation on the) 217.7 627.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(device.) 217.7 614.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(FTT_ENOT) 78 597.67 T
(APE) 131.5 597.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(there is no tape in the drive) 217.7 597.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(FTT_EF) 78 580.67 T
(AUL) 115.08 580.67 T
(T) 136.67 580.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(you gave a buf) 217.7 580.67 T
(fer address range whose access yields a memory fault) 282.57 580.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(FTT_ENOSPC) 78 563.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(A write attempted to cross end of media) 217.7 563.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(FTT_ENOENT) 78 546.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(User attempted to set density to a nonexistent one) 217.7 546.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(FTT_EIO) 78 529.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Physical read or write error) 217.7 529.67 T
(.0) 337.45 529.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(FTT_EBLKSIZE) 78 512.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Attempt to write/read unsupported block size s) 217.7 512.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(FTT_ENOEXEC) 78 495.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Attempt to run setuid executable for security bypass failed -- not execut-) 217.7 495.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(able) 217.7 482.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(FTT_EBLANK) 78 465.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Encountered blank tape \050i.e. passed logical EOT\051) 217.7 465.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(FTT_EBUSY) 78 448.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Asynchronous I/Ois going on this device, or another process has it open) 217.7 448.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(FTT_ENODEV) 78 431.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(System does not have drive con\336gured) 217.7 431.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(FTT_EINV) 78 414.67 T
(AL) 127.91 414.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(invalid compression \337ag value, or bad statbuf pointer) 217.7 414.67 T
(, etc.) 451.9 414.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(FTT_ENXIO) 78 397.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Attempt to read blank tape) 217.7 397.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(FTT_ENFILE) 78 380.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(No system \336le descriptors available) 217.7 380.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(FTT_ENOTT) 78 363.67 T
(APE) 138.23 363.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(What we thought was a tape device was not.) 217.7 363.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(FTT_EROFS) 78 346.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(T) 217.7 346.67 T
(ape is write protected) 223.65 346.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(FTT_EWRONGVOL) 78 329.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(W) 217.7 329.67 T
(rong volume label on tape for veri\336cation) 227.65 329.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(FTT_EWRONGVOL) 78 312.67 T
(TYP) 172.92 312.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(W) 217.7 312.67 T
(rong type of label on tape for veri\336cation) 227.65 312.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(FTT_ELEADER) 78 295.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(hit tape leader while skipping backwards) 217.7 295.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(FTT_EFILEMARK) 78 278.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(hit \336le mark while skippin g records) 217.7 278.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(FTT_ER) 78 261.67 T
(WFS) 116.51 261.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(T) 217.7 261.67 T
(ape is not write protected \050and should be\051) 223.65 261.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(FTT_EPIPE) 78 244.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Setuid bypass died) 217.7 244.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(FTT_ENOMEM) 78 227.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Unable to allocate memory required to perform call) 217.7 227.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(FTT_ERANGE) 78 210.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Record too lar) 217.7 210.67 T
(ge for buf) 280.43 210.67 T
(fer) 323.61 210.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(FTT_ENOTSUPPOR) 78 193.67 T
(TED) 173.29 193.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Unsupported device) 217.7 193.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(FTT_ENOT) 78 176.67 T
(APE) 131.5 176.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(No tape in tapedrive) 217.7 176.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(FTT_EUNRECOVERED) 78 159.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(previous error was nrecoverable, tape can only be unloaded/rewound \050to) 217.7 159.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(protect data\051) 217.7 146.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(FTT_EP) 78 129.67 T
(AR) 114.88 129.67 T
(TIALST) 129.5 129.67 T
(A) 166.51 129.67 T
(T) 173.23 129.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(unable to obtain some or all of the information requested) 217.7 129.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
72 677.75 72 124.25 2 L
V
0.5 H
0 Z
N
211.7 678.25 211.7 123.75 2 L
V
N
553.7 677.75 553.7 124.25 2 L
V
N
71.75 678 553.95 678 2 L
V
N
71.75 656 553.95 656 2 L
V
N
71.75 639 553.95 639 2 L
V
N
71.75 609 553.95 609 2 L
V
N
71.75 592 553.95 592 2 L
V
N
71.75 575 553.95 575 2 L
V
N
71.75 558 553.95 558 2 L
V
N
71.75 541 553.95 541 2 L
V
N
71.75 524 553.95 524 2 L
V
N
71.75 507 553.95 507 2 L
V
N
71.75 477 553.95 477 2 L
V
N
71.75 460 553.95 460 2 L
V
N
71.75 443 553.95 443 2 L
V
N
71.75 426 553.95 426 2 L
V
N
71.75 409 553.95 409 2 L
V
N
71.75 392 553.95 392 2 L
V
N
71.75 375 553.95 375 2 L
V
N
71.75 358 553.95 358 2 L
V
N
71.75 341 553.95 341 2 L
V
N
71.75 324 553.95 324 2 L
V
N
71.75 307 553.95 307 2 L
V
N
71.75 290 553.95 290 2 L
V
N
71.75 273 553.95 273 2 L
V
N
71.75 256 553.95 256 2 L
V
N
71.75 239 553.95 239 2 L
V
N
71.75 222 553.95 222 2 L
V
N
71.75 205 553.95 205 2 L
V
N
71.75 188 553.95 188 2 L
V
N
71.75 171 553.95 171 2 L
V
N
71.75 141 553.95 141 2 L
V
N
71.75 124 553.95 124 2 L
V
N
576 445 578 456 R
V
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "5" 11
%%Page: "6" 12
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
126 36 216 54 R
7 X
0 0 0 1 0 0 0 K
V
0 10 Q
0 X
(January 5, 1996) 139.2 47.18 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(DRAFT) 261.78 47.3 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
540 63 72 63 2 L
1 H
2 Z
N
72 36 90 54 R
7 X
V
0 12 Q
0 X
(6) 84 45.82 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 10 Q
(FTT Design) 54 37.18 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 18 Q
(4) 54 708 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Low Level Entry Point Overview) 90 708 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 12 Q
-0.15 (The FTT product will need several entry points to provide the required services. This section of the docu-) 54 682 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.04 (ment describes the entry points and ar) 54 668 P
0.04 (guments. Many of the requested functions are provided as a \050short\051) 235.99 668 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(sequence of ftt calls, short wrappers functions can be provided if needed; for example:) 54 654 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
4 10 Q
(ftt_descriptor d;) 72 635.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(d = ftt_open\050\322/dev/rmt/tps0d3\323,0\051;) 72 623.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(ftt_rewind\050d\051;) 72 611.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(ftt_unload\050d\051) 72 599.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(ftt_close\050d\051;) 72 587.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 12 Q
(would rewind and unload a tape drive by basename.) 54 568 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(The preceding section speci\336es error returns.) 54 548 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2.7 (This section speci\336es internal routines in the library) 54 528 P
2.7 (, many of which are not called by users \050e.g.) 321.09 528 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(ftt_eprintf\051, whereas the next section speci\336es higher level routines) 54 514 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 16 Q
(4.1    Header \336le ftt.h) 54 481.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 12 Q
0.13 (The ftt.h header \336le will include de\336nitions of preprocessor symbols for all ftt_status \337ag bits, label type) 54 457 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.19 (numbers, error codes, and density de\336nitions. Internal data structures will not be visible in ftt.h, and will) 54 443 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(instead be hidden in private header \336les in the product sources.) 54 429 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 16 Q
(4.2) 54 396.33 T
0 F
(ftt_descriptor) 90 396.33 T
1 F
( ftt_open) 176.21 396.33 T
0 F
(\050char) 237.09 396.33 T
1 F
( *basename,int rdonly\051) 269.95 396.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 12 Q
0.06 (The) 54 372 P
1 F
0.06 (ftt_open) 75.72 372 P
0 F
0.06 ( entry takes a) 118.38 372 P
2 F
0.06 (basename) 185.28 372 P
0 F
0.06 ( for a device and returns a) 233.27 372 P
2 F
0.06 (descriptor) 361.33 372 P
0.06 (,) 409.33 372 P
0 F
0.06 (which can be used to perform) 415.39 372 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.02 (other operations on the device. The) 54 358 P
1 F
-0.02 (basename) 226.19 358 P
0 F
-0.02 (ar) 279.83 358 P
-0.02 (gument can also be a full device name for a tape device,) 288.94 358 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(and will internally be trimmed to a basename.) 54 344 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(The) 54 324 T
1 F
(rdonly) 75.66 324 T
0 F
(ar) 112.67 324 T
(gument indicates) 121.78 324 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3.4 (Note that FTT_RDONL) 54 218 P
3.4 (Y does not check that the device is physically write protected, nor does) 175.59 218 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 (FTT_RDWR check that is not physically write protected; a call to) 54 204 P
1 F
1 (ftt_status) 384.67 204 P
0 F
1 (is required to obtain that) 436.66 204 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(information.) 54 190 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(This routine performs no positioning of the device.) 54 170 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.28 (Note that ftt_open and ftt_close do not need to be called to switch between reading and writing, to cross) 54 150 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.3 (\336lemarks, etc. The ftt software will perform operating system opens and closes as needed to allow those) 54 136 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(transitions.) 54 122 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
-0.35 (ftt_open) 54 102 P
0 F
-0.35 ( does not perform any operations on the tape drive or tape devices, it simply does bookkeeping to) 96.66 102 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(prepare for such operations.) 54 88 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(T) 146.26 306 T
(ABLE  2.    rdonly \337ag values) 153.38 306 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(V) 78 274 T
(alue) 85.56 274 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Description) 222 274 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 11 Q
(FTT_RDONL) 78 256.67 T
(Y) 139.84 256.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Device will not be written on) 222 256.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(FTT_RDWR) 78 239.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Device is read and writable.) 222 239.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
72 289.75 72 234.25 2 L
V
0.5 H
0 Z
N
216 290.25 216 233.75 2 L
V
N
360 289.75 360 234.25 2 L
V
N
71.75 290 360.25 290 2 L
V
N
71.75 268 360.25 268 2 L
V
N
71.75 251 360.25 251 2 L
V
N
71.75 234 360.25 234 2 L
V
N
576 596 578 618 R
V
576 544 578 576 R
V
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "6" 12
%%Page: "7" 13
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
396 36 486 54 R
7 X
0 0 0 1 0 0 0 K
V
0 10 Q
0 X
(January 5, 1996) 409.2 47.18 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(DRAFT) 315.78 47.3 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
72 63 540 63 2 L
1 H
2 Z
N
522 36 540 54 R
7 X
V
0 12 Q
0 X
(7) 534 45.82 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 10 Q
(FTT Design) 54 37.18 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 16 Q
(4.3) 54 709.33 T
0 F
(ftt_descriptor) 90 709.33 T
1 F
(ftt_open_logical\050) 180.21 709.33 T
0 F
(char *) 298.86 709.33 T
1 F
(basename,) 338.4 709.33 T
0 F
(char *) 413.95 709.33 T
1 F
(os,) 453.49 709.33 T
0 F
(char) 475.71 709.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(*) 54 690.33 T
1 F
(driveid,) 62 690.33 T
0 F
(int) 118.9 690.33 T
1 F
(rdonly\051) 139.79 690.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 12 Q
-0.31 (Create a \050possibly mythical\051 ftt_descriptor for a device of type) 54 666 P
1 F
-0.31 (driveid) 353.52 666 P
0 F
-0.31 ( on operating system) 390.19 666 P
1 F
-0.31 (os) 491.62 666 P
0 F
-0.31 (, using base) 502.29 666 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.65 (device name) 54 652 P
1 F
0.65 (basename) 118.61 652 P
0 F
0.65 (, with) 169.28 652 P
1 F
0.65 (rdonly) 200.91 652 P
0 F
0.65 ( as in) 234.92 652 P
1 F
0.65 (ftt_open) 265.2 652 P
0 F
0.65 (. This call will be used internally to construct a de-) 307.86 652 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.14 (scriptor) 54 638 P
0.14 (, but can also be used in combination with other ftt calls to see what the name of the high density) 90.18 638 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.4 (EXB-8500 tape device would be on IRIX from an IBM system. Performing any actual tape-io from this) 54 624 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(descriptor will probably fail unless the) 54 610 T
1 F
(os) 241.98 610 T
0 F
( and) 252.65 610 T
1 F
(driveid) 275.98 610 T
0 F
( and) 312.65 610 T
1 F
(basename) 335.98 610 T
0 F
( are valid for the current system.) 386.64 610 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 16 Q
(4.4) 54 577.33 T
0 F
(int) 90 577.33 T
1 F
( ftt_open_dev\050) 106.9 577.33 T
0 F
(ftt_descriptor) 205.1 577.33 T
1 F
( d\051) 291.31 577.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 12 Q
-0.4 (Explicitly perform a UNIX open of the device  for the currently selected density) 54 553 P
-0.4 (, etc. Routines which need) 432.95 553 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(the device open to work will call) 54 539 T
1 F
(ftt_open_dev) 214.31 539 T
0 F
( if they need to.) 280.97 539 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.59 (If the density and mode have not been set by) 54 519 P
1 F
-0.59 (ftt_set_mode\050\051, ftt_set_mode_dev\050\051,) 265.38 519 P
0 F
-0.59 (etc., the default density) 448.13 519 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(and compression mode of the highest density the device supports and no compression will be used.) 54 505 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.37 (The routine may sets appropriate modes and/or \337ags on the underlying device to allow other ftt operations) 54 485 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(to proceed properly) 54 471 T
(.) 147.19 471 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
0.25 (ftt_open_dev) 54 451 P
0 F
0.25 ( performs antecessor operations to set the device density) 120.66 451 P
0.25 (, etc. and actually performs an op-) 392.52 451 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(erating system open on the device . No tape motion is performed.) 54 437 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 16 Q
(4.5) 54 404.33 T
0 F
(int) 90 404.33 T
1 F
( ftt_close\050) 106.9 404.33 T
0 F
(ftt_descriptor) 173.09 404.33 T
1 F
( d\051) 259.3 404.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 12 Q
0.57 (The) 54 380 P
1 F
0.57 (ftt_close) 76.23 380 P
0 F
0.57 (entry releases a descriptor) 122.45 380 P
0.57 (, indicating that no further operations will be performed on that) 248.65 380 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(descriptor) 54 366 T
(. If a device has been opened not closed, an) 101.33 366 T
1 F
(ftt_close_dev) 312.6 366 T
0 F
(will be performed.) 382.25 366 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(ftt_close) 54 346 T
0 F
( will invoke) 96.65 346 T
1 F
(ftt_close_dev) 156.98 346 T
0 F
( if needed, but performs no other tape or device operations.) 223.63 346 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 16 Q
(4.6) 54 313.33 T
0 F
(int) 90 313.33 T
1 F
( ftt_close_dev\050) 106.9 313.33 T
0 F
(ftt_descriptor) 205.09 313.33 T
1 F
( d\051) 291.3 313.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 12 Q
0.37 (This call closes the system device which was opened by) 54 289 P
1 F
0.37 (ftt_open_dev) 329.64 289 P
0 F
0.37 (, after ensuring proper double \336le) 395.52 289 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.11 (mark termination of written data. T) 54 275 P
-0.11 (o ensure this, if writes have been successfully performed since the last) 221.93 275 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.09 (rewind or other tape motion, it writes two \336lemarks and backspaces over them before closing the device.) 54 261 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.14 (Note that this means that if you are writing, perform an) 54 247 P
1 F
0.14 (ftt_close_dev) 323.47 247 P
0 F
0.14 ( followed by an) 390.12 247 P
1 F
0.14 (ftt_open_dev) 468.65 247 P
0 F
0.14 (, and) 534.53 247 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(continue writing, you will overwrite the \336lemarks that) 54 233 T
1 F
(ftt_close_dev) 316.98 233 T
0 F
( wrote.) 383.63 233 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Note that) 54 213 T
1 F
(ftt_close_dev) 101.33 213 T
0 F
( can fail, due to insuf) 167.98 213 T
(\336cient room to write tape \336lemarks, etc.) 269.08 213 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
-0.14 (ftt_close_dev) 54 193 P
0 F
-0.14 ( performs a close on the operating system device . It will only perform tape motion \050writing) 120.65 193 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.23 (\336lemarks and backspacing\051 if the preceding operation was a write or write \336lemark. No other operations) 54 179 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(or tape motions are performed.) 54 165 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 16 Q
(4.7) 54 132.33 T
0 F
(int) 90 132.33 T
1 F
(ftt_r) 110.9 132.33 T
(ead\050) 141.7 132.33 T
0 F
(ftt_descriptor) 171.02 132.33 T
1 F
( d, char *buf, int length\051) 257.23 132.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 12 Q
0.47 (If called with the tape positioned before a data block, the) 54 108 P
1 F
0.47 (ftt_r) 335.14 108 P
0.47 (ead) 358.24 108 P
0 F
0.47 ( entry reads a block of length at most) 376.24 108 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
-0.22 (length) 54 94 P
0 F
-0.22 (from the tape into buf) 88.79 94 P
-0.22 (fer) 192.35 94 P
1 F
-0.22 ( buf) 205.67 94 P
0 F
-0.22 (, and returns the length of the block actually read. If the next block on) 225.79 94 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(the tape will not \336t into the buf) 54 80 T
(fer) 202.79 80 T
(, or if any other error occurs, -1 will be returned) 215.63 80 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
576 501 578 527 R
V
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "7" 13
%%Page: "8" 14
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
126 36 216 54 R
7 X
0 0 0 1 0 0 0 K
V
0 10 Q
0 X
(January 5, 1996) 139.2 47.18 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(DRAFT) 261.78 47.3 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
540 63 72 63 2 L
1 H
2 Z
N
72 36 90 54 R
7 X
V
0 12 Q
0 X
(8) 84 45.82 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 10 Q
(FTT Design) 54 37.18 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 12 Q
0.52 (If called with the tape positioned before an end-of-\336le mark, 0 is returned, and the position is moved to) 54 712 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(just after the end-of-\336le mark.) 54 698 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
-0.31 (ftt_r) 54 678 P
-0.31 (ead) 77.1 678 P
0 F
-0.31 ( will call) 95.1 678 P
1 F
-0.31 (ftt_open_dev) 139.15 678 P
0 F
-0.31 ( \050which sets modes and does a device open\051 if needed; also it performs the) 205.82 678 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(obvious tape motion.) 54 664 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 16 Q
(4.8) 54 631.33 T
0 F
(int) 90 631.33 T
1 F
( ftt_write\050) 106.9 631.33 T
0 F
(ftt_descriptor) 175.74 631.33 T
1 F
( d,char *buf,int length\051) 261.95 631.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 12 Q
-0.63 (The ftt_write entry transfers as much as possible of the block in buf) 54 607 P
-0.63 (fer) 370.78 607 P
1 F
-0.63 (buf) 386.46 607 P
0 F
-0.63 ( of length to the tape, and returns) 403.8 607 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.56 (the length written, unless an error occurs, in which case -1 is returned. The tape is positioned after the writ-) 54 593 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(ten block.) 54 579 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
0.55 (ftt_write) 54 559 P
0 F
0.55 ( will call) 98.64 559 P
1 F
0.55 (ftt_open_dev) 145.29 559 P
0 F
0.55 ( \050which sets modes and does a device open\051 if needed; also it performs) 211.95 559 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(the obvious tape motion.) 54 545 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.23 (In the case of an unrecoverable error) 54 525 P
-0.23 (, an error number of FTT_UNRECOVERED will be returned for this) 228.04 525 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1.35 (call, and all subsequent calls made until one of) 54 511 P
1 F
1.35 (ftt_r) 293.48 511 P
1.35 (ewind, ftt_unload,) 316.58 511 P
1.35 (ftt_close_dev) 415.3 511 P
1.35 (,) 481.29 511 P
0 F
1.35 (or) 488.64 511 P
1 F
1.35 (ftt_close) 502.99 511 P
0 F
1.35 ( is) 545.64 511 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(called.) 54 497 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 16 Q
(4.9) 54 464.33 T
0 F
(int) 90 464.33 T
1 F
( ftt_writefm\050) 106.9 464.33 T
0 F
(ftt_descriptor) 194.4 464.33 T
1 F
( d\051) 280.61 464.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 12 Q
1 (The ftt_writefm entry writes a \336lemark to the tape. After the call, the tape position is after the written) 54 440 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(\336lemark.) 54 426 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Appropriate system dependent kludges for \336le of) 54 406 T
(fsets are performed.) 289.08 406 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(The indicated tape motion is performed, and) 54 386 T
1 F
(ftt_open_dev) 269.96 386 T
0 F
( will be called if needed.) 336.62 386 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 16 Q
(4.10) 54 353.33 T
0 F
(int) 98 353.33 T
1 F
(ftt_status\050) 118.9 353.33 T
0 F
(ftt_descriptor) 188.21 353.33 T
1 F
( d,) 274.42 353.33 T
0 F
(int) 295.31 353.33 T
1 F
(time-out\051) 316.21 353.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 12 Q
(The ftt_status entry returns a \337ags word with the following bits set:) 54 329 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.17 (indicating the current tape position. This routine shall block up to) 54 138 P
1 F
-0.17 (timeout) 369.42 138 P
0 F
-0.17 (seconds if there is a tape in the) 411.57 138 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.05 (drive, waiting for the tape to come online, or to become not busy) 54 124 P
0.05 (. If we cannot determine the presence of) 365.07 124 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(a tape, we will simply block until the time-out expires..) 54 110 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(T) 235.94 311 T
(ABLE  3.    ftt_status \337ag bits) 243.05 311 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Bit setting) 78 279 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Description) 222 279 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 11 Q
(FTT_ABOT) 78 261.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(At beginning of tape) 222 261.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(FTT_AFM) 78 244.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Just After a FileMark) 222 244.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(FTT_AEOT) 78 227.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(At Physical end of tape) 222 227.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(FTT_AEW) 78 210.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(At Early W) 222 210.67 T
(arning mark near EOT) 271.83 210.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(FTT_PROT) 78 193.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(W) 222 193.67 T
(rite Protected tape) 231.94 193.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(FTT_ONLINE) 78 176.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(A tape is loaded and online) 222 176.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(FTT_BUSY) 78 159.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(The tape is rewinding, unloading, etc. and not responding.) 222 159.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
72 294.75 72 154.25 2 L
V
0.5 H
0 Z
N
216 295.25 216 153.75 2 L
V
N
540 294.75 540 154.25 2 L
V
N
71.75 295 540.25 295 2 L
V
N
71.75 273 540.25 273 2 L
V
N
71.75 256 540.25 256 2 L
V
N
71.75 239 540.25 239 2 L
V
N
71.75 222 540.25 222 2 L
V
N
71.75 205 540.25 205 2 L
V
N
71.75 188 540.25 188 2 L
V
N
71.75 171 540.25 171 2 L
V
N
71.75 154 540.25 154 2 L
V
N
576 106 578 146 R
V
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "8" 14
%%Page: "9" 15
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
396 36 486 54 R
7 X
0 0 0 1 0 0 0 K
V
0 10 Q
0 X
(January 5, 1996) 409.2 47.18 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(DRAFT) 315.78 47.3 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
72 63 540 63 2 L
1 H
2 Z
N
522 36 540 54 R
7 X
V
0 12 Q
0 X
(9) 534 45.82 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 10 Q
(FTT Design) 54 37.18 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 12 Q
-0.16 (An external setuid executable will be run to obtain this data if necessary \050e.g. AIX\051, which means that \336le) 54 712 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.65 (marks will be written if the last operation was a) 54 698 P
1 F
-0.65 (ftt_write) 278.75 698 P
0 F
-0.65 ( or) 323.39 698 P
1 F
-0.65 (ftt_writefm,) 338.07 698 P
0 F
-0.65 ( \050see) 399.7 698 P
1 F
-0.65 (ftt_close_dev) 423.71 698 P
0 F
-0.65 (\050\051\051. Therefore,) 490.36 698 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(calling) 54 684 T
1 F
(ftt_status) 89.66 684 T
0 F
( after every write is to be avoided.) 137.65 684 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 16 Q
(4.1) 54 651.33 T
(1) 73.12 651.33 T
0 F
(int) 97.12 651.33 T
1 F
(ftt_guess_label\050) 118.02 651.33 T
0 F
(char *) 224.67 651.33 T
1 F
(buf,) 264.21 651.33 T
0 F
(int) 295.33 651.33 T
1 F
(length,) 316.22 651.33 T
0 F
(char **) 366.9 651.33 T
1 F
(vol,) 414.43 651.33 T
0 F
( int **) 438.88 651.33 T
1 F
(vlen\051) 479.78 651.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 12 Q
-0.42 (The ftt_guess_label examines a buf) 54 627 P
-0.42 (fer \050ostensibly returned by ftt_read\051, and attempts to guess what sort of) 222.06 627 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(tape format this is, assuming this is the \336rst block of the tape. It returns a value of the following type:) 54 613 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.32 (The vol and vlen ar) 54 389 P
0.32 (guments are taken to be the address of a character pointer and of an integer) 148.39 389 P
0.32 (, and will) 512.35 389 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(be \336lled in with the address and length of the volume name in the tape header) 54 375 T
(, if any) 425.8 375 T
(.) 458.68 375 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(ftt_guess_label) 54 355 T
0 F
( performs no tape operations.) 130 355 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 16 Q
-0.35 (4.12) 54 322.33 P
0 F
-0.35 (int) 96.59 322.33 P
1 F
-0.35 (ftt_format_label\050) 117.13 322.33 P
0 F
-0.35 (char *) 238.07 322.33 P
1 F
-0.35 (buf,) 277.26 322.33 P
0 F
-0.35 (int) 308.02 322.33 P
1 F
-0.35 (length,) 328.57 322.33 P
0 F
-0.35 (char *) 378.89 322.33 P
1 F
-0.35 (vol,) 418.07 322.33 P
0 F
-0.35 (int) 446.16 322.33 P
1 F
-0.35 (vlen,) 466.71 322.33 P
0 F
-0.35 (int) 502.8 322.33 P
1 F
-0.35 (type\051) 523.34 322.33 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 12 Q
0.36 (This function will format a label into a buf) 54 298 P
0.36 (fer) 261.28 298 P
0.36 (, which will return the same volume label and type in later) 274.12 298 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(calls to) 54 284 T
1 F
(ftt_guess_label) 91.33 284 T
0 F
(. Users can then write this label at the beginning of tape with) 167.33 284 T
1 F
(ftt_write) 461.95 284 T
0 F
(.) 506.59 284 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(type) 54 264 T
0 F
( can be any of the types speci\336ed in) 76 264 T
1 F
(ftt_guess_label) 250.3 264 T
0 F
(\050except FTT_DONTCHECK_HEADER\051) 329.29 264 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(It returns the length of the \336lled in volume header block.) 54 244 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(ftt_format_label) 54 224 T
0 F
( performs no tape operations.) 137.98 224 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 16 Q
(4.13) 54 191.33 T
0 F
(int) 98 191.33 T
1 F
(ftt_skip_to_double_fm\050) 118.9 191.33 T
0 F
(ftt_descriptor) 278.9 191.33 T
1 F
( d\051) 365.1 191.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 12 Q
0.04 (The tape is skipped forward to the next double \336lemark. At return from the call the tape is positioned be-) 54 167 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(tween the two \336lemarks.) 54 153 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(This is intended to be used for appending a new \336le to a tape using double-\336le-mark termination.) 54 133 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2.01 (In the case of an error \050i.e. there are not two \336lemarks at the end of the tape\051, an error number of) 54 113 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.64 (FTT_UNRECOVERED will be returned for this call, and all subsequent calls until one of) 54 99 P
1 F
0.64 (ftt_r) 497.23 99 P
0.64 (ewind,f) 520.33 99 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(ftt_unload,) 54 85 T
(ftt_close_dev) 113.34 85 T
(,) 179.33 85 T
0 F
(or) 185.33 85 T
1 F
(ftt_close) 198.32 85 T
0 F
( is called.) 240.97 85 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(T) 168.14 595 T
(ABLE  4.    ftt_guess_label label types) 175.25 595 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(V) 78 563 T
(alue) 85.56 563 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Description) 236.4 563 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 11 Q
(FTT_ANSI_HEADER) 78 545.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(An ANSI X3.27 standard tape) 236.4 545.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(FTT_FMB_HEADER) 78 528.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(An FMB tape) 236.4 528.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(FTT_T) 78 511.67 T
(AR_HEADER) 108.9 511.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(A tar tape \050POSIX nnn\051) 236.4 511.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(FTT_CPIO_HEADER) 78 494.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(A Cpio -c format tape) 236.4 494.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(FTT_UNKNOWN_HEADER) 78 477.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(No known label type) 236.4 477.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(FTT_BLANK_HEADER) 78 460.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(V) 236.4 460.67 T
(eri\336es length is -1 and last error was) 243.12 460.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(FTT_BLANK) 236.4 447.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(FTT_DONTCHECK_HEADER) 78 430.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Only used by ftt_verify_vol_label\050\051) 236.4 430.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
72 578.75 72 425.25 2 L
V
0.5 H
0 Z
N
230.4 579.25 230.4 424.75 2 L
V
N
446.4 578.75 446.4 425.25 2 L
V
N
71.75 579 446.65 579 2 L
V
N
71.75 557 446.65 557 2 L
V
N
71.75 540 446.65 540 2 L
V
N
71.75 523 446.65 523 2 L
V
N
71.75 506 446.65 506 2 L
V
N
71.75 489 446.65 489 2 L
V
N
71.75 472 446.65 472 2 L
V
N
71.75 442 446.65 442 2 L
V
N
71.75 425 446.65 425 2 L
V
N
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "9" 15
%%Page: "10" 16
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
126 36 216 54 R
7 X
0 0 0 1 0 0 0 K
V
0 10 Q
0 X
(January 5, 1996) 139.2 47.18 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(DRAFT) 261.78 47.3 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
540 63 72 63 2 L
1 H
2 Z
N
72 36 90 54 R
7 X
V
0 12 Q
0 X
(10) 78 45.82 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 10 Q
(FTT Design) 54 37.18 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 16 Q
(4.14) 54 709.33 T
0 F
(int) 98 709.33 T
1 F
(ftt_skip_fm\050) 118.9 709.33 T
0 F
(ftt_descriptor) 203.33 709.33 T
1 F
( d,) 289.54 709.33 T
0 F
( int) 306.43 709.33 T
1 F
(n \051) 331.33 709.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 12 Q
(If) 54 685 T
1 F
(n) 64.99 685 T
0 F
( is positive, the tape is moved forward to just after the nth next \336lemark.) 71.66 685 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(If) 54 665 T
1 F
(n) 64.99 665 T
0 F
(is negative, the tape is moved backward to just before the nth previous \336lemark.) 74.66 665 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(If) 54 645 T
1 F
(n) 64.99 645 T
0 F
(is zero, nothing is done.) 74.66 645 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(If the requested operation would involve going past BOT or EOT) 54 625 T
(, we return FTT_ENXIO.) 367.07 625 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.09 (When skipping backwards, this routine performs the necessary operations to ensure that the tape has two) 54 605 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(end-of-\336le marks at the end of recorded data, \050see the discussion in) 54 591 T
1 F
( ftt_close) 375.92 591 T
0 F
(\051.) 421.57 591 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.48 (In the case of an error) 54 571 P
0.48 (, an error number of FTT_UNRECOVERED will be returned for this call, and all) 160.86 571 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(subsequent calls made until one of) 54 557 T
1 F
(ftt_r) 222.65 557 T
(ewind, ftt_unload,) 245.75 557 T
(ftt_close_dev) 341.76 557 T
(,) 407.75 557 T
0 F
(or) 413.75 557 T
1 F
(ftt_close) 426.74 557 T
0 F
( is called.) 469.39 557 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 16 Q
(4.15) 54 524.33 T
0 F
(int) 98 524.33 T
1 F
(ftt_skip_r) 118.9 524.33 T
(ec\050) 186.16 524.33 T
0 F
(ftt_descriptor) 205.7 524.33 T
1 F
( d,) 291.9 524.33 T
0 F
( int) 308.8 524.33 T
1 F
(n\051) 333.7 524.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 12 Q
(If) 54 500 T
1 F
(n) 64.99 500 T
0 F
( is positive, the tape is moved forward to just after the nth next \336lemark) 71.66 500 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(If) 54 480 T
1 F
(n) 64.99 480 T
0 F
( is negative, the tape is moved backward to just before the nth previous \336lemark.) 71.66 480 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(If) 54 460 T
1 F
(n) 64.99 460 T
0 F
(is zero, nothing is done.) 74.66 460 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(If the request would involve going past a \336lemark , BOT) 54 440 T
(, or EOT) 325.42 440 T
(, we return FTT_ENXIO.) 366.85 440 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.09 (When skipping backwards, this routine performs the necessary operations to ensure that the tape has two) 54 420 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.24 (end-of-\336le marks at the end of recorded data, assuming this condition held when ftt_open was called. \050see) 54 406 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(the discussion in) 54 392 T
1 F
(ftt_close.\051) 137 392 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 F
0.48 (In the case of an error) 54 372 P
0.48 (, an error number of FTT_UNRECOVERED will be returned for this call, and all) 160.86 372 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(subsequent calls made until one of) 54 358 T
1 F
(ftt_r) 222.65 358 T
(ewind, ftt_unload,) 245.75 358 T
(ftt_close_dev) 341.76 358 T
(,) 407.75 358 T
0 F
(or) 413.75 358 T
1 F
(ftt_close) 426.74 358 T
0 F
( is called) 469.39 358 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 16 Q
(4.16) 54 325.33 T
0 F
(int) 98 325.33 T
1 F
(ftt_r) 118.9 325.33 T
(ewind\050) 149.7 325.33 T
0 F
(ftt_descriptor) 195.92 325.33 T
1 F
( d\051) 282.13 325.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 12 Q
(The tape is rewound) 54 301 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.29 (This routine performs the necessary operations to ensure that the tape has two end-of-\336le marks at the end) 54 281 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.26 (of recorded data, assuming this condition held when ftt_open was called. \050see the discussion in) 54 267 P
1 F
-0.26 (ftt_close.\051) 508.36 267 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 16 Q
(4.17) 54 234.33 T
0 F
(int) 98 234.33 T
1 F
(ftt_erase\050 ftt_descriptor d\051) 118.9 234.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 12 Q
(The tape is erased and rewound) 54 210 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 16 Q
(4.18) 54 177.33 T
0 F
(int) 98 177.33 T
1 F
(ftt_unload\050) 118.9 177.33 T
0 F
(ftt_descriptor) 195.34 177.33 T
1 F
( d\051) 281.55 177.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 12 Q
(The tape is rewound and unloaded from the drive.) 54 153 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.29 (This routine performs the necessary operations to ensure that the tape has two end-of-\336le marks at the end) 54 133 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.26 (of recorded data, assuming this condition held when ftt_open was called. \050see the discussion in) 54 119 P
1 F
-0.26 ( ftt_close.) 505.62 119 P
0 F
-0.26 (\051) 554 119 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "10" 16
%%Page: "11" 17
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
396 36 486 54 R
7 X
0 0 0 1 0 0 0 K
V
0 10 Q
0 X
(January 5, 1996) 409.2 47.18 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(DRAFT) 315.78 47.3 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
72 63 540 63 2 L
1 H
2 Z
N
522 36 540 54 R
7 X
V
0 12 Q
0 X
(1) 528.44 45.82 T
(1) 534 45.82 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 10 Q
(FTT Design) 54 37.18 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 16 Q
(4.19) 54 709.33 T
0 F
(int) 98 709.33 T
1 F
(ftt_r) 118.9 709.33 T
(etension\050) 149.7 709.33 T
0 F
(ftt_descriptor) 211.02 709.33 T
1 F
( d\051) 297.23 709.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 12 Q
(The tape is retensioned and rewound.) 54 685 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.29 (This routine performs the necessary operations to ensure that the tape has two end-of-\336le marks at the end) 54 665 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.46 (of recorded data, assuming this condition held when ftt_open was called. \050see the discussion in) 54 651 P
1 F
-0.46 (ftt_close.\051) 505.36 651 P
0 F
-0.46 (.) 555 651 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 16 Q
(4.20) 54 618.33 T
0 F
(int) 98 618.33 T
1 F
(ftt_fork\050) 118.9 618.33 T
0 F
(ftt_descriptor) 177.54 618.33 T
1 F
(d\051) 267.74 618.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 12 Q
1.67 (Creates an asynchronous process for performing ftt calls, which should report status via) 54 594 P
1 F
1.67 (ftt_r) 499.58 594 P
1.67 (eport\050\051) 522.68 594 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 F
0.17 (which will in turn be collected via) 54 580 P
1 F
0.17 (ftt_wait\050\051) 222.18 580 P
0 F
0.17 (. Returns a process ID in the parent process, a 0 in the child) 270.16 580 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(process, and -1 in the case of failure. The call is generally used as follows:) 54 566 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
4 10 Q
(switch\050ftt_fork\050d\051\051{) 72 547.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(case 0: /* child */) 72 535.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(ftt_skip_fm\050d,2\051;) 96 523.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(ftt_rewind\050d\051;) 96 511.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(ftt_report\050d\051;) 96 499.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(default: /* parent */) 72 487.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(do_stuff_during_rewind\050\051;) 96 475.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(ftt_wait\050d\051;) 96 463.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(break) 96 451.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(case -1: /* error */) 72 439.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(pc = ftt_get_error\050&err\051;) 96 427.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(fprintf\050stderr,pc\051;) 96 415.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(exit\0500\051;) 96 403.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(}) 72 391.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 16 Q
(4.21) 54 359.33 T
0 F
(void) 98 359.33 T
1 F
( ftt_r) 126.45 359.33 T
(eport\050) 161.25 359.33 T
0 F
(ftt_descriptor) 203.01 359.33 T
1 F
(d\051) 293.22 359.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 12 Q
0.34 (Collects up the status from the last) 54 335 P
1 F
0.34 (ftt) 225.35 335 P
0 F
0.34 ( call, reports it to the parent process, so that it will be collected by) 237.34 335 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(ftt_wait\050\051) 54 321 T
0 F
(, and exits.) 101.98 321 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 16 Q
(4.22) 54 288.33 T
0 F
(int) 98 288.33 T
1 F
(ftt_wait\050) 118.9 288.33 T
0 F
(ftt_descriptor) 177.54 288.33 T
1 F
( d\051) 263.74 288.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 12 Q
-0.03 (W) 54 264 P
-0.03 (aits for a pending asynchronous operation to report its status with) 64.37 264 P
1 F
-0.03 (ftt_r) 381.06 264 P
-0.03 (eport\050\051) 404.16 264 P
0 F
-0.03 (, and sets the error string) 439.48 264 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(and error code for ftt_get_error to the result of the completed operation.) 54 250 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(ftt_wait) 54 230 T
0 F
( performs no tape operations of its own.) 93.98 230 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 16 Q
(4.23) 54 197.33 T
0 F
(int) 98 197.33 T
1 F
(ftt_check\050) 118.9 197.33 T
0 F
(ftt_descriptor) 187.31 197.33 T
1 F
( d\051) 273.52 197.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 12 Q
-0.25 (The ftt_check routine succeeds if the asynchronous operation occurring on the device has completed, oth-) 54 173 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(erwise it returns a busy device error) 54 159 T
(.) 225.29 159 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(ftt_check) 54 139 T
0 F
( performs no tape operations.) 101.32 139 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
576 576 578 602 R
V
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "11" 17
%%Page: "12" 18
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
126 36 216 54 R
7 X
0 0 0 1 0 0 0 K
V
0 10 Q
0 X
(January 5, 1996) 139.2 47.18 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(DRAFT) 261.78 47.3 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
540 63 72 63 2 L
1 H
2 Z
N
72 36 90 54 R
7 X
V
0 12 Q
0 X
(12) 78 45.82 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 10 Q
(FTT Design) 54 37.18 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 16 Q
(4.24) 54 709.33 T
0 F
(ftt_stat_buf) 98 709.33 T
1 F
( ftt_alloc_stat\050\051;) 171.78 709.33 T
0 F
(int) 284.62 709.33 T
1 F
( ftt_fr) 301.52 709.33 T
(ee_stat\050) 341.65 709.33 T
0 F
(ftt_stat_buf) 394.06 709.33 T
1 F
( b\051) 467.84 709.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 12 Q
-0.34 (These routines allocate and free statistics buf) 54 685 P
-0.34 (fers for use with the following statistics calls, so that the type) 267.72 685 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(and size of a statistics buf) 54 671 T
(fer is opaque to the user) 177.43 671 T
(.) 291.74 671 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(ftt_alloc_stat) 54 651 T
0 F
(, and) 120.65 651 T
1 F
(ftt_fr) 146.98 651 T
(ee_stat) 174.07 651 T
0 F
( perform no tape operations.) 209.39 651 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 16 Q
(4.25) 54 618.33 T
0 F
(int) 98 618.33 T
1 F
(ftt_get_stats\050ftt_descriptor d,ftt_stat_buf\051) 118.9 618.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 12 Q
0.3 (This routine extracts current statistics for tape usage, including data written, data read, write errors, read) 54 594 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.06 (errors, etc. and packs it into an ftt_stat_buf structure. If necessary) 54 580 P
-0.06 (, an external, setuid program will be ex-) 366.83 580 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(ecuted in a subshell to obtain the statistics for the drive.) 54 566 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.73 (Note that because on some platforms we must close and reopen devices to implement this call, ftt_get_stats) 54 546 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(will always put \336lemarks on your tape if you have been writing \050see) 54 532 T
1 F
(ftt_close_dev) 383.62 532 T
0 F
(\051 .) 450.26 532 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 16 Q
(4.26) 54 499.33 T
0 F
(char *) 98 499.33 T
1 F
(ftt_extract_stats\050) 137.54 499.33 T
0 F
(ftt_stat_buf) 253.92 499.33 T
1 F
(b,) 331.7 499.33 T
0 F
(int) 348.59 499.33 T
1 F
( stat\051) 365.49 499.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 12 Q
(This routine extracts a string describing a named piece of tape data, including:) 54 475 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(T) 287.6 457 T
(ABLE  5.) 294.72 457 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(stat) 78 425 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Description) 222 425 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Notes) 438 425 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 11 Q
(FTT_VENDOR_ID) 78 407.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(SCSI Inquiry vendor id data) 222 407.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(string) 438 407.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(FTT_PRODUCT_ID) 78 390.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(SCSI Inquiry product id) 222 390.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(string) 438 390.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(FTT_FIRMW) 78 373.67 T
(ARE) 139.12 373.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(SCSI Inquiry \336rmware rev level) 222 373.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(string) 438 373.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(FTT_SERIAL_NUM) 78 356.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Device serial number) 222 356.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(string) 438 356.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(FTT_HOURS_ON) 78 339.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Number of hours device has been on) 222 339.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(counter) 438 339.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(FTT_CLEANING_BIT) 78 322.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Device thinks it needs cleaning) 222 322.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(\337ag) 438 322.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(FTT_READ_COUNT) 78 305.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Decimal number of blocks read since rewind/) 222 305.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(reset) 222 292.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(counter) 438 305.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(FTT_WRITE_COUNT) 78 275.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Decimal number of blocks written since) 222 275.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(rewind/reset) 222 262.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(counter) 438 275.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(FTT_READ_ERRORS) 78 245.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Read errors) 222 245.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(counter) 438 245.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(FTT_WRITE_ERRORS) 78 228.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(W) 222 228.67 T
(rite errors) 231.94 228.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(counter) 438 228.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(FTT_DENSITY) 78 211.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Mode Sense T) 222 211.67 T
(ape density) 284.78 211.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(numeric) 438 211.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(FTT_READ_COMP) 78 194.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Compression factor for reads) 222 194.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(numeric) 438 194.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(FTT_WRITE_COMP) 78 177.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Compression factor for writes) 222 177.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(numeric) 438 177.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(FTT_FILE_NUMBER) 78 160.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(File number from BOT) 222 160.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(numeric) 438 160.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(FTT_BLOCK_NUMBER) 78 143.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Block number in current \336le) 222 143.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(numeric) 438 143.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(FTT_BOT) 78 126.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(at beginning of tape) 222 126.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(\337ag) 438 126.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(FTT_READY) 78 109.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Device ready status) 222 109.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(\337ag) 438 109.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(FTT_WRITE_PROT) 78 92.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Device write protect status) 222 92.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(\337ag) 438 92.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
72 440.75 72 87.25 2 L
V
0.5 H
0 Z
N
216 441.25 216 86.75 2 L
V
N
432 441.25 432 86.75 2 L
V
N
540 440.75 540 87.25 2 L
V
N
71.75 441 540.25 441 2 L
V
N
71.75 419 540.25 419 2 L
V
N
71.75 402 540.25 402 2 L
V
N
71.75 385 540.25 385 2 L
V
N
71.75 368 540.25 368 2 L
V
N
71.75 351 540.25 351 2 L
V
N
71.75 334 540.25 334 2 L
V
N
71.75 317 540.25 317 2 L
V
N
71.75 287 540.25 287 2 L
V
N
71.75 257 540.25 257 2 L
V
N
71.75 240 540.25 240 2 L
V
N
71.75 223 540.25 223 2 L
V
N
71.75 206 540.25 206 2 L
V
N
71.75 189 540.25 189 2 L
V
N
71.75 172 540.25 172 2 L
V
N
71.75 155 540.25 155 2 L
V
N
71.75 138 540.25 138 2 L
V
N
71.75 121 540.25 121 2 L
V
N
71.75 104 540.25 104 2 L
V
N
71.75 87 540.25 87 2 L
V
N
576 471 578 483 R
V
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "12" 18
%%Page: "13" 19
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
396 36 486 54 R
7 X
0 0 0 1 0 0 0 K
V
0 10 Q
0 X
(January 5, 1996) 409.2 47.18 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(DRAFT) 315.78 47.3 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
72 63 540 63 2 L
1 H
2 Z
N
522 36 540 54 R
7 X
V
0 12 Q
0 X
(13) 528 45.82 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 10 Q
(FTT Design) 54 37.18 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 12 Q
(ftt_extract_stats) 54 201 T
0 F
( performs no tape operations.) 137.29 201 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(The routine will return a null pointer \0500\051 if a given statistic is not available in the status block.) 54 181 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 16 Q
(4.27) 54 148.33 T
0 F
(void) 98 148.33 T
1 F
(ftt_add_stats\050) 130.45 148.33 T
0 F
(ftt_stat_buf) 224.66 148.33 T
1 F
(b1) 302.43 148.33 T
0 F
(, ftt_stat_buf) 319.33 148.33 T
1 F
(b2) 405.1 148.33 T
0 F
(, ftt_stat_buf) 422 148.33 T
1 F
(r) 507.78 148.33 T
(es\051,) 514.59 148.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(ftt_sub_stats\050) 54 129.33 T
0 F
(ftt_stat_buf) 146.43 129.33 T
1 F
(b1) 224.21 129.33 T
0 F
(, ftt_stat_buf) 241.1 129.33 T
1 F
(b2) 326.88 129.33 T
0 F
(, ftt_stat_buf) 343.78 129.33 T
1 F
(r) 429.55 129.33 T
(es\051) 436.37 129.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 12 Q
0.08 (Numeric values in the stat buf) 54 105 P
0.08 (fer) 198.5 105 P
1 F
0.08 (b1) 214.9 105 P
0 F
0.08 (are added to/subtracted from the values in) 230.65 105 P
1 F
0.08 (b2) 435.51 105 P
0 F
0.08 (and the result is put in) 451.26 105 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(r) 54 91 T
(es) 59.11 91 T
0 F
(, to keep running totals, and/or compute deltas.) 69.11 91 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 11 Q
(FTT_FMK) 78 662.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(At \336lemark) 222 662.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(\337ag) 438 662.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(FTT_EOM) 78 645.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(At end of media \050early warning\051) 222 645.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(\337ag) 438 645.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(FTT_PEOT) 78 628.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(At physical end of tape \050really at end\051) 222 628.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(\337ag) 438 628.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(FTT_MEDIA_TYPE) 78 611.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(SCSI Media type) 222 611.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(numeric) 438 611.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(FTT_BLOCK_SIZE) 78 594.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(T) 222 594.67 T
(ape block size) 227.95 594.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(numeric) 438 594.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(FTT_BLOCK_T) 78 577.67 T
(OT) 152.36 577.67 T
(AL) 166.14 577.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Number of blocks on tape) 222 577.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(numeric) 438 577.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(FTT_TRANS_DENSITY) 78 560.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(T) 222 560.67 T
(ranslated density ala ftt_get_mode) 228.34 560.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(numeric) 438 560.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(FTT_TRANS_COMPRESS) 78 543.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(T) 222 543.67 T
(ranslated compression ala ftt_get_mode) 228.34 543.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(numeric) 438 543.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(FTT_REMAIN_T) 78 526.67 T
(APE) 157.78 526.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Remaining KB of tape) 222 526.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(counter) 438 526.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(FTT_USER_READ) 78 509.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(KB read since open/unload) 222 509.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(counter) 438 509.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(FTT_USER_WRITE) 78 492.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(KB written since open/unload) 222 492.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(counter) 438 492.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(FTT_CONTROLLER) 78 475.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Controller type) 222 475.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(string) 438 475.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(FTT_ILI) 78 458.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(SCSI ILI bit from Req Sense) 222 458.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(\337ag) 438 458.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(FTT_SCSI_ASC) 78 441.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(SCSI Additional Sense Code) 222 441.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(numeric) 438 441.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(FTT_SCSI_ASCQ) 78 424.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(SCSI Additional Sense Code Quali\336er) 222 424.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(numeric) 438 424.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(FTT_PF) 78 407.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(SCSI PF \337aog) 222 407.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(\337ag) 438 407.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(FTT_CLEANDED_BIT) 78 390.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(SCSI cleaned bit) 222 390.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(\337ag) 438 390.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(FTT_TRACK_RETR) 78 373.67 T
(Y) 173.35 373.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(T) 222 373.67 T
(rack retry errors) 228.34 373.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(numeric) 438 373.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(FTT_UNDERRUN) 78 356.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(stop/start counter from EXB 8505s) 222 356.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(numeric) 438 356.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(FTT_MOTION_HOURS) 78 339.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(hours tape drive is in motion) 222 339.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(counter) 438 339.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(FTT_TUR_ST) 78 322.67 T
(A) 142.51 322.67 T
(TUS) 149.24 322.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(SCSI T) 222 322.67 T
(est Unit Ready response) 253.93 322.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(numeric) 438 322.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(FTT_COUNT_ORIGIN) 78 305.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Origin of read/write kb counters) 222 305.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(string) 438 305.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(FTT_N_READS) 78 288.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Number of read calls) 222 288.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(counter) 438 288.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(FTT_N_WRITES) 78 271.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Number of write and writefm calls) 222 271.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(counter) 438 271.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(FTT_TNP) 78 254.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Exabyte T) 222 254.67 T
(ape Not Present bit) 266.75 254.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(\337ag) 438 254.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(FTT_SENSE_KEY) 78 237.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(SCSI Request Sense Sense Key) 222 237.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(numeric) 438 237.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(FTT_TRANS_SENSE_KEY) 78 220.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Above translated to strings) 222 220.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(string) 438 220.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 12 Q
(T) 287.6 712 T
(ABLE  5.) 294.72 712 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(stat) 78 680 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Description) 222 680 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Notes) 438 680 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
72 695.75 72 215.25 2 L
V
0.5 H
0 Z
N
216 696.25 216 214.75 2 L
V
N
432 696.25 432 214.75 2 L
V
N
540 695.75 540 215.25 2 L
V
N
71.75 696 540.25 696 2 L
V
N
71.75 674 540.25 674 2 L
V
N
71.75 657 540.25 657 2 L
V
N
71.75 640 540.25 640 2 L
V
N
71.75 623 540.25 623 2 L
V
N
71.75 606 540.25 606 2 L
V
N
71.75 589 540.25 589 2 L
V
N
71.75 572 540.25 572 2 L
V
N
71.75 555 540.25 555 2 L
V
N
71.75 538 540.25 538 2 L
V
N
71.75 521 540.25 521 2 L
V
N
71.75 504 540.25 504 2 L
V
N
71.75 487 540.25 487 2 L
V
N
71.75 470 540.25 470 2 L
V
N
71.75 453 540.25 453 2 L
V
N
71.75 436 540.25 436 2 L
V
N
71.75 419 540.25 419 2 L
V
N
71.75 402 540.25 402 2 L
V
N
71.75 385 540.25 385 2 L
V
N
71.75 368 540.25 368 2 L
V
N
71.75 351 540.25 351 2 L
V
N
71.75 334 540.25 334 2 L
V
N
71.75 317 540.25 317 2 L
V
N
71.75 300 540.25 300 2 L
V
N
71.75 283 540.25 283 2 L
V
N
71.75 266 540.25 266 2 L
V
N
71.75 249 540.25 249 2 L
V
N
71.75 232 540.25 232 2 L
V
N
71.75 215 540.25 215 2 L
V
N
576 268 578 279 R
V
576 268 578 279 R
V
576 268 578 279 R
V
576 251 578 262 R
V
576 251 578 262 R
V
576 251 578 262 R
V
576 234 578 245 R
V
576 234 578 245 R
V
576 234 578 245 R
V
576 217 578 228 R
V
576 217 578 228 R
V
576 217 578 228 R
V
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "13" 19
%%Page: "14" 20
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
126 36 216 54 R
7 X
0 0 0 1 0 0 0 K
V
0 10 Q
0 X
(January 5, 1996) 139.2 47.18 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(DRAFT) 261.78 47.3 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
540 63 72 63 2 L
1 H
2 Z
N
72 36 90 54 R
7 X
V
0 12 Q
0 X
(14) 78 45.82 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 10 Q
(FTT Design) 54 37.18 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 12 Q
(String values are taken from) 54 712 T
1 F
(b1) 192.97 712 T
0 F
(, unless the entry in) 205.64 712 T
1 F
(b1) 302.3 712 T
0 F
( is null and the one in) 314.98 712 T
1 F
(b2) 421.31 712 T
0 F
( is not.) 433.98 712 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Flag values are taken from) 54 692 T
1 F
(b1) 184.97 692 T
0 F
(.) 197.64 692 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.51 (Note that media type and compression rates, while technically numeric, are not treated as such by these) 54 672 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(routines, since adding them or subtracting them is meaningless.) 54 658 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(ftt_add_stats) 54 638 T
0 F
( and) 120.66 638 T
1 F
(ftt_sub_stats) 143.99 638 T
0 F
( perform no tape operations.) 209.32 638 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 16 Q
(4.28) 54 605.33 T
0 F
(int) 98 605.33 T
1 F
(ftt_get_position\050) 118.9 605.33 T
0 F
(ftt_descriptor) 230.88 605.33 T
1 F
(d,) 321.09 605.33 T
0 F
(int *) 337.98 605.33 T
1 F
(\336le,) 366.88 605.33 T
0 F
(int *) 395.33 605.33 T
1 F
(block\051) 424.22 605.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 12 Q
(Returns the current \336le and block position on the tape.) 54 581 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.6 (Fails if no tape is loaded, or the position is unknown \050i.e. the tape was just opened, has never been rewound) 54 561 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(and is not at BOT) 54 547 T
(.\051) 138.44 547 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0 (Note that both) 54 527 P
1 F
-0 (\336le) 125.66 527 P
0 F
-0 ( and) 140.99 527 P
1 F
-0 (block) 164.32 527 P
0 F
-0 ( are zero at BOT) 192.33 527 P
-0 (, the count is the number of \336le marks we are past BOT and) 271.4 527 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(the number of blocks past the last \336lemark, where BOT is treated as the 0-th \336lemark.) 54 513 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(ftt_get_position) 54 493 T
0 F
( performs no tape operations, it merely reports bookkeeping information.) 133.99 493 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 16 Q
(4.29) 54 460.33 T
0 F
(char *) 98 460.33 T
1 F
(ftt_get_err) 137.54 460.33 T
(or\050) 210.98 460.33 T
0 F
(int *) 231.41 460.33 T
1 F
(pn\051) 260.3 460.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 12 Q
-0.16 (Returns a pointer to a string describing the result of the last call. If pn is not null, it is treated as an integer) 54 436 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(pointer and the current error number is stored there.) 54 422 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
-0.2 (ftt_get_err) 54 402 P
-0.2 (or) 109.08 402 P
0 F
-0.2 ( performs no tape operations. Any mode sense data reported was obtained by the routine re-) 120.41 402 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(porting the error) 54 388 T
(.) 131.99 388 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 16 Q
(4.30) 54 355.33 T
0 F
(char *) 98 355.33 T
1 F
(ftt_get_basename\050) 137.54 355.33 T
0 F
(ftt_descriptor) 262.83 355.33 T
1 F
(d\051) 353.04 355.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 12 Q
-0.03 (This routine returns the basename for the device; thereby the basename for a tape device can be found by) 54 331 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(doing an) 54 317 T
1 F
(ftt_open) 98.66 317 T
0 F
( followed by an) 141.32 317 T
1 F
(ftt_get_basename.) 219.31 317 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(ftt_get_basename) 54 297 T
0 F
( performs no tape operations.) 143.98 297 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 16 Q
(4.31) 54 264.33 T
0 F
(char **) 98 264.33 T
1 F
(ftt_list_all\050) 145.54 264.33 T
0 F
(ftt_descriptor) 220.19 264.33 T
1 F
( d\051) 306.4 264.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 12 Q
(A pointer to a static list of device pathnames related to this drive is returned.) 54 240 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
-0.02 (ftt_list_all) 54 220 P
0 F
-0.02 ( performs no tape operations. It returns the list of devices we think should be present, which is) 106 220 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(determined when) 54 206 T
1 F
(ftt_open_logical) 139.98 206 T
0 F
( is called.) 221.98 206 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 16 Q
(4.32) 54 173.33 T
0 F
(int) 98 173.33 T
1 F
( ftt_chall\050) 114.9 173.33 T
0 F
(ftt_descriptor) 181.1 173.33 T
1 F
(d,) 271.31 173.33 T
0 F
(int) 288.21 173.33 T
1 F
(uid,) 309.1 173.33 T
0 F
(int) 339.34 173.33 T
1 F
( gid,) 356.24 173.33 T
0 F
(int) 389.58 173.33 T
1 F
( mode\051) 406.48 173.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 12 Q
0.05 (All character special devices relating to the \336le named by descriptor have their ownership changed to the) 54 149 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.35 (pass-ed in uid, gid. and are set to the given mode. This call will only succeed if called with the appropriate) 54 135 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(permissions, it will not be handled by a setuid executable.) 54 121 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(ftt_chall) 54 101 T
0 F
( performs no tape operations, it merely changes permissions on the devices in) 96.66 101 T
1 F
(/dev) 471.94 101 T
0 F
(.) 492.49 101 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
576 202 578 228 R
V
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "14" 20
%%Page: "15" 21
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
396 36 486 54 R
7 X
0 0 0 1 0 0 0 K
V
0 10 Q
0 X
(January 5, 1996) 409.2 47.18 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(DRAFT) 315.78 47.3 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
72 63 540 63 2 L
1 H
2 Z
N
522 36 540 54 R
7 X
V
0 12 Q
0 X
(15) 528 45.82 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 10 Q
(FTT Design) 54 37.18 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 16 Q
(4.33) 54 709.33 T
0 F
(char *) 98 709.33 T
1 F
(ftt_avail_mode\050) 137.54 709.33 T
0 F
(ftt_descriptor) 245.07 709.33 T
1 F
( d,) 331.28 709.33 T
0 F
(int) 352.18 709.33 T
1 F
(density) 373.07 709.33 T
(,) 421.09 709.33 T
0 F
(int) 429.09 709.33 T
1 F
( mode,) 445.98 709.33 T
0 F
(int) 495.31 709.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(blocksize\051) 54 690.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 12 Q
-0.07 (Returns a character pointer to a device name if the density) 54 666 P
-0.07 (, mode \050compression, etc.\051, and blocksize com-) 331.79 666 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.01 (bination requested is available on this tape drive, where density is an integer) 54 652 P
-0.01 (, 0 for lowest density for this) 419.71 652 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1.04 (media type, 1 for the next highest, etc. and compression is 0 or 1 for no compression or compression,) 54 638 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(respectively) 54 624 T
(.) 111.2 624 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Returns 0 if there is no device matching the request.) 54 604 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(The value FTT_MAX_DENSITY will give the highest density available on that drive.) 54 584 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.57 (#de\336ne values for EXB_2G, EXB_5G, DL) 54 564 P
-0.57 (T10G, etc. will be provided, to allow the user to request speci\336c) 256.34 564 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(tape densities.) 54 550 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(A blocksize of 0 indicates variable blocking.) 54 530 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(ftt_avail_mode) 54 510 T
0 F
( performs no tape operations.) 130.66 510 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 16 Q
(4.34) 54 477.33 T
0 F
(char *) 98 477.33 T
1 F
(ftt_set_mode\050) 137.54 477.33 T
0 F
(ftt_descriptor) 230.83 477.33 T
1 F
(d,) 321.04 477.33 T
0 F
( int) 333.94 477.33 T
1 F
(density) 358.83 477.33 T
(,) 406.85 477.33 T
0 F
(int) 414.85 477.33 T
1 F
(mode,) 435.74 477.33 T
0 F
( int) 477.07 477.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(blocksize\051) 54 458.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 12 Q
0.21 (Sets the default device for this tape to be the given density number) 54 434 P
0.21 (, sets modes\050compression, etc.\051. on or) 375.98 434 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.45 (of) 54 420 P
0.45 (f, \336xed block size \0500 for variable block\051, and rewind on close mode on or of) 63.78 420 P
0.45 (f, where mode, \336xed, and) 433.9 420 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(rewind \337ags are set to 1 to turn them on, and returns the name of the device.) 54 406 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Setting the density) 54 386 T
(, etc. can only be done reliably at BOT) 142.56 386 T
(.) 327.64 386 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(A blocksize of 0 indicates variable blocking) 54 366 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(ftt_set_mode) 54 346 T
0 F
( performs no tape operations, it merely sets \337ags, etc. for) 119.98 346 T
1 F
(ftt_open_dev) 395.93 346 T
(.) 461.93 346 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 16 Q
(4.35) 54 313.33 T
0 F
(char *) 98 313.33 T
1 F
(ftt_get_mode\050) 137.54 313.33 T
0 F
(ftt_descriptor) 232.61 313.33 T
1 F
( d,) 318.82 313.33 T
0 F
( int *) 335.71 313.33 T
1 F
(density) 368.61 313.33 T
(,) 416.62 313.33 T
0 F
(int *) 424.62 313.33 T
1 F
(mode,) 453.52 313.33 T
0 F
(int) 498.85 313.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(*) 54 294.33 T
1 F
(blocksize\051) 62 294.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 12 Q
-0.62 (Returns the name of the current default device for this tape drive, and puts the density) 54 270 P
-0.62 (, mode \050compression,) 455.91 270 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(etc.\051, etc. values for the device into the integers whose addresses are passed into the routine.) 54 256 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(A blocksize of 0 indicates variable blocking, a non-zero blocksize indicates the current \336xed block size.) 54 236 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(ftt_get_mode) 54 216 T
0 F
( performs no tape operations.) 121.31 216 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 16 Q
(4.36) 54 183.33 T
0 F
(int) 98 183.33 T
1 F
(ftt_get_mode_dev\050) 118.9 183.33 T
0 F
(ftt_descriptor) 245.97 183.33 T
1 F
(d,) 336.18 183.33 T
0 F
(char *) 353.07 183.33 T
1 F
(devname,) 392.61 183.33 T
0 F
(int *) 461.94 183.33 T
1 F
(density) 490.83 183.33 T
(,) 538.85 183.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 F
(int) 54 164.33 T
1 F
(*mode,) 74.9 164.33 T
0 F
(int *) 128.22 164.33 T
1 F
(blocksize,) 157.12 164.33 T
0 F
( int *) 223.34 164.33 T
1 F
(r) 256.24 164.33 T
(ewind\051) 263.06 164.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 12 Q
1.14 (Returns the density) 54 140 P
1.14 (, mode, , etc. values for the device) 148.16 140 P
1 F
1.14 (devname) 324.55 140 P
0 F
1.14 ( into the integers whose addresses are) 370.55 140 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(passed into the routine.) 54 126 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.14 (The) 54 106 P
1 F
0.14 (r) 75.8 106 P
0.14 (ewind) 80.91 106 P
0 F
0.14 ( value returned will have a value of) 111.58 106 P
1 F
0.14 (FTT_R) 285.34 106 P
0.14 (WOC, FTT_R) 322.92 106 P
0.14 (T) 396.65 106 P
0.14 (OO) 404.43 106 P
0 F
0.14 (, or bitwise combinations of) 423.11 106 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(these values, to indicate ReW) 54 92 T
(ind On Close and ReT) 195.83 92 T
(ension On Open, respectively) 302.32 92 T
(.) 443.51 92 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "15" 21
%%Page: "16" 22
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
126 36 216 54 R
7 X
0 0 0 1 0 0 0 K
V
0 10 Q
0 X
(January 5, 1996) 139.2 47.18 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(DRAFT) 261.78 47.3 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
540 63 72 63 2 L
1 H
2 Z
N
72 36 90 54 R
7 X
V
0 12 Q
0 X
(16) 78 45.82 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 10 Q
(FTT Design) 54 37.18 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 12 Q
-0.25 (A blocksize of 0 indicates variable blocking, a blocksize of 1 indicates \336xed block operation,) 54 712 P
2 F
-0.25 ( but does not) 497.08 712 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(pr) 54 698 T
(ovide the curr) 64.22 698 T
(ent blocksize.) 131.1 698 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(ftt_get_mode_dev) 54 678 T
0 F
( performs no tape operations.) 145.31 678 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 16 Q
(4.37) 54 645.33 T
0 F
(int) 98 645.33 T
1 F
(ftt_set_mode_dev\050) 118.9 645.33 T
0 F
(ftt_descriptor) 248.19 645.33 T
1 F
(d,) 338.4 645.33 T
0 F
(char *) 355.3 645.33 T
1 F
(devname,) 398.83 645.33 T
0 F
(int) 468.16 645.33 T
1 F
(for) 489.06 645.33 T
(ce\051) 509.2 645.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 12 Q
-0.05 (Sets the mode, density) 54 621 P
-0.05 (, etc. to match that of the device name passed in. The ar) 161.08 621 P
-0.05 (gument must be a name as-) 427.25 621 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(sociated with the device opened by) 54 607 T
1 F
(ftt_open) 225.3 607 T
0 F
(.) 267.96 607 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.19 (The) 54 587 P
1 F
-0.19 (for) 75.47 587 P
-0.19 (ce) 90.58 587 P
0 F
-0.19 ( \337ag \050if set to one\051 forces the exact device name speci\336ed to be used, allowing access to devices) 101.23 587 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(which are otherwise unsupported.) 54 573 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
3.55 (ftt_set_mode_dev) 54 553 P
0 F
3.55 ( performs no tape operations, it merely sets \337ags, etc. which will be used by) 143.98 553 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(ftt_open_dev) 54 539 T
(.) 120 539 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 16 Q
(4.38) 54 506.33 T
0 F
(int) 98 506.33 T
1 F
(ftt_eprintf\050) 118.9 506.33 T
0 F
(char *) 195.31 506.33 T
1 F
(format, ...\051) 234.85 506.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 12 Q
-0.62 (Prints the format and ar) 54 482 P
-0.62 (guments on the error block for ftt. making it the result of the next ftt_get_error call.) 164.62 482 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Behaves basically like sprintf\050\051, except the buf) 54 462 T
(fer length is checked for over\337ow) 277.4 462 T
(, etc.) 438.91 462 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(ftt_eprintf) 54 442 T
0 F
( performs no tape operations.) 107.32 442 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "16" 22
%%Page: "17" 23
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
396 36 486 54 R
7 X
0 0 0 1 0 0 0 K
V
0 10 Q
0 X
(January 5, 1996) 409.2 47.18 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(DRAFT) 315.78 47.3 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
72 63 540 63 2 L
1 H
2 Z
N
522 36 540 54 R
7 X
V
0 12 Q
0 X
(17) 528 45.82 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 10 Q
(FTT Design) 54 37.18 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 18 Q
(5) 54 708 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(High Level Calls) 90 708 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 12 Q
-0.02 (The medium level calls provide combinations of the low level calls to perform various more complicated) 54 682 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(tasks. They are also used to provide higher level calls, and for the) 54 668 T
1 F
(ftt_test) 371.6 668 T
0 F
( program.) 407.58 668 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 16 Q
(5.1) 54 635.33 T
0 F
(int) 90 635.33 T
1 F
( ftt_verify_vol_label\050) 106.9 635.33 T
0 F
(ftt_descriptor) 249.54 635.33 T
1 F
(d,) 339.74 635.33 T
0 F
(int) 356.64 635.33 T
1 F
(type,) 377.54 635.33 T
0 F
(char *) 414.86 635.33 T
1 F
( vollabel,) 454.4 635.33 T
0 F
(int) 519.74 635.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(timeout,) 54 616.33 T
0 F
(int) 114.43 616.33 T
1 F
(rdonly\051) 135.33 616.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 12 Q
0.88 (This rewinds the tape, uses) 54 592 P
1 F
0.88 (ftt_status) 191.02 592 P
0 F
0.88 ( to check if the tape is write protected, reads the \336rst block, uses) 239.01 592 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(ftt_guess_label) 54 578 T
0 F
( to check that the label is the indicated type and volume label.) 130 578 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(timeout) 54 558 T
0 F
( is the timeout for the status check for write protect status, in seconds.) 93.32 558 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(type) 54 538 T
0 F
( can be any of the types speci\336ed in) 76 538 T
1 F
(ftt_guess_label.) 250.3 538 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 F
(The tape is left positioned after the volume label.) 54 518 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(This routine performs numerous tape operations.) 54 498 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 16 Q
(5.2) 54 465.33 T
0 F
(int) 90 465.33 T
1 F
(ftt_write_vol_label\050) 110.9 465.33 T
0 F
(ftt_descriptor) 245.09 465.33 T
1 F
(d,) 335.3 465.33 T
0 F
(int) 352.19 465.33 T
1 F
(type,) 373.09 465.33 T
0 F
(char *) 410.42 465.33 T
1 F
( vollabel\051) 449.95 465.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 12 Q
1.41 (This rewinds the tape, formats a label into a buf) 54 441 P
1.41 (fer) 295.77 441 P
1.41 (, and writes the label on the tape, then writes two) 308.61 441 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(\336lemarks and backs over one by doing an) 54 427 T
1 F
(ftt_close_dev) 256.63 427 T
0 F
(and forward skipping one \336lemark.) 326.28 427 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(type) 54 407 T
0 F
( can be any of the types speci\336ed in) 76 407 T
1 F
(ftt_guess_label) 250.3 407 T
0 F
(\050except FTT_DONTCHECK\051) 329.29 407 T
1 F
(.) 472.93 407 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 F
(This routine performs numerous tape operations.) 54 387 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 16 Q
(5.3) 54 354.33 T
0 F
(int) 90 354.33 T
1 F
(ftt_describe_dev\050) 110.9 354.33 T
0 F
(ftt_descriptor) 233.09 354.33 T
1 F
(d,) 323.3 354.33 T
0 F
(char *) 340.19 354.33 T
1 F
(dev) 379.73 354.33 T
(,) 402.85 354.33 T
0 F
(FILE *pf) 410.85 354.33 T
1 F
(\051) 469.95 354.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 12 Q
1.51 (This routine prints a description of the given device, listing the density) 54 330 P
1.51 (, compression options, rewind) 409.14 330 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(modes, etc. on the \336le) 54 316 T
1 F
(pf) 162.32 316 T
0 F
(.) 172.99 316 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(It returns the number of bytes written on the \336le.) 54 296 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(This routine performs no tape operations.) 54 276 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 16 Q
(5.4) 54 243.33 T
0 F
(ftt_stat_buf *) 90 243.33 T
1 F
(ftt_init_stats\050) 175.78 243.33 T
0 F
(ftt_descriptor) 271.31 243.33 T
1 F
(d\051) 361.52 243.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 12 Q
-0.25 (This routine a pair of statisics buf) 54 219 P
-0.25 (fers, and returns a pointer to them, and initializes the \336rst with zeros and) 213.61 219 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(the second with current statistics for the drive.) 54 205 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.21 (This routine performs a) 54 185 P
1 F
0.21 (ftt_get_stats) 170.84 185 P
0 F
0.21 ( which in turn calls) 233.48 185 P
1 F
0.21 (ftt_close_dev) 329.54 185 P
0 F
0.21 ( which will write \336le marks if the) 396.18 185 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(preceding operation was a write or write \336le mark.) 54 171 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 16 Q
(5.5) 54 138.33 T
0 F
(int) 90 138.33 T
1 F
(ftt_update_stats\050) 110.9 138.33 T
0 F
(ftt_descriptor) 226.43 138.33 T
1 F
(d,) 316.64 138.33 T
0 F
(ftt_stat_buf *) 333.54 138.33 T
1 F
(bp\051) 419.31 138.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 12 Q
(This routine updates the status pair) 54 114 T
1 F
(bp,) 224.65 114 T
0 F
(keeping running totals in) 244 114 T
1 F
(bp[0]) 366.66 114 T
0 F
( and latest statistics in) 394 114 T
1 F
(bp[1]) 502.33 114 T
0 F
(.) 529.67 114 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.21 (This routine performs a) 54 94 P
1 F
0.21 (ftt_get_stats) 170.84 94 P
0 F
0.21 ( which in turn calls) 233.48 94 P
1 F
0.21 (ftt_close_dev) 329.54 94 P
0 F
0.21 ( which will write \336le marks if the) 396.18 94 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(preceding operation was a write or write \336le mark) 54 80 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "17" 23
%%Page: "18" 24
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
126 36 216 54 R
7 X
0 0 0 1 0 0 0 K
V
0 10 Q
0 X
(January 5, 1996) 139.2 47.18 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(DRAFT) 261.78 47.3 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
540 63 72 63 2 L
1 H
2 Z
N
72 36 90 54 R
7 X
V
0 12 Q
0 X
(18) 78 45.82 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 10 Q
(FTT Design) 54 37.18 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 16 Q
(5.6) 54 709.33 T
0 F
(int) 90 709.33 T
1 F
(ftt_dump_stats\050) 110.9 709.33 T
0 F
(ftt_stat_buf) 219.33 709.33 T
1 F
(b,) 297.1 709.33 T
0 F
(FILE *) 314 709.33 T
1 F
(pf\051) 359.78 709.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 12 Q
(This routine prints important statistics from the statistics buf) 54 685 T
(fer) 343.79 685 T
1 F
(b) 360.11 685 T
0 F
(on \336le descriptor) 369.78 685 T
1 F
(pf.) 454.1 685 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(ftt_dump_stats) 54 665 T
0 F
( performs no tape I/O.) 131.33 665 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(It returns the number of bytes written on the \336le.) 54 645 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "18" 24
%%Page: "19" 25
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
396 36 486 54 R
7 X
0 0 0 1 0 0 0 K
V
0 10 Q
0 X
(January 5, 1996) 409.2 47.18 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(DRAFT) 315.78 47.3 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
72 63 540 63 2 L
1 H
2 Z
N
522 36 540 54 R
7 X
V
0 12 Q
0 X
(19) 528 45.82 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 10 Q
(FTT Design) 54 37.18 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 18 Q
(6) 54 708 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(SCSI Pass Thr) 90 708 T
(ough calls) 202.7 708 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 12 Q
-0.56 (These calls are used internally by some upper level ftt calls, and have a separate open/close interface. They) 54 682 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(are also used by the juke product, and others which need a direct SCSI CDB send/receive interface.) 54 668 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Note that a scsi_handle is distinct from a regular ftt handle.) 54 648 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(The ftt_scsi routines are callable without the use of the rest of ftt, for use by the juke product, etc.) 54 628 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 16 Q
(6.1) 54 595.33 T
0 F
(char) 90 595.33 T
1 F
(*ftt_get_scsi_devname\050handle\051) 121.54 595.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 12 Q
2.18 (This routine returns the SCSI pass-thru device name of a given tape basename, suitable for calling) 54 571 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(ftt_scsi_open\050\051. It also ensures any other device routes to the device are closed if necessary) 54 557 T
(.) 490.1 557 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 16 Q
(6.2) 54 524.33 T
0 F
(scsi_handle) 90 524.33 T
1 F
(ftt_scsi_open\050devname\051) 168.66 524.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 12 Q
-0.1 (Returns a scsi_handle for other ftt_scsi calls. Opens the device with whatever special \337ags are needed for) 54 500 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(this platform.) 54 486 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 16 Q
(6.3) 54 453.33 T
0 F
(int) 90 453.33 T
1 F
(ftt_scsi_close\050) 110.9 453.33 T
0 F
(scsi_handle) 205.09 453.33 T
1 F
(s\051) 283.74 453.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 12 Q
-0.68 (Closes the \336le handle, no further calls will be made. The user should be sure to close the scsi_handle before) 54 429 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(other calls using the regular ftt handle are used.) 54 415 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 16 Q
(6.4) 54 382.33 T
0 F
(int) 90 382.33 T
1 F
(ftt_scsi_command\050) 110.9 382.33 T
0 F
(scsi_handle) 239.76 382.33 T
1 F
( s,) 314.42 382.33 T
0 F
(char *) 332.64 382.33 T
1 F
(pcOp,) 372.18 382.33 T
0 F
(char *) 417.52 382.33 T
1 F
(pcCmd,) 457.06 382.33 T
0 F
(int) 514.83 382.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(nCmd,) 54 363.33 T
0 F
(char) 104.67 363.33 T
1 F
( *pcRdW) 132.21 363.33 T
(r) 196.37 363.33 T
(,) 202 363.33 T
0 F
(int) 210 363.33 T
1 F
(nRdW) 230.9 363.33 T
(r) 275.95 363.33 T
(,) 281.58 363.33 T
0 F
(int) 289.58 363.33 T
1 F
(timeout,) 310.48 363.33 T
0 F
(int) 370.91 363.33 T
1 F
(write\337ag\051) 391.81 363.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 12 Q
0.14 (Performs a SCSI command, whose CDB is pointed to by pcCmd, and is of length nCmd, and uses a data) 54 339 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(buf) 54 325 T
(fer pointed to by pcRdW) 69.78 325 T
(r) 188.62 325 T
(, of length nRdW) 192.13 325 T
(r) 274.98 325 T
(.) 278.32 325 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.13 (It returns the SCSI sense key status word of 0 for success, other values indicating various sorts of failure) 54 305 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(messages as de\336ned by the SCSI II spec.) 54 291 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(A timeout equal to) 54 271 T
1 F
(timeout) 146.66 271 T
0 F
( will be set \050in seconds\051 for the command to return.) 185.99 271 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(W) 54 251 T
(rite\337ag indicates wether the pcRdW) 64.85 251 T
(r buf) 237 251 T
(fer is for sending or receiving.) 259.78 251 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.08 (If request sense information is desired, an extra call to ftt_scsi_command with a request-sense CDB must) 54 231 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.47 (be made; if the local system auto-senses, the last auto-sense data will be saved and returned if a request) 54 217 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(sense call is made immediately following its attainment.) 54 203 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "19" 25
%%Page: "20" 26
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
126 36 216 54 R
7 X
0 0 0 1 0 0 0 K
V
0 10 Q
0 X
(January 5, 1996) 139.2 47.18 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(DRAFT) 261.78 47.3 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
540 63 72 63 2 L
1 H
2 Z
N
72 36 90 54 R
7 X
V
0 12 Q
0 X
(20) 78 45.82 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 10 Q
(FTT Design) 54 37.18 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 18 Q
(7) 54 708 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(ftt descriptor data structur) 90 708 T
(e) 297.13 708 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 12 Q
0.27 (The ftt descriptor data structure is opaque to the user) 54 682 P
0.27 (, but internally needs information to operate the de-) 308.89 682 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(vice, maintain status of tape position, etc.) 54 668 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 16 Q
(7.1    dev_info[] table) 54 635.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 12 Q
0.44 (The dev_info table will be an array of structures, with each element describing a device associated with) 54 611 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(this tape device:) 54 597 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(The descriptor will have room for up to 32 such entries.) 54 358 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 16 Q
(7.2    which_is_open \337ag) 54 325.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 12 Q
-0.69 (This will contain the subscript of the dev_info table for the device that is currently open, if any) 54 301 P
-0.69 (. If no device) 496.76 301 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(is currently open, it will be set to -1.) 54 287 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 16 Q
(7.3    \336le_descriptor) 54 254.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 12 Q
(If the which_is_open \337ag is non-negative, this contains the \336le descriptor for the open device.) 54 230 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 16 Q
(7.4    which_is_default) 54 197.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 12 Q
-0.06 (This will contain the subscript of the dev_info table which is the default device to use if the user does not) 54 173 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(call ftt_set_mode\050\051.) 54 159 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 16 Q
(7.5    open_r) 54 126.33 T
(ead_only) 137.71 126.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 12 Q
1.09 (This stores the readonly ar) 54 102 P
1.09 (gument to ftt_open\050\051, indicating that device opens for this device should be) 185.43 102 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(made read_only) 54 88 T
(, and that ftt_write\050\051 and ftt_writefm\050\051 calls should fail.) 130.2 88 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(T) 197.6 579 T
(ABLE  6.) 204.72 579 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Field) 78 547 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Description) 222 547 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 11 Q
(char *device_name) 78 529.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Pathname to open to access) 222 529.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(device) 222 516.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(char density) 78 499.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.12 (Density code, 0 is lowest den-) 222 499.67 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(sity) 222 486.67 T
(...) 237.18 486.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(char mode) 78 469.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Flag to indicate if compres-) 222 469.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(sion is used) 222 456.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(char rewind) 78 439.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(\337ag to indicate device is) 222 439.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(rewind on close) 222 426.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(char passthru) 78 409.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.3 (\337ag to indicate the device can) 222 409.67 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(be used for SCSI pass-thru) 222 396.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
72 562.75 72 374.25 2 L
V
0.5 H
0 Z
N
216 563.25 216 373.75 2 L
V
N
360 562.75 360 374.25 2 L
V
N
71.75 563 360.25 563 2 L
V
N
71.75 541 360.25 541 2 L
V
N
71.75 511 360.25 511 2 L
V
N
71.75 481 360.25 481 2 L
V
N
71.75 451 360.25 451 2 L
V
N
71.75 421 360.25 421 2 L
V
N
71.75 391 360.25 391 2 L
V
N
71.75 374 360.25 374 2 L
V
N
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "20" 26
%%Page: "21" 27
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
396 36 486 54 R
7 X
0 0 0 1 0 0 0 K
V
0 10 Q
0 X
(January 5, 1996) 409.2 47.18 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(DRAFT) 315.78 47.3 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
72 63 540 63 2 L
1 H
2 Z
N
522 36 540 54 R
7 X
V
0 12 Q
0 X
(21) 528 45.82 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 10 Q
(FTT Design) 54 37.18 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 16 Q
(7.6    curr) 54 709.33 T
(ent_block, curr) 119.92 709.33 T
(ent_\336le, curr) 224.51 709.33 T
(ent_valid) 312.21 709.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 12 Q
1.36 (The current_block and current_\336le \336elds state where we believe we are on the tape based on calls to) 54 685 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(ftt_write, ftt_read, ftt_writefm, ftt_rewind.) 54 671 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(current_block must be a 64 bit integer value) 54 651 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.63 (The current_valid \337ag will be set if we have con\336dence on the estimates of position due to having per-) 54 631 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(formed an ftt_rewind, or an ftt_status which said we were at BOT) 54 617 T
(.) 369.05 617 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 16 Q
(7.7    async_pf) 54 584.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 12 Q
(The) 54 560 T
1 F
(FILE *) 75.66 560 T
0 F
( for the pipe to read the result string, etc. from an asynchronous operation.) 112.67 560 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 16 Q
(7.8    last_operation) 54 527.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 12 Q
-0.35 (This \337ag says whether we are reading, or writing, or neither one. This lets us do appropriate things on sys-) 54 503 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(tems that need special stuf) 54 489 T
(f on a read-to-write transition.) 180.43 489 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 16 Q
(7.9    unr) 54 456.33 T
(ecover) 114.61 456.33 T
(ed_err) 158.74 456.33 T
(or) 203.76 456.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 12 Q
0.09 (This \337ag will indicate that FTT_EUNRECOVERED has been returned, indicating that successive opera-) 54 432 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(tions other than rewind will fail.) 54 418 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
576 556 578 595 R
V
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "21" 27
%%Page: "22" 28
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
126 36 216 54 R
7 X
0 0 0 1 0 0 0 K
V
0 10 Q
0 X
(January 5, 1996) 139.2 47.18 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(DRAFT) 261.78 47.3 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
540 63 72 63 2 L
1 H
2 Z
N
72 36 90 54 R
7 X
V
0 12 Q
0 X
(22) 78 45.82 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 10 Q
(FTT Design) 54 37.18 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "22" 28
%%Page: "23" 29
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
396 36 486 54 R
7 X
0 0 0 1 0 0 0 K
V
0 10 Q
0 X
(January 18, 1996) 406.7 47.18 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(DRAFT) 315.78 47.3 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
72 63 540 63 2 L
1 H
2 Z
N
522 36 540 54 R
7 X
V
0 12 Q
0 X
(23) 528 45.82 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 10 Q
(FTT Design) 54 37.18 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 18 Q
(8) 54 708 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(T) 90 708 T
(est Design) 100.35 708 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 16 Q
(8.1    Overview) 54 672.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 12 Q
-0.6 (The test software for ftt must be able to test each command or a series of commands in a user de\336ned order) 54 648 P
-0.6 (.) 555 648 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.01 (This user de\336ned order can either be in a script \336le or typed in interactively at the command line. Like ftt) 54 634 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.34 (itself, this command interpreter needs to be lightweight and easy to port; therefore, it cannot be very so-) 54 620 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1.05 (phisticated. Errors will simply be reported to stderr) 54 606 P
1.05 (. Only ftt commands themselves will be supported:) 305.99 606 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(there will be no \337ow control \050if-then-else, for) 54 592 T
(, e.t.c.\051 constructs.) 271.48 592 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.04 (W) 54 572 P
0.04 (e can then use this interpreter as the fundamental building block for a series of scripts to verify both an) 64.37 572 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.39 (ftt port to a particular platform and drive type and to test that a particular drive is behaving as expected.) 54 558 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(These series of scripts will be provided as part of the testing portion of ftt.) 54 544 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
576 702 578 720 R
V
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "23" 29
%%Page: "24" 30
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
126 36 216 54 R
7 X
0 0 0 1 0 0 0 K
V
0 10 Q
0 X
(January 18, 1996) 136.7 47.18 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(DRAFT) 261.78 47.3 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
540 63 72 63 2 L
1 H
2 Z
N
72 36 90 54 R
7 X
V
0 12 Q
0 X
(24) 78 45.82 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 10 Q
(FTT Design) 54 37.18 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 16 Q
(8.2    ftt interpr) 54 709.33 T
(eter \050ftt_test\051) 158.58 709.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 12 Q
-0.08 (In the ftt interpreter) 54 685 P
-0.08 (, ftt_test, only a single device can be open at any given time. This greatly simplies the) 147.6 685 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.76 (user interface. ftt_test will support the following commands either entered via a script or the command) 54 671 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(line. If no corresponding library routine exists, the routine is described here.) 54 657 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
4.15 (All commands will write any errors to stderr) 54 637 P
4.15 (. If a particular routine returns any data as well) 296.04 637 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.62 (\050e.g.,get_status\051 that information is also written to stderr unless otherwise indicated. If a command invokes) 54 623 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.5 (a corresponding ftt library routine, refer to the library section for a detailed description of what the speci\336c) 54 609 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(command does.) 54 595 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.52 (For commands that operate on a base \336lename \050e.g., ftt_open\051, the base name can be supplied in one of) 54 575 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(three ways in descending order of priority:) 54 561 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(1.) 72 541 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(on the individual command line, e.g., ftt_open /dev/rmt/tps0d3) 90 541 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(2.) 72 523 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(on the command line invoking the test routine itself, e.g., ftt_test -f /dev/rmt/tps0d3) 90 523 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(3.) 72 505 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(by the environment variable FTT_T) 90 505 T
(APE, e.g., setenv FTT_T) 261.68 505 T
(APE /dev/rmt/tps0d3) 381.05 505 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.27 (For testing purposes, it is sometimes desirable to issue commands that will generate a certain expected er-) 54 485 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.28 (ror) 54 471 P
0.28 (. T) 67.33 471 P
0.28 (o avoid a lot of unnecessary clutter) 80.11 471 P
0.28 (, this expected error messages to stderr can be suppressed. Each) 249.27 471 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.73 (command can take a \322-status [FTT_ERROR]\323 option which indicates the expected error for that command.) 54 457 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.42 (An error message will be written to stderr only if this error code is not returned. The list of valid values) 54 443 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
4.82 (for FTT_ERROR are all of the error returns listed earlier in this document \050e.g., FTT_EIO,) 54 429 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(FTT_ENOENT) 54 415 T
(, FTT_ENOT) 128.44 415 T
(APE\051.) 192.8 415 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.08 (All commands optionally take a \322-usage\323 switch as well. This is to aid the interactive user in determining) 54 395 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.03 (what are the valid options and parameters for a given command. If the \322-usage\323 switch is used, the actual) 54 381 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(commad will NOT be executed, but a usage messasge will simply be printed to stderr) 54 367 T
(.) 463.62 367 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 14 Q
(8.2.1    Open/close Commands) 54 337.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 12 Q
(8.2.1.1    ftt_open [basename] [-r) 54 311 T
(eadonly] [-status <err) 219.42 311 T
(or>] [-usage]) 330.02 311 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 F
-0.37 (calls the corresponding ftt_open library routine using) 54 291 P
2 F
-0.37 (basename) 309.72 291 P
0 F
-0.37 (as the input \336lename.) 360.34 291 P
2 F
-0.37 (-r) 464.52 291 P
-0.37 (eadonly) 472.74 291 P
0 F
-0.37 ( will open) 510.74 291 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.28 (the \336le for read only access. W) 54 277 P
0.28 (ithout this \337ag, the device is opened for read/write access. The ftt \336le de-) 204.14 277 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(scriptor is stored in a global variable for all other accesses on this device by the test routines.) 54 263 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(8.2.1.2    ftt_open_logical [basename] [-\337avor <\337avor>] <-driveid <driveid>> [-r) 54 237 T
(eadonly] [-status) 461.12 237 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(<err) 54 223 T
(or>] [-usage]) 76.61 223 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 F
-0.16 (calls the corresponding ftt_open library routine using) 54 203 P
2 F
-0.16 (basename) 311.17 203 P
0 F
-0.16 (as the input \336lename.) 361.99 203 P
2 F
-0.16 (\337avor) 467 203 P
0 F
-0.16 ( indicates the) 495 203 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.39 (operating system \337avor to use. If not supplied, the test routine will use the current operating system \337avor) 54 189 P
-0.39 (.) 555 189 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 F
-0.19 (driveid) 54 175 P
0 F
-0.19 ( speci\336es the drive type.) 88 175 P
2 F
-0.19 (-r) 206.38 175 P
-0.19 (eadonly) 214.6 175 P
0 F
-0.19 ( will open the \336le for read only access. W) 252.6 175 P
-0.19 (ithout this \337ag, the de-) 450.4 175 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1.51 (vice is opened for read/write access. The ftt \336le descriptor is stored in a global variable for all other) 54 161 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(accesses on this device by the test routines.) 54 147 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(8.2.1.3    ftt_open_dev [-status <err) 54 121 T
(or>] [-usage]) 232.26 121 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 F
(calls the corresponding ftt library routine using the global variable for the ftt \336le descriptor) 54 101 T
(.) 489.28 101 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
576 333 578 347 R
V
576 233 578 245 R
V
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "24" 30
%%Page: "25" 31
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
396 36 486 54 R
7 X
0 0 0 1 0 0 0 K
V
0 10 Q
0 X
(January 18, 1996) 406.7 47.18 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(DRAFT) 315.78 47.3 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
72 63 540 63 2 L
1 H
2 Z
N
522 36 540 54 R
7 X
V
0 12 Q
0 X
(25) 528 45.82 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 10 Q
(FTT Design) 54 37.18 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 12 Q
(8.2.1.4    ftt_close [-status <err) 54 712 T
(or>] [-usage]) 208.25 712 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 F
(calls the corresponding ftt library routine using the global variable for the ftt \336le descriptor) 54 692 T
(.) 489.28 692 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(8.2.1.5    ftt_close_dev [-status <err) 54 666 T
(or>] [-usage]) 232.25 666 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 F
(calls the corresponding ftt library routine using the global variable for the ftt \336le descriptor) 54 646 T
(.) 489.28 646 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 14 Q
(8.2.2    Read/write Commands) 54 616.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 12 Q
(8.2.2.1    ftt_write_tblock [-nblocks <n>] [-bsize <nbytes>] [-delta <ndbytes>] [-alignmask) 54 590 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(<nalign>] [-delay <nsec>] [-status <err) 54 576 T
(or>] [-usage]) 251.29 576 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 F
-0.07 (write) 54 556 P
2 F
-0.07 (n) 81.59 556 P
0 F
-0.07 ( \050default = 1\051 test blocks of size) 87.59 556 P
2 F
-0.07 (nbytes) 241.75 556 P
0 F
-0.07 ( \050default = 32768\051. If) 272.41 556 P
2 F
-0.07 (ndbytes) 376.12 556 P
0 F
-0.07 ( is speci\336ed, the writes will be) 412.78 556 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.3 (of random size of) 54 542 P
2 F
-0.3 (nbytes) 140.12 542 P
0 F
-0.3 ( and) 170.78 542 P
2 F
-0.3 (nbytes + ndbytes) 193.52 542 P
0 F
-0.3 (. If alignment is speci\336ed, random size records must will be) 274.34 542 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.18 (adjusted to this byte alignment. V) 54 528 P
-0.18 (alid values for nalign are 0 \050allows odd byte writes\051, 1 \050allows odd word) 213.76 528 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.17 (writes\051, and 3 \050allows only longword multiples\051. If delay is speci\336ed, a random delay of 0 to) 54 514 P
2 F
-0.17 (nsec) 497.02 514 P
0 F
-0.17 ( will oc-) 518.35 514 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.07 (cur between writes. The \336rst londword in the test block is the number of bytes in the block, the second is) 54 500 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.74 (the block number) 54 486 P
0.74 (, the third is the \336lename. All remaining bytes are \336lled with ascending bytes starting) 138.99 486 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(with \050\336le number + block number\051 % 256.) 54 472 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
-0.01 (8.2.2.2    ftt_verify_tblock [-nblocks <n>] [-delay <nsec>] [-oddbyte] [-\336lemark] [-status <err) 54 446 P
-0.01 (or>] [-) 524.85 446 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(usage]) 54 432 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 F
0.02 (read and verify) 54 412 P
2 F
0.02 ( n) 126.67 412 P
0 F
0.02 ( \050default = 1\051 test blocks If delay is speci\336ed, a random delay of 0 to) 135.68 412 P
2 F
0.02 (nsec) 466.98 412 P
0 F
0.02 ( will occur be-) 488.3 412 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.8 (tween reads. If the) 54 398 P
2 F
0.8 (-oddbyte) 148.83 398 P
0 F
0.8 ( switch is used, an odd number of bytes will be used for the input buf) 190.81 398 P
0.8 (fer) 534.54 398 P
0.8 (.) 547.21 398 P
2 F
0.8 (-) 554 398 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(\336lemark) 54 384 T
0 F
( indicates that the record should be a \336lemark.) 93.32 384 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(8.2.2.3    ftt_dump [-nblocks n] [-\336lename <\336lename>] [-status <err) 54 358 T
(or>] [-usage]) 395.94 358 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 F
(read) 54 338 T
2 F
(n) 77.65 338 T
0 F
( blocks \050defaults until end of tape\051 and then write them to stdout or) 83.65 338 T
2 F
(\336lename) 407.62 338 T
0 F
(if speci\336ed.) 451.27 338 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(8.2.2.4    ftt_undump [-\336lename <\336lename>] [-status <err) 54 312 T
(or>] [-usage]) 345.28 312 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 F
(write until end of data from stdin or) 54 292 T
2 F
(\336lename) 228.65 292 T
0 F
( if speci\336ed.) 269.3 292 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(8.2.2.5    ftt_writefm [-status <err) 54 266 T
(or>] [-usage]) 224.23 266 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 F
(calls the corresponding ftt library routine using the global variable for the ftt \336le descriptor) 54 246 T
(.) 489.28 246 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(8.2.2.6    ftt_verify_vol_label [-timeout <nsecs>] [-type <type>] [-label <labelname>] [-r) 54 220 T
(eadonly] [-) 497.41 220 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(status <err) 54 206 T
(or>] [-usage]) 109.61 206 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 F
0.36 (calls the corresponding ftt library routine using the global variable for the ftt \336le descriptor) 54 186 P
0.36 (. Information) 494.32 186 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.65 (is writted to stderr) 54 172 P
-0.65 (. This command will wait) 139.06 172 P
2 F
-0.65 (nsecs) 261.82 172 P
0 F
-0.65 ( for the drive to come online. The default value is 0. V) 287.81 172 P
-0.65 (alid) 540 172 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(types are:) 54 158 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
4 10 Q
(FTT_ANSI_HEADER) 72 139.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(FTT_FMB_HEADER) 72 127.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(FTT_TAR_HEADER) 72 115.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(FTT_CPIO_HEADER) 72 103.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(FTT_UNKNOWN_HEADER) 72 91.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(FTT_BLANK_HEADER) 72 79.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
576 288 578 626 R
V
576 76 578 228 R
V
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "25" 31
%%Page: "26" 32
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
126 36 216 54 R
7 X
0 0 0 1 0 0 0 K
V
0 10 Q
0 X
(January 18, 1996) 136.7 47.18 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(DRAFT) 261.78 47.3 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
540 63 72 63 2 L
1 H
2 Z
N
72 36 90 54 R
7 X
V
0 12 Q
0 X
(26) 78 45.82 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 10 Q
(FTT Design) 54 37.18 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
4 F
(FTT_DONTCHECK_HEADER) 72 713.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 12 Q
(If not speci\336ed, a) 54 694 T
2 F
(type) 140.32 694 T
0 F
( of FTT_ANSI_HEADER is assumed.) 160.31 694 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(8.2.2.7    ftt_write_vol_label [-type <type>] [-label <labelname>] [-status <err) 54 668 T
(or>] [-usage]) 446.92 668 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 F
-0.7 (calls the corresponding ftt library routine using the global variable for the ftt \336le descriptor) 54 648 P
-0.7 (. The valid value) 479.45 648 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(for) 54 634 T
2 F
(type) 70.99 634 T
0 F
( are the same as in ftt_verify_vol_label.) 90.98 634 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(If not speci\336ed, FTT_ANSI_HEADER is assumed.) 54 614 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 14 Q
(8.2.3    T) 54 584.67 T
(ape Positioning Commands) 104.05 584.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 12 Q
(8.2.3.1    ftt_status [-timeout <nsecs>] [-status <err) 54 558 T
(or>]) 311.24 558 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 F
-0.02 (calls the corresponding ftt library routine using the global variable for the ftt \336le descriptor and prints the) 54 538 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.28 (current drive status. The user can specify a timeout of) 54 524 P
2 F
-0.28 (nsecs) 312.18 524 P
0 F
-0.28 (. If no timeout is speci\336ed, the default value is) 338.17 524 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(0.) 54 510 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(8.2.3.2    ftt_test_status [-<\337ag) 54 484 T
5 F
(1>) 207.48 484 T
1 F
( ... [-<\337ag) 220.32 484 T
5 F
(n>) 268.82 484 T
1 F
(]] [-timeout <nsecs>] [-status <err) 282.34 484 T
(or>]) 454.58 484 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 F
-0.17 (calls ftt_status using the global variable for the ftt \336le descriptor) 54 464 P
-0.17 (. Each) 359.58 464 P
2 F
-0.17 (\337ag) 392.22 464 P
0 F
-0.17 ( is tested to see if the condition) 410.22 464 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3.53 (is true. V) 54 450 P
3.53 (alid values for) 104.05 450 P
2 F
3.53 (\337ag) 186.28 450 P
0 F
3.53 ( are: FTT_ABOT) 204.28 450 P
3.53 (, FTT_AFM, FTT_AEOT) 294.44 450 P
3.53 (, FTT_AEW) 425.27 450 P
3.53 (, FTT_PROT) 488.35 450 P
3.53 (,) 555 450 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.43 (FTT_ONLINE, and FTT_BUSY) 54 436 P
0.43 (. The user can specify a timeout of) 210.98 436 P
2 F
0.43 (nsecs) 383.41 436 P
0 F
0.43 (. If no timeout is speci\336ed, the) 409.4 436 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(default value is 0.) 54 422 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(8.2.3.3    ftt_skip_to_double_fm [-async] [-status <err) 54 396 T
(or>] [-usage]) 325.26 396 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 F
0.34 (calls the corresponding ftt library routine using the global variable for the ftt \336le descriptor where) 54 376 P
2 F
0.34 (async) 530.68 376 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 F
(will issue the command asyncronously) 54 362 T
(.) 239.21 362 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(8.2.3.4    ftt_skip_fm <n\336lemarks> [-async] [-status <err) 54 336 T
(or>] [-usage]) 339.94 336 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 F
0.34 (calls the corresponding ftt library routine using the global variable for the ftt \336le descriptor where) 54 316 P
2 F
0.34 (async) 530.68 316 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 F
(will issue the command asyncronously) 54 302 T
(.) 239.21 302 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(8.2.3.5    ftt_skip_r) 54 276 T
(ec <nr) 149.45 276 T
(ecords> [-async] [-status <err) 181.73 276 T
(or>] [-usage]) 332.15 276 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 F
0.34 (calls the corresponding ftt library routine using the global variable for the ftt \336le descriptor where) 54 256 P
2 F
0.34 (async) 530.68 256 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 F
(will issue the command asyncronously) 54 242 T
(.) 239.21 242 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(8.2.3.6    ftt_r) 54 216 T
(ewind [-async] [-status <err) 122.1 216 T
(or>] [-usage]) 263.03 216 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 F
0.34 (calls the corresponding ftt library routine using the global variable for the ftt \336le descriptor where) 54 196 P
2 F
0.34 (async) 530.68 196 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 F
(will issue the command asyncronously) 54 182 T
(.) 239.21 182 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(8.2.3.7    ftt_r) 54 156 T
(etension [-async] [-status <err) 122.1 156 T
(or>] [-usage]) 274.36 156 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 F
0.34 (calls the corresponding ftt library routine using the global variable for the ftt \336le descriptor where) 54 136 P
2 F
0.34 (async) 530.68 136 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 F
(will issue the command asyncronously) 54 122 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
576 118 578 720 R
V
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "26" 32
%%Page: "27" 33
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
396 36 486 54 R
7 X
0 0 0 1 0 0 0 K
V
0 10 Q
0 X
(January 18, 1996) 406.7 47.18 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(DRAFT) 315.78 47.3 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
72 63 540 63 2 L
1 H
2 Z
N
522 36 540 54 R
7 X
V
0 12 Q
0 X
(27) 528 45.82 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 10 Q
(FTT Design) 54 37.18 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 12 Q
(8.2.3.8    ftt_erase [-async] [-status <err) 54 712 T
(or>] [-usage]) 253.9 712 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 F
0.34 (calls the corresponding ftt library routine using the global variable for the ftt \336le descriptor where) 54 692 P
2 F
0.34 (async) 530.68 692 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 F
(will issue the command asyncronously) 54 678 T
(.) 239.21 678 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(8.2.3.9    ftt_unload [-async] [-status <err) 54 652 T
(or>] [-usage]) 262.6 652 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 F
0.34 (calls the corresponding ftt library routine using the global variable for the ftt \336le descriptor where) 54 632 P
2 F
0.34 (async) 530.68 632 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 F
(will issue the command asyncronously) 54 618 T
(.) 239.21 618 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(8.2.3.10    ftt_get_position [-status <err) 54 592 T
(or>] [-usage]) 251.59 592 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 F
0.44 (calls the corresponding ftt library routine using the global variable for the ftt \336le descriptor) 54 572 P
0.44 (. The current) 495.47 572 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(\336le and block number is written to stderr) 54 558 T
(.) 248.99 558 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(8.2.3.1) 54 532 T
(1    ftt_verify_position <\336leno> <blockno>) 86.34 532 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 F
(veri\336es that the position speci\336ed by) 54 512 T
2 F
(\336leno) 233.33 512 T
0 F
( and) 259.99 512 T
2 F
(blockno) 283.32 512 T
0 F
( match those returned by ftt_get_position.) 321.31 512 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 14 Q
(8.2.4    Asynchr) 54 482.67 T
(onous Support Commands) 146.3 482.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 12 Q
(8.2.4.1    ftt_wait [-status <err) 54 456 T
(or>] [-usage]) 205.58 456 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 F
(calls the corresponding ftt library routine using the global variable for the ftt \336le descriptor) 54 436 T
(.) 489.28 436 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(8.2.4.2    ftt_check [-status <err) 54 410 T
(or>] [-usage]) 212.92 410 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 F
(calls the corresponding ftt library routine using the global variable for the ftt \336le descriptor) 54 390 T
(.) 489.28 390 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 14 Q
(8.2.5    Get/set Mode Commands and Other Commands That Car) 54 360.67 T
(e About Filenames) 443.79 360.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 12 Q
(8.2.5.1    ftt_list_all [-status <err) 54 334 T
(or>] [-usage]) 217.6 334 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 F
-0.27 (calls the corresponding ftt library routine using the global variable for the ftt \336le descriptor) 54 314 P
-0.27 (. The list of de-) 485.44 314 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(vice node pathnames is written to stderr) 54 300 T
(.) 244.64 300 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(8.2.5.2    ftt_chall <uid> <gid> <mode> [-status err) 54 274 T
(or] [-usage]) 312.14 274 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 F
-0.47 (calls the corresponding ftt library routine using the global variable for the ftt \336le descriptor) 54 254 P
-0.47 (. The user name) 482.75 254 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(is speci\336ed in) 54 240 T
2 F
(uid) 123 240 T
0 F
(, the group name in) 138.34 240 T
2 F
(gid) 234.32 240 T
0 F
(, and the mode in) 249.66 240 T
2 F
(mode) 335.65 240 T
0 F
(.) 361.64 240 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(8.2.5.3    ftt_verify_exist) 54 214 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 F
(veri\336es that all of the \336lenames listed by ftt_list_all really do exist.) 54 194 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(8.2.5.4    ftt_avail_mode <density> <mode> [-blocksize <b>] [-status <err) 54 168 T
(or>] [-usage]) 425.29 168 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 F
0.4 (calls the corresponding ftt library routine using the global variable for the ftt \336le descriptor) 54 148 P
0.4 (. The density) 494.87 148 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.76 (and mode must be speci\336ed in) 54 134 P
2 F
0.76 (density) 207.23 134 P
0 F
0.76 ( and) 241.22 134 P
2 F
0.76 (mode) 266.08 134 P
0 F
0.76 ( respectively) 292.07 134 P
0.76 (. If the blocksize is not speci\336ed, variable) 353.03 134 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(block will be assumed. The device node is printed to stderr) 54 120 T
(.) 336.3 120 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
576 478 578 720 R
V
576 330 578 398 R
V
576 164 578 262 R
V
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "27" 33
%%Page: "28" 34
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
126 36 216 54 R
7 X
0 0 0 1 0 0 0 K
V
0 10 Q
0 X
(January 18, 1996) 136.7 47.18 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(DRAFT) 261.78 47.3 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
540 63 72 63 2 L
1 H
2 Z
N
72 36 90 54 R
7 X
V
0 12 Q
0 X
(28) 78 45.82 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 10 Q
(FTT Design) 54 37.18 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 12 Q
(8.2.5.5    ftt_get_mode [-status <err) 54 712 T
(or>] [-usage]) 232.91 712 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 F
(calls the ftt_get_mode library routine using the global variable for the ftt \336le descriptor) 54 692 T
(.) 470.95 692 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(8.2.5.6    ftt_set_mode <density> <mode> [-blocksize <b>] [-status <err) 54 666 T
(or>] [-usage]) 414.61 666 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 F
0 (calls the ftt_set_mode library routine using the global variable for the ftt \336le descriptor) 54 646 P
0 (. If no blocksize is) 469.67 646 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(speci\336ed, variable block mode is assumed.) 54 632 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(8.2.5.7    ftt_get_mode_dev [device_name] [-status <err) 54 606 T
(or>] [-usage]) 333.89 606 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 F
0.4 (calls the corresponding ftt library routine using the global variable for the ftt \336le descriptor) 54 586 P
0.4 (. Node infor-) 494.88 586 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(mation is written to stderr) 54 572 T
(.) 177.34 572 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(8.2.5.8    ftt_set_mode_dev <devname> [-blocksize <b>] [-for) 54 546 T
(ce] [-status <err) 362.76 546 T
(or>] [-usage]) 444.01 546 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 F
-0.5 (calls the corresponding ftt library routine using the global variable for the ftt \336le descriptor) 54 526 P
-0.5 (. If no blocksize) 482.2 526 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(is speci\336ed, variable block mode is assumed.) 54 512 T
2 F
(-for) 272.98 512 T
(ce) 290.53 512 T
0 F
( will turn the force \337ag on. It is of) 301.19 512 T
(f by default.) 463.62 512 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(8.2.5.9    ftt_verify_modes) 54 486 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 F
0.83 (veri\336es all modes of the device. This routines will loop through all modes of the device. It will set the) 54 466 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(mode, write, verify the mode is what we think it should be, rewind, and then verify the data.) 54 452 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(8.2.5.10    ftt_get_basename [-status <err) 54 426 T
(or>] [-usage]) 261.58 426 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 F
(calls the corresponding ftt library routine using the global variable for the ftt \336le descriptor) 54 406 T
(.) 489.28 406 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(8.2.5.1) 54 380 T
(1    ftt_describe_dev [device_name] [-status <err) 86.34 380 T
(or>] [-usage]) 332.57 380 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 F
(calls the corresponding ftt library routine using the global variable for the ftt \336le descriptor) 54 360 T
(.) 489.28 360 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 14 Q
(8.2.6    Statistic Commands) 54 330.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 12 Q
(8.2.6.1    ftt_get_stats [-status <err) 54 304 T
(or>] [-usage]) 228.24 304 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 F
0.36 (calls the corresponding ftt library routine using the global variable for the ftt \336le descriptor) 54 284 P
0.36 (. Information) 494.32 284 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(is written to stderr) 54 270 T
(.) 141 270 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(8.2.6.2    ftt_extract_stats <statistic> [-usage]) 54 244 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 F
0.36 (calls the corresponding ftt library routine using the global variable for the ftt \336le descriptor) 54 224 P
0.36 (. Information) 494.32 224 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1.32 (is written to stderr) 54 210 P
1.32 (. V) 144.95 210 P
1.32 (alid values for) 159.6 210 P
2 F
1.32 (statistic) 235.2 210 P
0 F
1.32 ( are from the list described earlier in this document \050e.g.,) 272.55 210 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(FTT_PRODUCT_ID, FTT_VENDOR_ID, FTT_DENSITY) 54 196 T
(, etc\051.) 341.1 196 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(8.2.6.3    ftt_init_stats [-status <err) 54 170 T
(or>] [-usage]) 230.26 170 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 F
(calls the corresponding ftt library routine using the global variable for the ftt \336le descriptor) 54 150 T
(.) 489.28 150 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(8.2.6.4    ftt_update_stats [-part_display] [-status <err) 54 124 T
(or>] [-usage]) 327.92 124 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 F
0.36 (calls the corresponding ftt library routine using the global variable for the ftt \336le descriptor) 54 104 P
0.36 (. The accum-) 494.3 104 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(lated totals are written to stderr) 54 90 T
(.) 202.98 90 T
2 F
(-part_display) 208.98 90 T
0 F
( will only display the statistics that are counters.) 273.65 90 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
576 662 578 674 R
V
576 522 578 554 R
V
576 422 578 494 R
V
576 326 578 388 R
V
576 192 578 218 R
V
576 120 578 132 R
V
576 86 578 98 R
V
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "28" 34
%%Page: "29" 35
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
396 36 486 54 R
7 X
0 0 0 1 0 0 0 K
V
0 10 Q
0 X
(January 18, 1996) 406.7 47.18 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(DRAFT) 315.78 47.3 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
72 63 540 63 2 L
1 H
2 Z
N
522 36 540 54 R
7 X
V
0 12 Q
0 X
(29) 528 45.82 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 10 Q
(FTT Design) 54 37.18 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 12 Q
(8.2.6.5    ftt_dump_stats [-\336lename <\336lename>] [-status <err) 54 712 T
(or>] [-usage]) 361.26 712 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 F
0.2 (calls the corresponding ftt library routine using the global variable for the ftt \336le descriptor) 54 692 P
0.2 (. It will dump) 492.06 692 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(the stats to) 54 678 T
2 F
(\336lename) 108.34 678 T
0 F
( is speci\336ed, otherwise stderr) 148.99 678 T
(.) 287.98 678 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 14 Q
(8.2.7    Err) 54 648.67 T
(or Commands) 117.52 648.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 12 Q
(8.2.7.1    ftt_eprintf <string> [-usage]) 54 622 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 F
(calls the corresponding ftt library routine using the global variable for the ftt \336le descriptor) 54 602 T
(.) 489.28 602 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(8.2.7.2    ftt_get_err) 54 576 T
(or [-usage]) 154.08 576 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 F
0.36 (calls the corresponding ftt library routine using the global variable for the ftt \336le descriptor) 54 556 P
0.36 (. Information) 494.32 556 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(is written to stderr) 54 542 T
(.) 141 542 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(8.2.7.3    ftt_max_err) 54 516 T
(or [<maxerr) 160.75 516 T
(or>]) 223.68 516 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 F
(Set/show the current maximum number of errors before ftt_test will abort.) 54 496 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 14 Q
(8.2.8    Miscellaneous Commands) 54 466.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 12 Q
(8.2.8.1    ftt_date [-usage]) 54 440 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 F
(output current date to stderr) 54 420 T
(.) 186.65 420 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(8.2.8.2    ftt_echo [string] [-usage]) 54 394 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 F
(print string to stderr) 54 374 T
(.) 149 374 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(8.2.8.3    ftt_debug [level] [-test] [-usage]) 54 348 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 F
-0.71 (Set/show the current debug level for the ftt library as well as the test routines. The debug level of the library) 54 328 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.41 (will be set to) 54 314 P
2 F
0.41 (level) 120.3 314 P
0 F
0.41 (. If) 142.95 314 P
2 F
0.41 (-test) 160.76 314 P
0 F
0.41 ( is speci\336ed, it will set the debug level for just the test routines. If level is not) 181.43 314 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(speci\336ed, the current debug level for both the library and the test routines are displayed.) 54 300 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Debug levels for the test routines are:) 54 280 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 F
(\245) 72 260 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 F
(1 = display commands entered by user) 90 260 T
(.) 274.08 260 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
576 436 578 720 R
V
576 236 578 268 R
V
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "29" 35
%%Page: "30" 36
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
126 36 216 54 R
7 X
0 0 0 1 0 0 0 K
V
0 10 Q
0 X
(January 18, 1996) 136.7 47.18 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(DRAFT) 261.78 47.3 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
540 63 72 63 2 L
1 H
2 Z
N
72 36 90 54 R
7 X
V
0 12 Q
0 X
(30) 78 45.82 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 10 Q
(FTT Design) 54 37.18 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 16 Q
(8.3    T) 54 709.33 T
(est Scripts) 99.2 709.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 12 Q
0.19 (A series of test scripts will be provided to test the functionality of ftt as well as that of a particular drive.) 54 685 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.11 (Since the ftt_test program is very simple in nature \050e.g., no \337ow control support, no variable support\051, the) 54 671 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.06 (test suite themselves will be shell scripts. These shell scripts will be built upon smaller shell scripts to do) 54 657 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.07 (speci\336c tasks. All scripts whether they be building blocks or higher level will operate on the device name) 54 643 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(that is \050in descending order of priority\051:) 54 629 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 F
(\245) 72 609 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 F
(passed on the command line) 90 609 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 F
(\245) 72 591 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 F
(speci\336ed in the environment variable FTT_TEST) 90 591 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 14 Q
(8.3.1    ftt building block scripts) 54 561.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 12 Q
(8.3.1.1    align [device]) 54 535 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 F
0.45 (This test will write a bunch of records, rewind, and then verify) 54 515 P
0.45 (. It will do this for block sizes that are of) 358.49 515 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(longword multiples, word multiples, and byte multiples.) 54 501 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(8.3.1.2    asynch [device]) 54 475 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 F
-0.66 (This script will verify the asynchronous routines in ftt. It will \336rst write a bunch of records and then display) 54 455 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.19 (a time stamp around an asyncronously issued rewind. This output will need to be also checked manually) 54 441 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.18 (to verify that the change in time is small. It will then check ftt_wait. An asynchronous command will also) 54 427 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(be issued that is expected to fai in order to verify that ftt_wait will return a failure.[device]) 54 413 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(8.3.1.3    delay [device]) 54 387 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 F
0.23 (This script will test write a bunch of blocks and reading a bunch of blocks with a random delay between) 54 367 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(i/o operations. This tends to uncover strange behavior with devices and device drivers.) 54 353 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(8.3.1.4    erase [device]) 54 327 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 F
(This script will write a volume label, erase the tape, and then verify that the volume label is blank) 54 307 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(8.3.1.5    full [device]) 54 281 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 F
(This script will write to end of tape to verify appropriate errors reporting. It will take FOREVER to run.) 54 261 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(8.3.1.6    label [device]) 54 235 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 F
(This script will write all of the various label types and verify them.) 54 215 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(8.3.1.7    mode [device]) 54 189 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 F
-0.16 (This script will test the various ftt_mode routines. It will be a nested loop which for all densities, all com-) 54 169 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1.55 (pressions, and all block sizes \050variable and two dif) 54 155 P
1.55 (ferent \336xed block sizes\051 will check if the mode if) 308.45 155 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.18 (available. If so, it will rewind the device, set the mode, write some data, verify the mode, rewind, and \336-) 54 141 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(nally verify the data.) 54 127 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
576 704 578 720 R
V
576 587 578 665 R
V
576 123 578 543 R
V
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "30" 36
%%Page: "31" 37
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
396 36 486 54 R
7 X
0 0 0 1 0 0 0 K
V
0 10 Q
0 X
(January 18, 1996) 406.7 47.18 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(DRAFT) 315.78 47.3 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
72 63 540 63 2 L
1 H
2 Z
N
522 36 540 54 R
7 X
V
0 12 Q
0 X
(31) 528 45.82 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 10 Q
(FTT Design) 54 37.18 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 12 Q
(8.3.1.8    notape [device]) 54 712 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 F
-0.01 (This script will unload the tape and then verify that the the correct error is returned when trying to access) 54 692 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(the drive.) 54 678 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(8.3.1.9    position [device]) 54 652 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 F
-0.63 (This script will verify all the positioning commands using the a tape written by write.ftt. It will verify spac-) 54 632 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.52 (ing both records and \336lemarks both forwards and backwards. It will verify that the correct error code is) 54 618 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.25 (returned if the operation can\325) 54 604 P
-0.25 (t be performed. It will check that ftt_status returns the correct positioning in-) 192.74 604 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(formation and that ftt_skip_to_double_fm works.) 54 590 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(8.3.1.10    r) 54 564 T
(ead_only [device]) 110.11 564 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 F
0.49 (This test will verify that all ftt_write functions will return an error if the drive is opened as read only) 54 544 P
0.49 (. It) 544.17 544 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(should also verify that ftt_status determines that it\325) 54 530 T
(s a read only drive.) 297.66 530 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(8.3.1.1) 54 504 T
(1    r) 86.34 504 T
(oot [device]) 109.45 504 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 F
-0.27 (This script will need to run as root to work successfully) 54 484 P
-0.27 (. It does all of the operations that require root priv-) 317.12 484 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(ileges. Currently this is on ftt_chall.) 54 470 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(8.3.1.12    stats [device]) 54 444 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 F
-0.4 (This script will verify the statistics information. The output of the script will need to be checked manually) 54 424 P
-0.4 (.) 555 424 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(It will do a few writes and display the delta stats and then do a few reads and display the delta stats.) 54 410 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(8.3.1.13    verify [device]) 54 384 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 F
-0.03 (This script will verify a tape written with write.ftt. It veri\336es that the volume label, the number of blocks,) 54 364 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(the contents of the blocks themselves, the number of \336le marks, and the the tape is blank at the end.) 54 350 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(8.3.1.14    write [device]) 54 324 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 F
-0.03 (This script will write a test tape beginning with an ansi label. It will write a few \336les with a few thousand) 54 304 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.26 (blocks. The tape written by the script can be used by other scripts for additional testing. This test should) 54 290 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(leave the tape with only two \336lemarks at the end.) 54 276 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(8.3.1.15    random [device]) 54 250 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 F
-0.31 (This is a special script that is actually generated by a c program. The c program will generate this ftt script) 54 230 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.35 (to write a random number of \336les of random block size. It will then randomly pick a position, skip to it,) 54 216 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(and verify a random number of blocks.) 54 202 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 14 Q
(8.3.2    All inclusive tests) 54 172.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 12 Q
0.46 (A few test scripts are provided as a convenience that call the fundamental building scripts mentioned in) 54 151 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(the previous section. There are) 54 137 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(8.3.2.1    ftt_fast [-a] [-u] [device]) 54 111 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 F
-0.14 (This script will test all of the reasonable quick tests to verify that the ftt library is behaving the way that it) 54 91 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.51 (should. It may take on the order of an hour to complete. If -a is speci\336ed, the alignment tests are performed) 54 77 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
576 320 578 720 R
V
576 246 578 284 R
V
576 73 578 182 R
V
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "31" 37
%%Page: "32" 38
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
126 36 216 54 R
7 X
0 0 0 1 0 0 0 K
V
0 10 Q
0 X
(January 18, 1996) 136.7 47.18 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(DRAFT) 261.78 47.3 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
540 63 72 63 2 L
1 H
2 Z
N
72 36 90 54 R
7 X
V
0 12 Q
0 X
(32) 78 45.82 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 10 Q
(FTT Design) 54 37.18 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 12 Q
0.18 (as well. Note that this may cause SCSI resets. If the -u switch is specifed, the unload tests are performed) 54 712 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(at the end. Note that the tape will have to be reloaded before any other tests can be run.) 54 698 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(8.3.2.2    ftt_slow [-a] [-u] [device]) 54 672 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 F
0.22 (This tests is all inclusive test suite for the ftt routines. It will call ftt_fast to perform all of the reasonable) 54 652 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.6 (quick tests. In addition, it will test of the slow routines \050e.g., erase, write to end of tape\051. It may take several) 54 638 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(hours to run.) 54 624 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(8.3.2.3    ftt_exer) 54 598 T
(cise [device]) 138.76 598 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 F
-0.14 (This test is provided as a convenience for the user who wants to exercise the device to make sure that it is) 54 578 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(ok. For example, if a drive is replaced, the user would want to verify it with this script.) 54 564 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
576 540 578 720 R
V
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "32" 38
%%Trailer
%%BoundingBox: 0 0 612 792
%%PageOrder: Ascend
%%Pages: 38
%%DocumentFonts: Times-Roman
%%+ Times-Bold
%%+ Times-Italic
%%+ Courier-Bold
%%+ Courier
%%+ Times-BoldItalic
%%EOF
