

Module-specific work:
======================

Media changer:
	remove rump object from mover.py 
	make in to a clinet and sevrer, using the dispathcing_worker
		inheritance mechanism
	study the IBM library, and make the object drive that
		verify that IBM library works at the level of "external label"
		make the load and unload feaure work
		add a feature to contact the port that loads cartriges
		study the power-up behavior of the ibm library, does it
		   know the drives, and does it remove cartrhiges?
		study the library -- does the library mirco compute cleaning
		   cyles and handle cleaning tapes? IF not, add a feature

Mover:
	make it drive the IBM tape drives
	make it coolaborate with a wrapper driver
	

Generic Driver:
	study the problesm and add the following features:
		1) For writing tape, computeremaning uncompressed bytes
		2) For tape, try to distinguish between media failure 
		      and drive failure.
		3) Extractand log any other salient parameters.

Wrapper driver: 
	Implement two:
		choose ether cpio, gnu tar or PAX.
			- requirmetns:  very long path and file names 
				255 byte f.n. 1023 byte path.
		hpss format (read only)
	make sure that the wrapper driver can do things to the tape drive,
	like write file marks, so that in the future we can put ANSI labelled
	tapes into the system. CDF might insist....
	

Mover:
	When statring up, grab a UDP port.
	Make that UDP port known to the library manager.  (L.M. may use
		that to 'try to' summon a mover instaed of waiting for one 
		to time out and contact it...
	
	incorporate wrapper driver
	look at all the error paths, esp when talking to encp.

Library Manager:
	Make one which will record, then bounce requests for volumes on
		a dead shelf
	Implement html-returngin function
	Implement function to kill queued work, tool for adminsitrator
		to kill queued work. (would give error to encp, which would
		retry...)

Volume Clerk:
	V1 Goal: manager 16,0000 volumes
	Improve persisitency of database (right now it journals and we
		read old journals when re-starting.)	 
	Look at how new volumes are selected for write. How do we decide that 
		a volume is now outside the "width" of a file family, and the 
		volume is closed for writing?
	Look at how volumes are selected from write: SHould they not 
		be selected from a pool of "unallocated" rathern than being
		drawn from a file family.
	Make volume selection sensitve to quota family.
	Maybenew volumes should be selected more in accordance with the order
		they wereput into the library?

File Clerk:
	V1 goal 10E6 files.
	Imporove persistency beyon the simple journal
	on reads, make encp call volume manager and library manager


encp:
	Give specified error behavior
	add retrys in accordance with end-to-end error handling philosophy
	interface to pnfs for control and administrative parameters
	re-write in C.

Configuration Sevrver:
	load parameters from the command line
	
callback:
	eliminate potential deadlock mover and clients bot arbitrating for
	saem pool of TCP ports, if move rcannot use one port.

Packaging tasks:
================
	UPS-ify the package
	

System software engineering consistency:
========================================

	end-to-end error analysis
	file of constants
	file of exceptions
	transit of a dictionary


Tests:
======

	Package short test which operates from a file
	short test from a library
	stress test to a library
	whatch memory use, port use, fd use.

