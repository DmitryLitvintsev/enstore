name: Build RPM and Release

on: 
  push:
    paths: rpm_version
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    container: enstoredev/enstore-build:latest
    steps:
    - uses: actions/checkout@v2
    - name: Prepare Build Files
      run: |
       tar czvf ~/enstore.tgz .
       ln -s "$(pwd)" ~/enstore
       mkdir -p ~/rpmbuild/SOURCES
       cp ~/enstore.tgz ~/rpmbuild/SOURCES/
    - name: Apply RPM Version
      id: prepare_build
      run: |
       mkdir -p ~/rpmbuild/SPECS
       source ./rpm_version
       ./build_versioned_spec.sh | tee ~/rpmbuild/SPECS/enstore_rpm.spec
       echo "::set-output name=release_name::enstore-nonprod-${EVersion}-${ERelease}.${ECommit}"
    - name: Build Enstore RPM
      run: |
       cd ~/rpmbuild/
       rpmbuild -ba SPECS/enstore_rpm.spec
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ github.token }}
      with:
        tag_name: ${{ steps.prepare_build.outputs.release_name }}
        release_name: Release ${{ steps.prepare_build.outputs.release_name }}
        draft: false
        prerelease: false
    - name: Upload Enstore RPM as Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ github.token }}  
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: /github/home/rpmbuild/RPMS/x86_64/{{ steps.prepare_build.outputs.release_name }}.el7.x86_64.rpm
        asset_name: ${{ steps.prepare_build.outputs.release_name }}-rpm
        asset_content_type: application/octet-stream
